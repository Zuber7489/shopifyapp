  {% comment %}
  The user provided a .tsx file, but the content is Shopify Liquid, HTML, CSS, and JavaScript.
  This is the updated version with:
  - Touch swipe for carousels
  - Price formatting handled by Shopify
  - Updated bundle button styles
  - Video support in the 5-Star Functions section (now including .mov attempt)
  - Added Left/Right arrow navigation to the image/video modal.
  - Added Zoom In (+) and Zoom Out (-) buttons to the image modal.
  {% endcomment %}
  
  <style>
  @font-face {
    font-family: 'Neue Haas Display';
    src: url('{{ "NeueHaasDisplayBlack.ttf" | asset_url }}') format('truetype');
    font-weight: 900;
    font-style: normal;
  }
  
  @font-face {
    font-family: 'Neue Haas Display';
    src: url('{{ "NeueHaasDisplayBold.ttf" | asset_url }}') format('truetype');
    font-weight: 700;
    font-style: normal;
  }
  
  @font-face {
    font-family: 'Neue Haas Display';
    src: url('{{ "NeueHaasDisplayMedium.ttf" | asset_url }}') format('truetype');
    font-weight: 500;
    font-style: normal;
  }
  
  @font-face {
    font-family: 'Neue Haas Display';
    src: url('{{ "NeueHaasDisplayRoman.ttf" | asset_url }}') format('truetype');
    font-weight: 400;
    font-style: normal;
  }
  
  @font-face {
    font-family: 'Neue Haas Display';
    src: url('{{ "NeueHaasDisplayLight.ttf" | asset_url }}') format('truetype');
    font-weight: 300;
    font-style: normal;
  }
  
  @font-face {
    font-family: 'Neue Haas Display';
    src: url('{{ "NeueHaasDisplayThin.ttf" | asset_url }}') format('truetype');
    font-weight: 100;
    font-style: normal;
  }
  
  /* Global font styles */
  body,
  h1, h2, h3, h4, h5, h6,
  p, span, div, button, input, select, textarea,
  .product-title,
  .product-tagline,
  .selectsizeadjust,
  .bundleandsave,
  .fivestarfunctionssizeadjust,
  .functiondescriptionadjust,
  .testimonial-section h3,
  .testimonial-section p,
  .related-products-section h2,
  .reviews-section h2,
  .comparemobilebtn,
  .pricesizeadjust {
    font-family: 'Neue Haas Display', sans-serif !important;
  }
  
  /* Specific font weights */
  h1, h2, .product-title { font-weight: 700 !important; }
  h3, .bundleandsave { font-weight: 500 !important; }
  p, .functiondescriptionadjust { font-weight: 300 !important; }
  .product-tagline { font-weight: 300 !important; }
  
  /* MOBILE-SPECIFIC STYLES */
  @media (max-width: 900px) {
    /* Product Image: ONLY images edge-to-edge, keep spacing for other content */
    .product-gallery,
    .gallery-container,
    .mobile-single-image,
    .single-image-container {
      margin-left: -20px !important;
      margin-right: -20px !important;
      padding-left: 0 !important;
      padding-right: 0 !important;
      width: calc(100% + 40px) !important;
      max-width: calc(100% + 40px) !important;
    }
    .functions-section{
          padding-top: 10px !important;
    }
    .desktop-grid {
      padding: 0 !important;
      margin-left: -20px !important;
      margin-right: -20px !important;
      width: calc(100% + 40px) !important;
      max-width: calc(100% + 40px) !important;
    }
    
    /* Ensure image fills complete width */

    #mobileMainVideo {
      width: 100% !important;
      max-width: 100% !important;
      padding-left:65px !important;
    }
        #mobileMainImage{
      width: 100% !important;
      max-width: 100% !important;
      padding-left:40px !important;
    }
    /* Keep normal spacing for other content */
    .product-details,
    /* .product-header, */
    .detailbox {
      margin-left: 0 !important;
      margin-right: 0 !important;
      padding-left: 15px !important;
      padding-right: 15px !important;
    }
    
    /* Product Title: Mobile responsive font size */
    .product-title,
    #dynamicProductTitle {
      font-size: 26px !important;
      margin-left: -1px !important;
    }
    
    /* Accordion headers: Font size 18px */
    .accordion-header h3,
    .accordion-header .accordionadjust {
      font-size: 18px !important;
    }
    
    /* Text in accordion dropdown: font size 14px, letter spacing 0.5px, color #000 */
    .accordion-content,
    .description-content,
    .mobilefeaturehighlighted,
    .specs-content,
    .shipping-content,
    .warranty-content {
      font-size: 14px !important;
      letter-spacing: 0.5px !important;
      color: #000 !important;
    }
    
    /* Ensure strong tags in specs are bold */
    .specs-content strong {
      font-weight: bold !important;
      color: #000 !important;
    }
    
    /* Bundle & save Header: Font size 24px, font weight 600, letter spacing 0.5px */
    .bundleandsave {
      font-size: 24px !important;
      font-weight: 600 !important;
      letter-spacing: 0.5px !important;
      margin-left: -1px !important;
    }
    
    /* 5-Star Function Header: Font size 24px, font weight 600, letter spacing 0.5px */
    .fivestarfunctionssizeadjust {
      font-size: 24px !important;
      font-weight: 600 !important;
      letter-spacing: 0.5px !important;
      text-align: left !important;
      margin: 18px 14px !important;
    }
    
    /* 5-Star Function Images: Make bigger so second image shows 50% less */
    .function-media-container {
      min-width: 320px !important;
      max-width: 320px !important;
      height: 420px !important;
      flex: 0 0 320px !important;
    }
    
    .function-media-container img,
    .function-media-container video {
      min-width: 320px !important;
      max-width: 320px !important;
      min-height: 420px !important;
      max-height: 420px !important;
    }
    
    .function-item {
      min-width: 286px !important;
      max-width: 324px !important;
      flex: 0 0 320px !important;
    }
    
    /* Review Header: Font size 22px, letter spacing 0.5px, color #000 */
    .testimonial-section h3 {
      font-size: 22px !important;
      letter-spacing: 0.5px !important;
      color: #000 !important;
      font-weight:normal  !important;
    }
    
    /* Review Text (under the stars): Font size 16px, letter spacing 0.5px, color #000 */
    .testimonial-section p,
    .testimonial-text {
      font-size: 16px !important;
      letter-spacing: 0.5px !important;
      color: #000 !important;
    }
    
    /* We think you'll love these header: Font size 24px, font weight 600, letter spacing 0.5px */
    .related-products-section h2,
    .related-products-heading-mobile {
      font-size: 24px !important;
      font-weight: 600 !important;
      letter-spacing: 0.5px !important;
      text-align: left !important;
      margin-left: 16px;
      margin-bottom: 18px !important;
    }
    
    /* We think you'll love these - product price and product title: Font size 16px */
    .related-product-item h3,
    .related-price {
      font-size: 16px !important;
    }
  }
  </style>
  
  <div class="product-container" style="margin: 0 auto; padding: 20px 0; max-width: 100%;">
  {% assign current_variant = product.selected_or_first_available_variant %}
  {% assign featured_image = current_variant.featured_image | default: product.featured_image %}
  
  <div class="containerbb" style="margin: 0 auto; max-width: 100%; margin-top:34px;">
  
    <div class="product-layout" style="display: grid; grid-template-columns: 2.2fr 1fr !important; gap: 20px !important; margin-top: 30px; margin-bottom:20px; padding: 0 15px;">
  
  <!-- Product Image Gallery -->
  <div class="product-gallery" style="position: relative; width: 100%; max-width: 100%;">
   <!-- Gallery Container -->
   <div class="gallery-container" style="position: relative; overflow: hidden; width: 100%;">
     
     <!-- Mobile Single Image View -->
     <div class="mobile-single-image" style="display: none; width: 100%;">
       <div class="single-image-container" style="background-color: #f6f6f6; border-radius: 8px; overflow: hidden; aspect-ratio: 1/1.3; position: relative; margin-bottom: 15px; width: 100%;">
         <img id="mobileMainImage" src="{{ featured_image | img_url: '600x600', crop: 'center' }}" alt="{{ featured_image.alt | escape }}" style="width: 100%; height: 100%; object-fit: cover; background: #f6f6f6; cursor: pointer; display: block;" onclick="openImageModal('{{ featured_image | img_url: '1200x1200' }}')">
         
         <video id="mobileMainVideo" style="width: 100%; height: 100%; object-fit: cover; cursor: pointer; display: block;" controls muted autoplay playsinline onclick="openVideoModal(this)">
           {% if current_variant.metafields.custom.product_video_url %}
             <source src="{{ current_variant.metafields.custom.product_video_url }}" type="video/mp4">
           {% elsif product.metafields.custom.product_video_url %}
             <source src="{{ product.metafields.custom.product_video_url }}" type="video/mp4">
           {% endif %}
         </video>
         
         <!-- Navigation arrows and image counter removed for mobile -->
       </div>
       
       <div class="mobile-thumbnails" style="display: flex; overflow-x: auto; padding: 0 0 10px 0; scrollbar-width: none; -ms-overflow-style: none; width: 100%;" id="mobileThumbnails">
         <!-- Thumbnails will be populated by JavaScript -->
       </div>
     </div>
     
     <!-- Desktop Grid View - Adapts to number of images -->
     <!-- <div class="desktop-grid" style="display: grid; grid-template-columns: 1fr 1fr; gap: 10px; margin-bottom: 20px;" id="desktopGrid"> -->
       <div class="desktop-grid" style="display: grid; grid-template-columns: 1fr 1fr; gap: 10px; margin-bottom: 20px; padding:0px 16px;" id="desktopGrid">
       <!-- Grid items will be populated by JavaScript -->
     </div>
     
     <!-- Dot indicators for the 6th navigable item (desktop only, shown if images > 5) -->
      <div class="gallery-dots desktop-only" style="display: none; justify-content: center; align-items: center; margin-top: 15px; gap: 6px; width: 50%; margin-left: auto;" id="desktopGalleryDots">
       <!-- Dots will be populated by JavaScript -->
     </div>
   </div>
  </div>
  
  <!-- Product Details Card - DYNAMIC CONTENT WITH VARIANT TITLE -->
  <div class="product-details" style="position: sticky;
    top: 20px;
    height: fit-content;
    align-self: flex-start;">
  <div class="product-header" style="text-align: left; margin-bottom: 30px;">
   <!-- DYNAMIC PRODUCT TITLE - VARIANT SPECIFIC -->
   <div class="title-price-row" style="display: flex; align-items: baseline; justify-content: flex-start; gap: 15px;">
     <h1 class="product-title" id="dynamicProductTitle" style="font-size: clamp(28px, 6vw, 40px); font-weight: 500; margin: 0; color: #000; letter-spacing: 1px; line-height: 1.2; font-family: 'Neue Haas Display', sans-serif !important; flex: 1;">
       {% if current_variant.metafields.custom.product_title %}
         {{ current_variant.metafields.custom.product_title }}
       {% else %}
         {{ product.title }}
       {% endif %}
     </h1>
     <div class="pricesizeadjust" style="font-size: 15px; font-weight: bold; color: #111; white-space: nowrap;" id="variantPrice">
       {{ current_variant.price | money }}
     </div>
   </div>
   <!-- DYNAMIC TAGLINE -->
   <div class="product-tagline" id="dynamicTagline" style="font-size: 20px; margin-bottom: 0; font-weight: 400; line-height: 1.4;">
     {% if current_variant.metafields.custom.tagline %}
       {{ current_variant.metafields.custom.tagline }}
     {% elsif product.metafields.custom.tagline %}
       {{ product.metafields.custom.tagline }}
     {% else %}
       Refined, Redesigned, Re-engineered.
     {% endif %}
   </div>
  </div>
    <div class="detailbox" style=" padding: 24px; background: #F6F6F6; box-shadow: 0 14px 28px -14px rgba(0,0,0,0.18); border-radius: 12px; ">
   <!-- Size and Fabric Row -->
   <div class="fabricrowflex" style="display:flex; justify-content: space-between; align-items: flex-start;">
     <div style="flex: 1;">
       <!-- SELECT SIZE Section -->
       {% assign size_option = false %}
       {% assign has_size_options = false %}
  
       {% for option in product.options_with_values %}
         {% assign option_name_lower = option.name | downcase %}
         {% if option_name_lower == 'size' %}
           {% assign size_option = option %}
           {% assign has_size_options = true %}
           {% break %}
         {% endif %}
       {% endfor %}
  
       {% unless has_size_options %}
         {% if product.metafields.custom.size_options != blank %}
           {% assign has_size_options = true %}
         {% endif %}
       {% endunless %}
  
       {% if has_size_options %}
         <div class="size-selection" style="margin-bottom: 10px;">
           <div style="display: flex; align-items: center;  gap: 10px; margin-bottom: 10px;">
             <label class="selectsizeadjust" style="display: block;  color: #333;   font-family: 'Neue Haas Display', sans-serif !important; font-weight:400;  font-size:13px;">Select size:</label>
             <div style="display: flex; background-color: #d8e2e2; border-radius: 20px;">
               {% if size_option %}
                 {% for value in size_option.values %}
                   <!-- <button class="size-option{% if size_option.selected_value == value %} active{% endif %}" 
                          data-value="{{ value | escape }}"
                          style="padding: 8px 40px; border: none; border-radius: 20px; cursor: pointer; font-weight: bold; font-size: 14px; {% if size_option.selected_value == value %}background-color: #2f6f6f; color: white;{% else %}background-color: #d8e2e2; color: #2f6f6f;{% endif %}">
                     {{ value }}
                   </button> -->
                    <button class="size-option{% if size_option.selected_value == value %} active{% endif %}" 
                          data-value="{{ value | escape }}"
                          style="padding: 5px 30px; border: none; border-radius: 20px; cursor: pointer; font-weight: bold; font-size: 12px; {% if size_option.selected_value == value %}background-color: #2f6f6f; color: white;{% else %}background-color: #d8e2e2; color: #2f6f6f;{% endif %}">
                     {{ value }}
                   </button>
                 {% endfor %}
               {% else %}
                 {% assign size_values = product.metafields.custom.size_options.value | split: ',' %}
                 {% for size in size_values %}
                   <button class="size-option{% if forloop.first %} active{% endif %}" 
                          data-value="{{ size | strip | escape }}"
                          style="padding: 0px 36px; border: none; border-radius: 20px; cursor: pointer; font-weight: bold; font-size: 12px; {% if forloop.first %}background-color: #2f6f6f; color: white;{% else %}background-color: #d8e2e2; color: #2f6f6f;{% endif %}">
                     {{ size | strip }}
                   </button>
                 {% endfor %}
               {% endif %}
             </div>
           </div>
         </div>
       {% endif %}
  
       <!-- SELECT FABRIC & COLOR Section -->
       {% assign fabric_option = false %}
       {% assign color_option = false %}
       {% assign has_fabric_options = false %}
       {% assign has_color_options = false %}
       {% assign display_option = false %}
  
       {% comment %}First, look for dedicated Fabric option{% endcomment %}
       {% for option in product.options_with_values %}
         {% assign option_name_lower = option.name | downcase %}
         {% if option_name_lower == 'fabric' %}
           {% assign fabric_option = option %}
           {% assign has_fabric_options = true %}
           {% assign display_option = option %}
           {% break %}
         {% endif %}
       {% endfor %}
       
       {% comment %}If no Fabric option found, look for Color option (backward compatibility){% endcomment %}
       {% unless has_fabric_options %}
         {% for option in product.options_with_values %}
           {% assign option_name_lower = option.name | downcase %}
           {% if option_name_lower == 'color' or option_name_lower == 'colour' %}
             {% assign fabric_option = option %}
             {% assign has_fabric_options = true %}
             {% assign display_option = option %}
             {% break %}
           {% endif %}
         {% endfor %}
       {% endunless %}
       
       {% comment %}Also check for separate Color option (for future use){% endcomment %}
       {% for option in product.options_with_values %}
         {% assign option_name_lower = option.name | downcase %}
         {% if option_name_lower == 'color' or option_name_lower == 'colour' %}
           {% unless option_name_lower == 'fabric' %}
             {% assign color_option = option %}
             {% assign has_color_options = true %}
           {% endunless %}
         {% endif %}
       {% endfor %}
  
       {% if has_fabric_options or has_color_options %}
         <!-- Start new flex row for fabric and compare/reviews -->
         <div class="fabric-compare-row" style="display: flex; align-items: flex-start; justify-content: space-between; gap: 48px; margin-bottom: 10px; flex-wrap: wrap;">
           <!-- Left: Fabric label, selected color, swatches -->
           <div style="display: flex; flex-direction: column; align-items: flex-start;">
             <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 6px;">
               <label class="selectsizeadjust" style="display: block; color: #333; font-family: 'Neue Haas Display', sans-serif !important; font-weight:400; margin-bottom: 0;  font-size: 13px;">
                 {% if has_fabric_options %}Select fabric:{% elsif has_color_options %}Select color:{% else %}Select option:{% endif %}
               </label>
               <div style="font-size: 14px; color: #333; font-family: 'Neue Haas Display', sans-serif !important;" id="selectedFabricName">
                 {{ display_option.selected_value | default: display_option.values.first }}
               </div>
             </div>
             <div class="fabric-options" style="display: flex; gap: 19px; flex-wrap: wrap;">
               {% for value in display_option.values %}
                 {% assign fabric_variant = product.variants | where: 'option1', value | first %}
                 {% unless fabric_variant %}
                   {% assign fabric_variant = product.variants | where: 'option2', value | first %}
                 {% endunless %}
                 {% unless fabric_variant %}
                   {% assign fabric_variant = product.variants | where: 'option3', value | first %}
                 {% endunless %}
                 <div class="fabric-option{% if display_option.selected_value == value or forloop.first and display_option.selected_value == blank %} active{% endif %}"
                      data-value="{{ value | escape }}"
                      data-variant-id="{{ fabric_variant.id }}"
                      style="width: 75px; height: 75px; border-radius: 8px; cursor: pointer; border: 3px solid lightgray; overflow: hidden; transition: all 0.3s ease; position: relative;">
                   {% if fabric_variant.featured_image %}
                     <img src="{{ fabric_variant.featured_image | img_url: '100x100', crop: 'center' }}"
                          alt="{{ value }}"
                          style="width: 100%; height: 100%; object-fit: contain; background: #f6f6f6;">
                   {% else %}
                     <div style="width: 100%; height: 100%; background-color: {% if value == 'Black' %}#000{% elsif value == 'Blue' %}#005BD3{% else %}#ccc{% endif %}; display: flex; align-items: center; justify-content: center; color: white; font-size: 10px; font-weight: bold;">
                       {{ value | slice: 0, 2 | upcase }}
                     </div>
                   {% endif %}
                 </div>
               {% endfor %}
             </div>
           </div>
           <!-- Right: Compare Bags button and reviews -->
           <div class="mobile-compare-review" style="display: flex; flex-direction: column; align-items: flex-end; min-width: 130px; display:none;">
             <button class="comparemobilebtn" id="compareBtnMobile" style="border: 2px solid #2f7d7d; color: #2f7d7d; background: transparent; padding: 6px 16px; border-radius: 20px; font-size: 18px; cursor: pointer; margin-bottom: 6px; position: relative; z-index: 100;" onclick="openCompareBagsModalV2()">
    Compare bags
  </button>
          </div>
          <div class="reviewadjust" style="font-size: 16px; color: #2f7d7d; cursor: pointer; margin-top: 0; text-align: right; display:none;" onclick="scrollToReviews()">
            {% render 'judgeme_widgets', widget_type: 'judgeme_preview_badge', concierge_install: true, product: product %}
          </div>
         </div>
         <!-- End new flex row -->
       {% endif %}
     </div>
  
     <!-- Always show reviews on mobile (and desktop) -->
     <div class="reviewadjust mobile-only-reviews" style="font-size: 16px; color: #2f7d7d; cursor: pointer; margin-top: 0; text-align: right; margin-bottom: 10px;" onclick="scrollToReviews()">
       {% render 'judgeme_widgets', widget_type: 'judgeme_preview_badge', concierge_install: true, product: product %}
     </div>
  
     <!-- Price - Positioned differently based on whether there are fabric/color options -->
     {% if has_fabric_options or has_color_options %}
       <!-- When there are fabric/color options, price is positioned with top offset -->
       <div class="pricesizeadjust" style="font-size: 15px; font-weight: bold; color: #111; position:relative; top: 26px;" id="variantPrice">
         {{ current_variant.price | money }}
       </div>
     {% else %}
       <!-- When there are no fabric/color options, price is positioned normally -->
       <div class="pricesizeadjust" style="font-size: 15px; font-weight: bold; color: #111; margin-left: 20px;" id="variantPrice">
         {{ current_variant.price | money }}
       </div>
     {% endif %}
   </div>
     
    
   <!-- Images and Rating -->
  <div class="responsive-flex" style="display: flex; flex-direction: column; align-items: flex-end; gap: 4px;">
    <button id="compareBtnDesktop" class="comparedesktopbtn" style="border: 2px solid #2f7d7d; color: #2f7d7d; background: transparent; padding: 6px 16px; border-radius: 20px; font-size: 18px; cursor: pointer; margin: 0; position: relative; z-index: 100; pointer-events: auto; display:none;" onclick="openCompareBagsModalV2()">
      Compare bags
    </button>
    <div class="review-fix" style="display: flex; align-items: center; gap: 8px; color: #2f6f6f;">
      <div class="reviewadjust" style="font-size: 14px; color: #444; cursor: pointer;" onclick="scrollToReviews()">
        {% render 'judgeme_widgets', widget_type: 'judgeme_preview_badge', concierge_install: true, product: product %}
      </div>
    </div>
  </div>
  
  
   <!-- <hr style="border: none; border-top: 1px solid #ddd; margin: 20px 0;"> -->
  <!-- Add to Cart and Benefits -->
   <div style="text-align: center;">
     <!-- Add to Cart Form -->
     <form action="/cart/add" method="post" enctype="multipart/form-data" id="AddToCartForm">
       <select name="id" id="ProductSelect" class="product-single__variants no-js" style="display: none;">
         {% for variant in product.variants %}
           {% if variant.available %}
             <option value="{{ variant.id }}" {% if variant == current_variant %}selected="selected"{% endif %}>
               {{ variant.title }} - {{ variant.price | money_with_currency }}
             </option>
           {% else %}
             <option disabled="disabled">
               {{ variant.title }} - Sold Out
             </option>
           {% endif %}
         {% endfor %}
       </select>
  
       <button type="submit" name="add" id="AddToCart" class="btn add-to-cart-button{% unless current_variant.available %} disabled{% endunless %}" style="width: 100%; padding: 16px 24px; background-color: #111; color: white; border: none; border-radius: 999px; font-size: 18px; font-weight: bold; cursor: pointer;border-radius:31px !important; margin-bottom: -7px; transition: background 0.3s; {% unless current_variant.available %}background-color: #ccc; cursor: not-allowed;{% endunless %}">
         <span id="AddToCartText">{% if current_variant.available %}Add to bag{% else %}Sold out{% endif %}</span>
       </button>
     </form>
  
     <!-- Shop Pay Installments Integration -->
     <div class="shop-pay-installments" style="margin-top: 15px;">
       {{ form | payment_button }}
       
       {% if current_variant.price >= 5000 %}
         <div class="installments-info" style="margin-top: 10px; text-align: center; font-size: 10px; color: #666;">
           {% assign installment_amount = current_variant.price | divided_by: 4 %}
           <span>4 interest-free payments of {{ installment_amount | money }} with </span>
           <img src="https://upload.wikimedia.org/wikipedia/commons/1/1d/Shop_Pay_logo.svg" alt="Shop Pay" style="height: 16px; vertical-align: middle; margin-left: 4px;">
           <span><a href="#" onclick="Shopify.ShopPay.Installments.Modal.toggle(); return false;" style="color: inherit; text-decoration: underline;">check your purchasing power</a></span>
         </div>
       {% endif %}
     </div>
  
     <!-- <hr style="border: none; border-top: 1px solid #ddd; margin: 20px 0;"> -->
  <!-- Product Features Icons - MOBILE RESPONSIVE -->
     <!-- <div class="iconshide" style="display: flex; flex-wrap: wrap; justify-content: space-around; margin-top: 24px;"> -->
       <div class="iconshide" style="display: flex;  justify-content: space-around; margin-top: 24px;">
       <div style="flex: 1 1 100px; min-width: 100px; max-width: 150px; text-align: center;">
  <svg fill="#000000" height="40px" width="40px" style="margin-bottom:8px" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 512 512" xml:space="preserve"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <g> <path d="M503.673,243.579c-5.323-6.344-12.584-10.467-20.908-12.008l-3.91-53.066c3.857-0.037,7.146-2.815,7.818-6.622 l1.508-8.551c1.616-9.166-0.638-18.214-6.185-24.823c-5.54-6.602-13.651-10.239-22.84-10.239h-58.854l2.865-16.245 c0.813-4.614-0.365-9.221-3.231-12.637c-2.838-3.382-7.105-5.322-11.707-5.322H98.524c-8.567,0-16.453,6.665-17.954,15.176 L54.939,254.609c-0.768,4.36,2.143,8.518,6.503,9.286c0.47,0.083,0.938,0.123,1.401,0.123c3.817,0,7.2-2.737,7.885-6.626 L96.36,112.025c0.169-0.957,1.401-1.927,2.163-1.927l288.702,0.001l-25.481,144.51c-0.769,4.36,2.142,8.518,6.503,9.286 c4.355,0.767,8.518-2.143,9.286-6.503l1.848-10.479h95.866c0.003,0,0.007,0,0.011,0s0.008,0,0.011,0 c6.626,0.001,12.351,2.476,16.122,6.969c2.595,3.093,4.109,6.943,4.473,11.202h-26.629c-3.891,0-7.219,2.793-7.895,6.625 l-3.015,17.102c-1.215,6.89,0.501,13.717,4.707,18.73c4.148,4.945,10.445,7.78,17.274,7.78h7.548l-6.22,35.273h-21.165 c-1.393-7.055-4.442-13.544-9.063-19.049c-8.199-9.773-20.265-15.154-33.972-15.154c-21.979,0-43.184,14.38-53.111,34.204h-3.223 l10.403-58.999c0.768-4.36-2.142-8.518-6.503-9.286c-4.358-0.77-8.518,2.142-9.286,6.503l-10.894,61.783H196.418 c-1.393-7.055-4.442-13.543-9.063-19.049c-8.2-9.773-20.265-15.154-33.973-15.154c-21.979,0-43.184,14.38-53.111,34.204 l-45.978-0.001l3.204-18.17h36.029c4.427,0,8.017-3.589,8.017-8.017c0-4.427-3.589-8.017-8.017-8.017H8.017 c-4.427,0-8.017,3.589-8.017,8.017c0,4.427,3.589,8.017,8.017,8.017h33.201l-2.865,16.245c-0.813,4.614,0.365,9.221,3.231,12.637 c2.838,3.382,7.105,5.322,11.707,5.322h41.774c-2.173,13.599,1.093,26.41,9.268,36.151c8.2,9.773,20.265,15.154,33.973,15.154 c27.284,0,53.387-22.151,58.188-49.38c0.113-0.645,0.202-1.286,0.292-1.926h162.331c-2.174,13.598,1.092,26.409,9.268,36.151 c8.2,9.773,20.265,15.154,33.973,15.154c27.284,0,53.387-22.151,58.188-49.38c0.113-0.645,0.202-1.286,0.292-1.926h27.525 c3.891,0,7.219-2.793,7.895-6.625l15.078-85.51C513.382,262.886,510.661,251.907,503.673,243.579z M382.21,230.883l9.235-52.375 h71.336l3.859,52.375H382.21z M472.391,160.549l-0.34,1.926h-77.78l3.204-18.171h61.681c4.367,0,8.117,1.602,10.557,4.511 C472.243,151.829,473.195,155.995,472.391,160.549z M180.705,365.773c-3.512,19.923-22.533,36.13-42.399,36.13 c-8.886,0-16.59-3.348-21.691-9.426c-5.248-6.255-7.248-14.749-5.631-23.919c3.513-19.923,22.533-36.13,42.399-36.13 c8.886,0,16.59,3.348,21.691,9.427C180.322,348.108,182.322,356.603,180.705,365.773z M444.756,365.773 c-3.513,19.923-22.533,36.13-42.399,36.13c-8.886,0-16.59-3.348-21.691-9.427c-5.248-6.255-7.248-14.749-5.631-23.919 c3.512-19.923,22.533-36.13,42.399-36.13c8.885,0,16.59,3.348,21.691,9.427C444.373,348.108,446.373,356.603,444.756,365.773z M490.681,299.292h-10.375v-0.001c-2.139,0-3.865-0.71-4.992-2.052c-1.169-1.394-1.596-3.397-1.2-5.64l1.848-10.477h17.923 L490.681,299.292z"></path> </g> </g> <g> <g> <path d="M159.06,355.919c-2.838-3.382-7.105-5.322-11.708-5.322c-8.567,0-16.453,6.665-17.954,15.176 c-0.813,4.614,0.365,9.221,3.231,12.637c2.838,3.382,7.105,5.322,11.707,5.322c8.567,0,16.453-6.666,17.954-15.175 C163.104,363.942,161.927,359.336,159.06,355.919z"></path> </g> </g> <g> <g> <path d="M423.111,355.919c-2.839-3.382-7.106-5.322-11.707-5.322c-8.567,0-16.453,6.665-17.953,15.175 c-0.813,4.615,0.363,9.221,3.23,12.638c2.838,3.382,7.105,5.322,11.707,5.322c8.567,0,16.453-6.666,17.954-15.175 C427.156,363.942,425.978,359.336,423.111,355.919z"></path> </g> </g> <g> <g> <path d="M323.374,316.393H221.791c-4.427,0-8.017,3.589-8.017,8.017c0,4.427,3.589,8.017,8.017,8.017h101.583 c4.427,0,8.017-3.589,8.017-8.017C331.39,319.982,327.801,316.393,323.374,316.393z"></path> </g> </g> <g> <g> <path d="M179.036,282.189H31.15c-4.427,0-8.017,3.589-8.017,8.017c0,4.427,3.588,8.017,8.017,8.017h147.886 c4.427,0,8.017-3.589,8.017-8.017C187.053,285.778,183.464,282.189,179.036,282.189z"></path> </g> </g> <g> <g> <path d="M332.127,249.936l-29.68-25.653c-3.35-2.894-8.412-2.527-11.308,0.823c-2.896,3.35-2.527,8.412,0.823,11.308 l13.388,11.572H102.077c-4.427,0-8.017,3.589-8.017,8.017c0,4.427,3.589,8.017,8.017,8.017h198.189l-16.535,10.954 c-3.692,2.444-4.701,7.419-2.256,11.11c1.542,2.329,4.092,3.59,6.69,3.59c1.52,0,3.058-0.432,4.42-1.335l38.727-25.653 c2.092-1.384,3.413-3.668,3.573-6.172C335.045,254.009,334.025,251.575,332.127,249.936z"></path> </g> </g> </g></svg>
         <p style="font-weight: 800; font-size: 11px; color: #111; margin: 0; letter-spacing: 0.5px;">Fast Free Shipping</p>
       </div>
       <div style="flex: 1 1 100px; min-width: 100px; max-width: 150px; text-align: center;">
        <svg xmlns="http://www.w3.org/2000/svg" shape-rendering="geometricPrecision" text-rendering="geometricPrecision" image-rendering="optimizeQuality" fill-rule="evenodd" clip-rule="evenodd" viewBox="0 0 505 511.5" width="40" height="40" style="margin-bottom: 8px;">
    <path d="m336.11 39.84-115.38 68.94 135.38 18.4 111.32-69.44-131.32-17.9zm25.45 204.61c73.74 0 133.53 59.78 133.53 133.53 0 73.74-59.79 133.52-133.53 133.52-73.75 0-133.53-59.78-133.53-133.52 0-73.75 59.78-133.53 133.53-133.53zm-50.44 179.72 15.51-78.82 15.73 23.69c33.86-13.59 52.88-36 55.7-70.5 27.82 48.63 10.93 92.22-24.33 117.77l16.05 24.16-78.65-16.3h-.01zM204.83 126.13l-.09 141.71-51.45-35.04-51.46 29.07 6.1-148.91-88.54-12.03v312.98l178.95 23.13c2.52 7.1 5.47 13.99 8.85 20.63L9.3 432.07c-5.17-.2-9.3-4.47-9.3-9.68V89.86c.27-4.05 1.89-6.89 5.72-8.81L182.48.85c1.58-.72 3.52-1.01 5.25-.77l308.18 42.04c5.09.59 8.58 4.77 8.58 9.99v.02L505 280.9c-5.72-8.46-15.57-20.29-19.93-27.77V69.56l-115.81 74.93v59.81a174.846 174.846 0 0 0-19.39.36v-58.82l-145.04-19.71zm-81.52-30.58 112.17-69.44-47.58-6.49L44.24 84.8l79.07 10.75z"/>
  </svg>
         <p style="font-weight: bold; font-size: 11px; color: #111; margin: 0;">Easy Returns</p>
       </div>
       <div style="flex: 1 1 100px; min-width: 100px; max-width: 150px; text-align: center;">
      <svg viewBox="0 -0.5 25 25" fill="none" xmlns="http://www.w3.org/2000/svg" width="40" height="40" style="margin-bottom: 8px;">
    <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
    <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
    <g id="SVGRepo_iconCarrier">
      <path d="M10.4608 1.50732C11.2607 0.539132 12.7446 0.539132 13.5445 1.50732L14.7445 2.95979C15.1677 3.472 15.8176 3.74061 16.4789 3.67664L18.3571 3.49495C19.6102 3.37372 20.6624 4.42666 20.5402 5.67974L20.3597 7.53129C20.2949 8.1958 20.566 8.84883 21.0823 9.2721L22.5232 10.4533C23.4993 11.2534 23.4993 12.7466 22.5232 13.5467L21.0823 14.7279C20.566 15.1512 20.2949 15.8042 20.3597 16.4687L20.5402 18.3203C20.6624 19.5733 19.6102 20.6263 18.3571 20.505L16.4789 20.3234C15.8176 20.2594 15.1677 20.528 14.7445 21.0402L13.5445 22.4927C12.7446 23.4609 11.2607 23.4609 10.4608 22.4927L9.26079 21.0402C8.83761 20.528 8.18769 20.2594 7.52637 20.3234L5.64824 20.505C4.39507 20.6263 3.34293 19.5733 3.4651 18.3203L3.64562 16.4687C3.71041 15.8042 3.43933 15.1512 2.92298 14.7279L1.48208 13.5467C0.505968 12.7466 0.505968 11.2534 1.48208 10.4533L2.92298 9.2721C3.43933 8.84883 3.71041 8.1958 3.64562 7.53129L3.4651 5.67974C3.34293 4.42666 4.39507 3.37372 5.64824 3.49495L7.52637 3.67664C8.18769 3.74061 8.83761 3.472 9.26079 2.95979L10.4608 1.50732Z" stroke="#71717A" stroke-width="1.5"></path>
      <path d="M8.12549 12.7725L10.4136 15.0516C10.8437 15.48 11.5531 15.4296 11.9182 14.9446L15.8801 9.68274" stroke="#71717A" stroke-width="1.5" stroke-linecap="round"></path>
    </g>
  </svg>
         <p style="font-weight: bold; font-size: 11px; color: #111; margin: 0;">Lifetime Warranty</p>
       </div>
       <div style="flex: 1 1 100px; min-width: 100px; max-width: 150px; text-align: center;">
         <svg width="40" height="40" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="margin-bottom: 8px;">
           <path d="M14 9V5C14 3.89543 13.1046 3 12 3C10.8954 3 10 3.89543 10 5V9M3 9H21L20 20H4L3 9Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
         </svg>
         <p style="font-weight: 800; font-size: 11px; color: #111; margin: 0; letter-spacing: 0.5px;">Buy Now Pay Later</p>
       </div>
     </div>
   </div>
  
   <!-- <hr style="border: none; border-top: 1px solid #ddd; margin: 20px 0;"> -->
  <!-- DYNAMIC Feature Highlights Section - VARIANT-SPECIFIC -->
   <div style="margin-top: 32px; color: #333;" id="dynamicFeatureHighlights">
     <h3 class="featurehighlightshide" style="font-size: 18px; font-weight: 500; margin-bottom: 16px;">Feature highlights:</h3>
     <div class="featurehighlightshide" style="display: flex; gap: 67px;">
       <ul style="flex: 1 1 300px; list-style: none; padding: 0; margin: 0;" id="featureHighlightsLeft">
         {% if current_variant.metafields.custom.features %}
           {% assign features = current_variant.metafields.custom.features.value | default: current_variant.metafields.custom.features | split: ',' %}
           {% assign half_count = features.size | divided_by: 2 | ceil %}
           {% for feature in features limit: half_count %}
             <li style="margin-bottom: 12px; font-size: 13px; letter-spacing: 0.5px; position: relative; padding-left: 18px; text-indent: -10px; line-height: 1.4; font-weight: 400; color: #111;">• {{ feature | strip | newline_to_br }}</li>
           {% endfor %}
         {% else %}
           {% assign parent_features = product.metafields.custom.features.value | default: product.metafields.custom.features | split: ',' %}
           {% assign half_count = parent_features.size | divided_by: 2 | ceil %}
           {% for feature in parent_features limit: half_count %}
             <li style="margin-bottom: 12px; font-size: 13px; letter-spacing: 0.5px; position: relative; padding-left: 18px; text-indent: -10px; line-height: 1.4; font-weight: 400; color: #111;">• {{ feature | strip | newline_to_br }}</li>
           {% endfor %}
         {% endif %}
       </ul>
       <ul style="flex: 1 1 300px; list-style: none; padding: 0; margin: 0;" id="featureHighlightsRight">
         {% if current_variant.metafields.custom.features %}
           {% assign features = current_variant.metafields.custom.features.value | default: current_variant.metafields.custom.features | split: ',' %}
           {% assign half_count = features.size | divided_by: 2 | ceil %}
           {% for feature in features offset: half_count %}
             <li style="margin-bottom: 12px; font-size: 13px; letter-spacing: 0.5px; position: relative; padding-left: 18px; text-indent: -10px; line-height: 1.4; font-weight: 400; color: #111;">• {{ feature | strip | newline_to_br }}</li>
           {% endfor %}
         {% else %}
           {% assign parent_features = product.metafields.custom.features.value | default: product.metafields.custom.features | split: ',' %}
           {% assign half_count = parent_features.size | divided_by: 2 | ceil %}
           {% for feature in parent_features offset: half_count %}
             <li style="margin-bottom: 12px; font-size: 13px; letter-spacing: 0.5px; position: relative; padding-left: 18px; text-indent: -10px; line-height: 1.4; font-weight: 400; color: #111;">• {{ feature | strip | newline_to_br }}</li>
           {% endfor %}
         {% endif %}
       </ul>
     </div>
   </div>
           </div>
             
  <!-- FIXED ACCORDION SECTIONS - SPECS FIXED -->
  <div class="accordion-contain" style="margin-top:15px">
    <!-- MOBILE FEATURE HIGHLIGHTS ACCORDION -->
  <div class="mobile-feature-highlights-accordion" style="display:none; ">
    <div class="accordion-item" style="border-bottom: 1px solid #eee; margin-bottom: 0;">
      <div class="accordion-header" style="padding: 15px 0; cursor: pointer; display: flex; justify-content: space-between; align-items: center;" onclick="toggleMobileFeatureHighlights()">
        <h3 style="font-size: 15px; font-weight: 400; margin: 0;  color: #000;">Feature Highlights:</h3>
        <span class="accordion-icon" id="mobile-featurehighlights-icon" style="transition: transform 0.3s ease; transform: rotate(0deg); color:black">
           <svg width="20" height="20" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
         <path d="M4 6L8 10L12 6" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
       </svg>
        </span>
      </div>
      <div class="accordion-content" id="mobile-featurehighlights-content" style="max-height: 0; overflow: hidden; transition: max-height 0.3s ease;">
        <ul class="mobilefeaturehighlighted" style="padding: 0 0 15px 18px; margin: 0; color: black; font-size: 14px; line-height: 1.7;">
          {% if current_variant.metafields.custom.features %}
            {% assign features = current_variant.metafields.custom.features.value | default: current_variant.metafields.custom.features | split: ',' %}
            {% for feature in features %}
              <li style="margin-bottom: 8px; list-style: disc;">{{ feature | strip | newline_to_br }}</li>
            {% endfor %}
          {% else %}
            {% assign parent_features = product.metafields.custom.features.value | default: product.metafields.custom.features | split: ',' %}
            {% for feature in parent_features %}
              <li style="margin-bottom: 8px; list-style: disc;">{{ feature | strip | newline_to_br }}</li>
            {% endfor %}
          {% endif %}
        </ul>
      </div>
    </div>
  </div>
    <!-- Dynamic Description Accordion -->
  <div class="accordion-item" style="margin-bottom: 0; padding-left:10px; padding-right:10px; border-bottom: 1px solid #eee;">
    
   <div class="accordion-header" style="padding: 15px 0; cursor: pointer; display: flex; justify-content: space-between; align-items: center;" data-section="description">
     <h3 class="accordionadjust" style="font-size: 20px; font-weight: 500; margin: 0;  color: #000;">Description:</h3>
     <span class="accordion-icon" id="description-icon" style="transition: transform 0.3s ease; transform: rotate(0deg); color:black">
       <svg width="20" height="20" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
         <path d="M4 6L8 10L12 6" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
       </svg>
     </span>
   </div>
   <div class="accordion-content" id="description-content" style="max-height: 0; overflow: hidden; transition: max-height 0.3s ease;">
     <div class="description-content" id="dynamicDescription" style="padding-bottom: 15px; color: #666; line-height: 1.6;">
       {% if current_variant.metafields.custom.description %}
         {{ current_variant.metafields.custom.description }}
       {% else %}
         {{ product.description }}
       {% endif %}
     </div>
   </div>
  </div>
  
  <!-- FIXED Dynamic Specs & Materials Accordion -->
  <div class="accordion-item" style="margin-bottom: 0; padding-left:10px; padding-right:10px; border-bottom: 1px solid #eee;">
    <hr class="desktop-divider" style="border: none; height: 2px; background-color: #eee; margin: 0; width: 100%; margin-left: 0; display: none;">
    <div class="accordion-header" style="padding: 15px 0; cursor: pointer; display: flex; justify-content: space-between; align-items: center;" data-section="specs">
      <h3 class="accordionadjust" style="font-size: 20px; font-weight: 500; margin: 0;  color: #000;">Specs & materials:</h3>
      <span class="accordion-icon" id="specs-icon" style="transition: transform 0.3s ease; transform: rotate(0deg); color:black">
        <svg width="20" height="20" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M4 6L8 10L12 6" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
        </svg>
      </span>
    </div>
    <div class="accordion-content" id="specs-content" style="max-height: 0; overflow: hidden; transition: max-height 0.3s ease;">
      <div class="specs-content" id="dynamicSpecs" style="padding-bottom: 15px; color: #666; line-height: 1.6;">
        {% if current_variant.metafields.custom.specs %}
          <div style="white-space: pre-wrap; margin: 0; font-family: inherit;">
            {{ current_variant.metafields.custom.specs
              | replace: 'Size: ', '<strong>Size:</strong> '
              | replace: 'Size:', '<strong>Size:</strong>'
              | replace: 'Volume: ', '<strong>Volume:</strong> '
              | replace: 'Volume:', '<strong>Volume:</strong>'
              | replace: 'Weight: ', '<strong>Weight:</strong> '
              | replace: 'Weight:', '<strong>Weight:</strong>'
              | replace: 'Materials: ', '<strong>Materials:</strong> '
              | replace: 'Materials:', '<strong>Materials:</strong>'
              | replace: 'Materials', '<strong>Materials:</strong>'
              | replace: '&quot;', '"' 
              | newline_to_br
            }}
          </div>
        {% elsif product.metafields.custom.specs %}
          <div style="white-space: pre-wrap; margin: 0; font-family: inherit;">
            {{ product.metafields.custom.specs
              | replace: 'Size: ', '<strong>Size:</strong> '
              | replace: 'Size:', '<strong>Size:</strong>'
              | replace: 'Volume: ', '<strong>Volume:</strong> '
              | replace: 'Volume:', '<strong>Volume:</strong>'
              | replace: 'Weight: ', '<strong>Weight:</strong> '
              | replace: 'Weight:', '<strong>Weight:</strong>'
              | replace: 'Materials: ', '<strong>Materials:</strong> '
              | replace: 'Materials:', '<strong>Materials:</strong>'
              | replace: 'Materials', '<strong>Materials:</strong>'
              | replace: '&quot;', '"' 
              | newline_to_br
            }}
          </div>
        {% else %}
          <p style="margin: 0;">Product specifications and materials information.</p>
        {% endif %}
      </div>
    </div>
  </div>
  
    <!-- Free Shipping & Easy Returns Accordion -->
  <div class="accordion-item" style="margin-bottom: 0; padding-left:10px; padding-right:10px; border-bottom: 1px solid #eee;">
    <hr class="desktop-divider" style="border: none; height: 2px; background-color: #eee; margin: 0; width: 100%; margin-left: 0; display: none;">
   <div class="accordion-header" style="padding: 15px 0; cursor: pointer; display: flex; justify-content: space-between; align-items: center;" data-section="shipping">
     <h3 class="accordionadjust" style="font-size: 20px; font-weight: 500; margin: 0;  color: #000;">Free shipping & easy returns:</h3>
     <span class="accordion-icon" id="shipping-icon" style="transition: transform 0.3s ease; transform: rotate(0deg); color:black">
       <svg width="20" height="20" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
         <path d="M4 6L8 10L12 6" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
       </svg>
     </span>
   </div>
   <div class="accordion-content" id="shipping-content" style="max-height: 0; overflow: hidden; transition: max-height 0.3s ease;">
     <div class="shipping-content" style="padding-bottom: 15px; color: #666; line-height: 1.6;">
       <p>Free standard shipping on all U.S. orders. International shipping available at checkout.</p>
       <p>We offer a 30-day return policy for all unused products in their original packaging.</p>
     </div>
   </div>
  </div>
  
    <!-- Lifetime Warranty Accordion -->
  <div class="accordion-item" style="margin-bottom: 0; padding-left:10px; padding-right:10px; border-bottom: 1px solid #eee;">
    <hr class="desktop-divider" style="border: none; height: 2px; background-color: #eee; margin: 0; width: 100%; margin-left: 0; display: none;">
   <div class="accordion-header" style="padding: 15px 0; cursor: pointer; display: flex; justify-content: space-between; align-items: center;" data-section="warranty">
     <h3 class="accordionadjust" style="font-size: 20px; font-weight: 500; margin: 0;  color: #000;">Lifetime warranty:</h3>
     <span class="accordion-icon" id="warranty-icon" style="transition: transform 0.3s ease; transform: rotate(0deg); color:black">
       <svg width="20" height="20" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
         <path d="M4 6L8 10L12 6" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
       </svg>
     </span>
   </div>
   <div class="accordion-content" id="warranty-content" style="max-height: 0; overflow: hidden; transition: max-height 0.3s ease;">
     <div class="warranty-content" style="padding-bottom: 15px; color: #666; line-height: 1.6;">
       <p>All our products come with a lifetime warranty against manufacturing defects. We stand behind the quality of our products and will repair or replace any item that fails due to manufacturing defects.</p>
     </div>
   </div>
  <hr style="border: none; height: 2px; background-color: #eee; margin: 0; width: 100%; margin-left: 0;">

  </div>
           <div class="text-center">
    <!-- <div class="bundle-section" style="margin-bottom: 60px; background-color: #fff; padding: 30px 20px; border-radius: 12px; position: relative;"> -->
             <div class="bundle-section" style="margin-bottom: 60px; background-color: #fff; padding: 30px 1px; border-radius: 12px; position: relative;">
    <h2 class="bundleandsave" style="font-size: clamp(20px, 5vw, 24px); font-weight: 500; margin-bottom: 8px; text-align: left; color: #000;  letter-spacing: 1px; font-family: 'Neue Haas Display', sans-serif !important; font-weight:400;">
      Bundle & save
    </h2>
  
    <!-- Flex wrapper -->
    <div class="bundle-flex-wrapper" style="display: flex; align-items: center; justify-content: center; gap: 10px;">
  
      <!-- Prev Button -->
      <!-- <div class="bundle-prev-wrapper">
        <button class="bundle-prev" aria-label="Previous product" style="all: unset; cursor: pointer;">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none"
               xmlns="http://www.w3.org/2000/svg">
            <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div> -->
       <div class="bundle-prev-wrapper">
        <button class="bundle-prev" aria-label="Previous product" >
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none"
               xmlns="http://www.w3.org/2000/svg">
            <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div>
  
      <!-- Carousel Container -->
      <!-- <div class="bundle-carousel-container" style="position: relative; max-width: 369px; overflow: hidden;"> -->
              <div class="bundle-carousel-container" style="position: relative; max-width: 430px; overflow: hidden; margin-left:-1.5px;">
        <div class="bundle-carousel" style="display:flex; gap: 10px; padding: 0 3px; scrollbar-width: none; -ms-overflow-style: none;">
          {% assign bundle_products = product.metafields.custom.bundle_products.value | split: ',' %}
          {% for bundle_product_id in bundle_products %}
            {% assign bundle_product = all_products[bundle_product_id] %}
            {% if bundle_product.id != blank and bundle_product.id != product.id %}
              <div class="bundle-item">
                <a href="{{ bundle_product.url }}" style="text-decoration: none; color: inherit; display: block;">
                  <div style="background-color: #f6f6f6; border-radius: 8px; overflow: hidden; margin-bottom: 12px; aspect-ratio: 1/1.3; position: relative; cursor: pointer;">
                    <img src="{{ bundle_product.featured_image | img_url: '300x300', crop: 'center' }}" alt="{{ bundle_product.title }}" style="width: 100%; height: 100%; object-fit: contain;">
                  </div>
                  <h4 style="font-size: 12px; margin: 0 0 8px; font-weight: 600; color: #000; line-height: 1.3; white-space: nowrap; overflow: hidden; text-overflow: ellipsis; cursor: pointer;">{{ bundle_product.title | truncate: 25 }}</h4>
                  <p class="bundle-price" style="font-weight: 600; margin-bottom: 12px; color: #000; font-size: 15px; cursor: pointer;">{{ bundle_product.price | money }}</p>
                </a>
                <button class="bundle-add-btn" data-variant-id="{{ bundle_product.selected_or_first_available_variant.id }}" style="width: 100%; padding: 8px; background-color: transparent; color: #000; border: 1px solid #000; border-radius: 10px; font-size: 11px; font-weight: 600; cursor: pointer; transition: background-color 0.3s ease, color 0.3s ease;" onclick="event.stopPropagation();">Add to bag</button>
              </div>
            {% endif %}
          {% endfor %}
        </div>
      </div>
  
      <!-- Next Button -->
      <!-- <div class="bundle-next-wrapper">
        <button class="bundle-next" aria-label="Next product" style="all: unset; cursor: pointer;">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none"
               xmlns="http://www.w3.org/2000/svg">
            <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div> -->
                <div class="bundle-next-wrapper">
        <button class="bundle-next" aria-label="Next product">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none"
               xmlns="http://www.w3.org/2000/svg">
            <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </button>
      </div>
  
    </div>
  </div>
  
        </div>
  </div>
  </div>
  </div>
  </div>
  
  <!-- Bundle & Save Section -->
  
  <!-- DYNAMIC 5-star functions Section -->
  <div class="functions-section" style="margin-bottom: 60px; max-width:1920px; margin:0 auto; padding-left:0; padding-right:0; padding-top:50px;">
    <h2 class="fivestarfunctionssizeadjust" style="font-size: 41px;  font-family: 'Bebas Neue', sans-serif; font-weight:500; margin-bottom: 40px; text-align: center; color: #000; letter-spacing: 1px;">
      5-star functions
    </h2>
  
    <!-- Carousel Container -->
    <div class="functions-carousel-container" style="position: relative; margin: 0 auto; overflow: hidden; max-width: 1920px; width: 100%;">
      <!-- Carousel Items Wrapper -->
      <div class="functions-carousel-wrapper" style="overflow: hidden; position: relative; padding:0 40px; margin:0 -40px;">
        <div class="functions-carousel" id="functionsCarousel" style="margin-left:75px; display: flex; transition: transform 0.5s ease; gap: 40px; padding: 0;">
          <!-- Example Items (Repeat Dynamically with JS) -->
          <!-- JS will populate -->
        </div>
        <!-- Gradient Peek Effects -->
        <!-- <div class="peek-gradient-left" style="position: absolute; top: 0; left: 0; width: 80px; height: 100%; background: linear-gradient(to right, #fff 0%, rgba(255,255,255,0) 100%); pointer-events: none; z-index: 2;"></div> -->
        <div class="peek-gradient-right" style="position: absolute; top: 0; right: 0; width: 80px; height: 100%; background: linear-gradient(to left, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0) 100%); pointer-events: none; z-index: 2;"></div>
      </div>
    </div>
  
  <!-- Bottom Navigation - Arrows + Slider Bar -->
  <div class="functions-bottom-nav" style="display: flex; align-items: center; justify-content: center; margin-top: 30px; gap: 20px; padding: 0 20px; ">
   <!-- Navigation Arrows -->
   <div class="functions-nav-arrows" style="display: flex; gap: 10px;">
     <button class="functions-prev" aria-label="Previous function" style="background: transparent; border: none; cursor: pointer; transition: all 0.3s ease; padding: 5px;">
       <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
         <path d="M15 18L9 12L15 6" stroke="#000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
     </svg>
     </button>
     <button class="functions-next" aria-label="Next function" style="background: transparent; border: none; cursor: pointer; transition: all 0.3s ease; padding: 5px;">
       <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
         <path d="M9 18L15 12L9 6" stroke="#000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
       </svg>
     </button>
   </div>
   
   <!-- Slider Bar -->
   <div class="functions-slider-bar" style="flex: 1; max-width: 150px; height: 4px; background-color: #e5e5e5; border-radius: 2px; position: relative;" id="functionsSliderBar">
     <div class="slider-progress" style="height: 100%; background-color: #000; border-radius: 2px; width: 25%; transition: width 0.3s ease;" id="functionsSliderProgress"></div>
   </div>
  </div>
  </div>
  
  <style>
  .fabricrowflex{
    backrgound-color:red;
  }
  @media (max-width: 900px) {
    .fabricrowflex{
      display: block !important;
  
    }
    .accordion-item{
      padding-left:0px !important;
      padding-right:0px !important;
    }
      .functions-section .function-item h3 {
    
     font-family: 'Neue Haas Display', sans-serif !important;
        /* font-family: sans-serif !important; */
      /* font-family: 'Arial', sans-serif !important;
      font-size: 16px !important;
      font-weight: 700 !important;
      letter-spacing: 0.5px !important; */
    }
    .detailbox{
      padding:0px !important;
      background:white !important;
      box-shadow: none !important; 
      border-radius: 0px !important;
      margin-bottom: -31px !important;
    }
    .iconshide{
      display:none !important;
    }
    .product-tagline{
      display:none !important;
    }
    .interestlinehide{
      display: none !important;
    }
    .pricesizeadjust{
      font-size:12px !important;
      font-weight: 400 !important;
      margin: 0 !important;
    }
  .featurehighlightshide{
    display:none !important;
  }
  
    .product-header{
          margin-bottom: 8px !important;
    }
    .responsive-flex {
      display: flex !important;
      flex-direction: row !important;
      align-items: center !important;
      justify-content: space-between !important;
      gap: 0 !important;
      width: 100% !important;
      margin: 0 !important;
      padding: 0 0 8px 0 !important;
    }
    .review-fix {
      margin: 0 !important;
    }
    .title-price-row {
      display: flex !important;
      flex-direction: row !important;
      align-items: baseline !important;
      justify-content: flex-start !important;
      gap: 15px !important;
      width: 100% !important;
      margin-bottom: 2px !important;
    }
    .product-title {
      margin: 0 0 0 -5px !important;

      line-height: 1.2 !important;
      font-family: 'Neue Haas Display', sans-serif !important;
      font-weight: 700 !important;
      flex: 1 !important;
    }
    .pricesizeadjust {
      font-size: 15px !important;
      color: #111 !important;
      white-space: nowrap !important;
    }
    .detailbox .pricesizeadjust {
      display: none !important;
    }
  
    .selectsizeadjust{
      font-size:14px !important;
      text-transform: none !important;
    }
    .functiondescriptionadjust{
      color:gray !important;
      font-weight:300 !important;
    }
    /* 5-star functions: hide arrows, left-align indicator line */
    .functions-nav-arrows {
      display: none !important;
    }
    .functions-slider-bar {
      margin-left: 0 !important;
      margin-right: auto !important;
      justify-content: flex-start !important;
    }
   
  
    /* What our community says heading font-family Arial */
    .reviews-section h2 {
      font-family: 'Neue Haas Display', sans-serif !important;
      text-transform: none !important;
      font-size: 22px !important;
      font-weight: 700 !important;
      letter-spacing: 0.5px !important;
      margin-bottom: 30px !important;
       text-align: left !important;
              margin-top: -12px !important;
    }
    .bundle-carousel-container{
       overflow: visible !important;
      max-width: none !important;
    }
    .single-image-container{
      border-radius:0px !important;
    }
    .reviewadjust{
      font-size:9px !important;
      margin-left: 17% !important;
    }
    .bundle-flex-wrapper{
    justify-content: initial !important;
    }
    .upselladjust{
      aspect-ratio:1 !important;
    }
    .related-products-nav-arrows{
      display:none !important;
    }
    .reviews-section{
      margin:15px !important;
    }
    .related-products-slider-bar{
      height: 2px !important;
      margin-right: auto !important;
      margin-left: 21px !important;
      max-width: 110px !important;
    }
    .related-products-section{
          margin-bottom: 81px !important;
    }
    .compare-btn-row {
      display: flex !important;
      justify-content: flex-end !important;
      margin-top: 8px !important;
      margin-right: 0 !important;
    }
   
    .comparemobilebtn{
      display: none !important;
      margin-right: 0 !important;
      font-size: 13px !important;
          padding: 4px 8px !important;
    }
    .mobile-compare-review {
      display: flex !important;
              margin-top: 24px !important;
      min-width: 129px !important;
    }
    .desktop-review-section {
      /* display: none !important; */
              padding-left: 0px !important;
        padding-right: 0px !important;
    }
  }  
    @media (max-width: 375px) {
      .mobile-compare-review {
             display: flex !important;
          margin-top: -96px !important;
          min-width: 305px !important;
    }
    @media (min-width: 901px) {
    .comparedesktopbtn {
      display: block;
    }
    .mobile-compare-review {
      display: none !important;
    }
    .desktop-review-section {
      display: block !important;
    }
    .reviews-section{
      margin:20px !important;
    }
    .accordionadjust{
   
    }
    .product-container {
      padding: 15px 0 !important;
      max-width: 100% !important;
      
    }
  } 
    
  @media (min-width: 1400px) {
    .function-item {
      min-width: 420px !important;
      flex: 0 0 420px !important;
      max-width: 420px !important;
    }
    .functions-carousel-wrapper {
      padding: 0 40px !important;
      margin: 0 -40px !important;
    }
    .functions-section {
      max-width: 1920px !important;
      margin: 0 auto !important;
      padding-left: 0 !important;
      padding-right: 0 !important;
    }
  }
    /* @media (max-width: 1550px) {
      .bundle-prev{
        right:30% !important;
      }
      .bundle-next{
        right:3% !important;
      }
    }
      @media (max-width: 1600px) {
      .bundle-prev{
        right:35% !important;
      }
      .bundle-next{
        right:3% !important;
      }
    } */
      @media (max-width: 900px) {
      .bundle-prev{
        right:81% !important;
        margin-top:6px;
      }
      .bundle-next{
        right:3% !important;
      }
    }
  /* @media (min-width: 1400px) {
    .functions-carousel-container {
      max-width: 1440px !important;
      margin: 0 auto !important;
      padding-left: 0 !important;
      padding-right: 0 !important;
      overflow: hidden !important;
    } */
    .functions-carousel-wrapper {
      padding: 0 222px 0 0 !important; /* 0.5 * 400px + 22px gap = 222px */
      margin: 0 !important;
      max-width: 1440px !important;
      overflow: visible !important;
    }
    .function-item {
       min-width: 284px !important;
      flex: 0 0 363px !important;
      max-width: 284px !important;
    }
    .functions-carousel {
      gap: 22px !important;
      transition: transform 0.3s !important;
    }
  }
  </style>
  
  <script>
  function initFunctionsCarousel() {
    initCarousel(
      '.functions-carousel', 
      '.functions-prev', 
      '.functions-next', 
      '.function-item', 
      '#functionsSliderProgress', 
      () => {
        if (window.innerWidth < 900) return 1;
        if (window.innerWidth < 1200) return 2;
        if (window.innerWidth < 1400) return 3;
        return 3.5; // Always 3.5 for 1400px and up
      }, 
      { enableTouch: true } 
    );
  }
  </script>
  
  <!-- Simple Dynamic Testimonial Section -->
  <div class="testimonial-section" style=" background-color: #f8f8f8; padding: 50px 40px;  text-align: center;">
  <div class="testimonial-content">
   <h3 style="font-size: 36px; margin-bottom: 10px; color: #000;  font-family: 'Playfair Display', serif;">
     {% if current_variant.metafields.custom.testimonial_title %}
       {{ current_variant.metafields.custom.testimonial_title }}
     {% elsif product.metafields.custom.testimonial_title %}
       {{ product.metafields.custom.testimonial_title }}
     {% else %}
       My Go-To Bag for Quick Getaways!
     {% endif %}
   </h3>
   
   <div class="testimonial-stars" style="margin-bottom: 8px;">
     <span class="stars" style="color: #ffc107; font-size: 24px;">★★★★★</span>
   </div>
   
   <p class="testimonial-text" style="font-size: clamp(16px, 4vw, 18px);  margin-bottom: 0; max-width: 600px; margin-left: auto; margin-right: auto; line-height: 1.6; font-weight:700; font-size:21px; font-family:none;">
     "{% if current_variant.metafields.custom.testimonial_text %}{{ current_variant.metafields.custom.testimonial_text }}{% elsif product.metafields.custom.testimonial_text %}{{ product.metafields.custom.testimonial_text }}{% else %}Took this on a weekend trip, and it fit everything without feeling bulky. I'm obsessed.{% endif %}"
   </p>
  </div>
  </div>
  
  <!-- As Featured In Section -->
  {% render 'as-feature-in' %}
  
  <!-- We Think You'll Love These - Updated with Manual Product Selection -->
  <div class="related-products-section" style="margin-bottom: 20px;">
  <h2 style="font-size: 41px;  font-family: 'Bebas Neue', sans-serif; margin-bottom: 40px; text-align: center; color: #000; letter-spacing: 1px; font-weight: 550 !important;">We think you'll love these</h2>
  <!-- Mobile sentence case heading -->
  <h2 class="related-products-heading-mobile" style="display:none; font-size:22px; font-family:Arial,sans-serif; font-weight:700; letter-spacing:0.5px; margin-bottom:30px; text-align:center;">We think you'll love these</h2>
  
  <!-- Related Products Carousel Container -->
  <div class="related-products-carousel-container" style="position: relative; margin: 0 auto; overflow: hidden; max-width: 1920px; width: 100%;">
   <div class="related-products-carousel-wrapper" style="overflow: hidden;">
     <div class="related-products-carousel" style="display: flex; transition: transform 0.5s ease; margin-left:50px; gap: 10px; " id="relatedProductsCarousel">
       
       {% comment %} Manual Product Selection using Metafields {% endcomment %}
       {% assign manual_products = '' %}
       {% assign product_count = 0 %}
       
       {% comment %} Check for manually selected products in metafields {% endcomment %}
       {% if product.metafields.custom.upsell_product_1 != blank %}
         {% assign upsell_product_1 = product.metafields.custom.upsell_product_1.value %}
         {% assign manual_products = manual_products | append: upsell_product_1.id | append: ',' %}
         {% assign product_count = product_count | plus: 1 %}
       {% endif %}
       
       {% if product.metafields.custom.upsell_product_2 != blank %}
         {% assign upsell_product_2 = product.metafields.custom.upsell_product_2.value %}
         {% assign manual_products = manual_products | append: upsell_product_2.id | append: ',' %}
         {% assign product_count = product_count | plus: 1 %}
       {% endif %}
       
       {% if product.metafields.custom.upsell_product_3 != blank %}
         {% assign upsell_product_3 = product.metafields.custom.upsell_product_3.value %}
         {% assign manual_products = manual_products | append: upsell_product_3.id | append: ',' %}
         {% assign product_count = product_count | plus: 1 %}
       {% endif %}
       
       {% if product.metafields.custom.upsell_product_4 != blank %}
         {% assign upsell_product_4 = product.metafields.custom.upsell_product_4.value %}
         {% assign manual_products = manual_products | append: upsell_product_4.id | append: ',' %}
         {% assign product_count = product_count | plus: 1 %}
       {% endif %}
       
       {% if product.metafields.custom.upsell_product_5 != blank %}
         {% assign upsell_product_5 = product.metafields.custom.upsell_product_5.value %}
         {% assign manual_products = manual_products | append: upsell_product_5.id | append: ',' %}
         {% assign product_count = product_count | plus: 1 %}
       {% endif %}
       
       {% if product.metafields.custom.upsell_product_6 != blank %}
         {% assign upsell_product_6 = product.metafields.custom.upsell_product_6.value %}
         {% assign manual_products = manual_products | append: upsell_product_6.id | append: ',' %}
         {% assign product_count = product_count | plus: 1 %}
       {% endif %}
       
       {% comment %} Display manually selected products {% endcomment %}
       {% if product_count > 0 %}
         
         {% if product.metafields.custom.upsell_product_1 != blank %}
           <div class="related-product-item" style="min-width: 250px; flex: 0 0 300px; text-align: left;">
             <a href="{{ upsell_product_1.url }}" style="text-decoration: none; color: inherit; display: block;">
               <div class="upselladjust" style="background-color: #f6f6f6; border-radius: 12px; overflow: hidden; margin-bottom: 15px; aspect-ratio: 1/1.4; position: relative;">
                 <img src="{{ upsell_product_1.featured_image | img_url: '400x400', crop: 'center' }}" alt="{{ upsell_product_1.title }}" style="width: 100%; height: 100%; object-fit: contain; transition: transform 0.3s ease;">
               </div>
               <h3 style="font-size: 16px; margin: 0 0 8px; font-weight: 600; color: #000; line-height: 1.3;">{{ upsell_product_1.title | truncate: 40 }}</h3>
               <p class="related-price" style="font-weight: 700; margin: 0; color: #000; font-size: 18px;">{{ upsell_product_1.price | money }}</p>
             </a>
           </div>
         {% endif %}
         
         {% if product.metafields.custom.upsell_product_2 != blank %}
           <div class="related-product-item" style="min-width: 250px; flex: 0 0 300px; text-align: left;">
             <a href="{{ upsell_product_2.url }}" style="text-decoration: none; color: inherit; display: block;">
               <div class="upselladjust" style="background-color: #f6f6f6; border-radius: 12px; overflow: hidden; margin-bottom: 15px; aspect-ratio: 1/1.4; position: relative;">
                 <img src="{{ upsell_product_2.featured_image | img_url: '400x400', crop: 'center' }}" alt="{{ upsell_product_2.title }}" style="width: 100%; height: 100%; object-fit: contain; transition: transform 0.3s ease;">
               </div>
               <h3 style="font-size: 16px; margin: 0 0 8px; font-weight: 600; color: #000; line-height: 1.3;">{{ upsell_product_2.title | truncate: 40 }}</h3>
               <p class="related-price" style="font-weight: 700; margin: 0; color: #000; font-size: 18px;">{{ upsell_product_2.price | money }}</p>
             </a>
           </div>
         {% endif %}
         
         {% if product.metafields.custom.upsell_product_3 != blank %}
           <div class="related-product-item" style="min-width: 250px; flex: 0 0 300px; text-align: left;">
             <a href="{{ upsell_product_3.url }}" style="text-decoration: none; color: inherit; display: block;">
               <div class="upselladjust" style="background-color: #f6f6f6; border-radius: 12px; overflow: hidden; margin-bottom: 15px; aspect-ratio: 1/1.4; position: relative;">
                 <img src="{{ upsell_product_3.featured_image | img_url: '400x400', crop: 'center' }}" alt="{{ upsell_product_3.title }}" style="width: 100%; height: 100%; object-fit: contain; transition: transform 0.3s ease;">
               </div>
               <h3 style="font-size: 16px; margin: 0 0 8px; font-weight: 600; color: #000; line-height: 1.3;">{{ upsell_product_3.title | truncate: 40 }}</h3>
               <p class="related-price" style="font-weight: 700; margin: 0; color: #000; font-size: 18px;">{{ upsell_product_3.price | money }}</p>
             </a>
           </div>
         {% endif %}
         
         {% if product.metafields.custom.upsell_product_4 != blank %}
           <div class="related-product-item" style="min-width: 250px; flex: 0 0 300px; text-align: left;">
             <a href="{{ upsell_product_4.url }}" style="text-decoration: none; color: inherit; display: block;">
               <div class="upselladjust" style="background-color: #f6f6f6; border-radius: 12px; overflow: hidden; margin-bottom: 15px; aspect-ratio: 1/1.4; position: relative;">
                 <img src="{{ upsell_product_4.featured_image | img_url: '400x400', crop: 'center' }}" alt="{{ upsell_product_4.title }}" style="width: 100%; height: 100%; object-fit: contain; transition: transform 0.3s ease;">
               </div>
               <h3 style="font-size: 16px; margin: 0 0 8px; font-weight: 600; color: #000; line-height: 1.3;">{{ upsell_product_4.title | truncate: 40 }}</h3>
               <p class="related-price" style="font-weight: 700; margin: 0; color: #000; font-size: 18px;">{{ upsell_product_4.price | money }}</p>
             </a>
           </div>
         {% endif %}
         
         {% if product.metafields.custom.upsell_product_5 != blank %}
           <div class="related-product-item" style="min-width: 250px; flex: 0 0 300px; text-align: left;">
             <a href="{{ upsell_product_5.url }}" style="text-decoration: none; color: inherit; display: block;">
               <div class="upselladjust" style="background-color: #f6f6f6; border-radius: 12px; overflow: hidden; margin-bottom: 15px; aspect-ratio: 1/1.4; position: relative;">
                 <img src="{{ upsell_product_5.featured_image | img_url: '400x400', crop: 'center' }}" alt="{{ upsell_product_5.title }}" style="width: 100%; height: 100%; object-fit: contain; transition: transform 0.3s ease;">
               </div>
               <h3 style="font-size: 16px; margin: 0 0 8px; font-weight: 600; color: #000; line-height: 1.3;">{{ upsell_product_5.title | truncate: 40 }}</h3>
               <p class="related-price" style="font-weight: 700; margin: 0; color: #000; font-size: 18px;">{{ upsell_product_5.price | money }}</p>
             </a>
           </div>
         {% endif %}
         
         {% if product.metafields.custom.upsell_product_6 != blank %}
           <div class="related-product-item" style="min-width: 250px; flex: 0 0 300px; text-align: left;">
             <a href="{{ upsell_product_6.url }}" style="text-decoration: none; color: inherit; display: block;">
               <div class="upselladjust" style="background-color: #f6f6f6; border-radius: 12px; overflow: hidden; margin-bottom: 15px; aspect-ratio: 1/1.4; position: relative;">
                 <img src="{{ upsell_product_6.featured_image | img_url: '400x400', crop: 'center' }}" alt="{{ upsell_product_6.title }}" style="width: 100%; height: 100%; object-fit: contain; transition: transform 0.3s ease;">
               </div>
               <h3 style="font-size: 16px; margin: 0 0 8px; font-weight: 600; color: #000; line-height: 1.3;">{{ upsell_product_6.title | truncate: 40 }}</h3>
               <p class="related-price" style="font-weight: 700; margin: 0; color: #000; font-size: 18px;">{{ upsell_product_6.price | money }}</p>
             </a>
           </div>
         {% endif %}
         
       {% else %}
         {% comment %} Fallback to automatic related products if no manual selection {% endcomment %}
         {% for related_product in collections.all.products limit: 6 %}
           {% if related_product.id != product.id %}
             <div class="related-product-item" style="min-width: 250px; flex: 0 0 300px; text-align: left;">
               <a href="{{ related_product.url }}" style="text-decoration: none; color: inherit; display: block;">
                 <div class="upselladjust" style="background-color: #f6f6f6; border-radius: 12px; overflow: hidden; margin-bottom: 15px; aspect-ratio: 1; position: relative;">
                   <img src="{{ related_product.featured_image | img_url: '400x400', crop: 'center' }}" alt="{{ related_product.title }}" style="width: 100%; height: 100%; object-fit: cover; transition: transform 0.3s ease;">
                 </div>
                 <h3 style="font-size: 16px; margin: 0 0 8px; font-weight: 600; color: #000; line-height: 1.3;">{{ related_product.title | truncate: 40 }}</h3>
                 <p class="related-price" style="font-weight: 700; margin: 0; color: #000; font-size: 18px;">{{ related_product.price | money }}</p>
               </a>
             </div>
           {% endif %}
         {% endfor %}
       {% endif %}
       
     </div>
   </div>
  </div>
  
  <!-- Bottom Navigation - Arrows + Slider Bar -->
  <div class="related-products-bottom-nav" style="display: flex; align-items: center; justify-content: flex-start; margin-top: 30px; gap: 20px; padding-left: 30px;">
   <!-- Navigation Arrows -->
   <div class="related-products-nav-arrows" style="display: flex; gap: 10px;">
     <button class="related-prev" aria-label="Previous product" style="background: transparent; border: none; cursor: pointer; transition: all 0.3s ease; padding: 5px;">
       <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
         <path d="M15 18L9 12L15 6" stroke="#000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
       </svg>
     </button>
     <button class="related-next" aria-label="Next product" style="background: transparent; border: none; cursor: pointer; transition: all 0.3s ease; padding: 5px;">
       <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
         <path d="M9 18L15 12L9 6" stroke="#000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
       </svg>
     </button>
   </div>
   
   <!-- Slider Bar -->
   <div class="related-products-slider-bar" style="flex: 1; max-width: 200px; height: 4px; background-color: #e5e5e5; border-radius: 2px; position: relative;" id="relatedProductsSliderBar">
     <div class="slider-progress" style="height: 100%; background-color: #000; border-radius: 2px; width: 25%; transition: width 0.3s ease;" id="relatedProductsSliderProgress"></div>
   </div>
  </div>
  </div>
   
         
  <!-- What Our Community Says -->
  <div id="reviews-section" class="reviews-section desktop-review-section" style="margin-bottom: 60px; padding-left:50px; padding-right:50px;">
    
    <h2 class="reviews-heading-desktop" style="font-size: 41px; font-family: 'Bebas Neue', sans-serif; font-weight: 400; margin-bottom: -8px; text-align: center; color: #000; letter-spacing: 1px;">What our community says</h2>
    <h2 class="reviews-heading-mobile" style="font-size:22px; font-family:Arial,sans-serif; font-weight:700; letter-spacing:0.5px; margin-bottom:30px; text-align:center; display:none;">What our community says</h2>
    {% render 'judgeme_widgets', widget_type: 'judgeme_review_widget', concierge_install: true, product: product %}
  </div>
  
  </div>
  
  <!-- Image/Video Modal -->
  <div id="mediaModal" style="display: none; position: fixed; z-index: 10000; left: 0; top: 0; width: 100vw; height: 100vh; background-color: #fff; padding: 0; box-sizing: border-box; overflow: hidden;" onclick="closeModalOnClickOutside(event)">
    <span id="modalCloseButton" style="position: absolute; top: 24px; right: 36px; color: gray; font-size: 40px; font-weight: bold; cursor: pointer; z-index: 10003; background: none; border: none; line-height: 1;" onclick="closeModal()">×</span>
    <button id="modalPrev" aria-label="Previous" style="background: transparent; border: none; cursor: pointer; transition: all 0.3s ease; padding: 5px; position: absolute; top: 50%; left: 32px; transform: translateY(-50%); z-index: 10002; color: gray;">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
        <path d="M15 18L9 12L15 6" stroke="#000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </button>
    <button id="modalNext" aria-label="Next" style="background: transparent; border: none; cursor: pointer; transition: all 0.3s ease; padding: 5px; position: absolute; top: 50%; right: 32px; transform: translateY(-50%); z-index: 10002; color: gray;">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
        <path d="M9 18L15 12L9 6" stroke="#000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </button>
    <div style="position: relative; width: 100vw; height: 100vh; display: flex; align-items: center; justify-content: center;">
      <img id="modalImage" style="max-width: 90vw; max-height: 100vh; width: auto; height: auto; object-fit: contain; display: none; border-radius: 0; background: #fff; transform-origin: center center; transition: transform 0.2s ease-out; cursor: grab;" draggable="false">
      <video id="modalVideo" style="max-width: 100vw; max-height: 100vh; width: auto; height: auto; object-fit: contain; display: none; border-radius: 0; background: #fff;" controls>
        <source id="modalVideoSource" type="video/mp4">
      </video>
    </div>
  </div>
  
  <style>
  /* Styles remain largely the same, ensure .desktop-grid adapts if fewer than 6 items */
  /* For example, if only 1 item, you might want it to span 2 columns or center */
  .desktop-grid:has(> :nth-child(1):nth-last-child(1)) { /* If only one child */
    grid-template-columns: 1fr; /* Make it span full width */
  }
  /* Other styles as before */
  /* FIXED MOBILE RESPONSIVE STYLES */
  * {
  box-sizing: border-box;
  }
  
  /* Mobile-first responsive design */
  @media (max-width: 900px) {
  .product-container {
   padding: 15px 0 !important;
   max-width: 100% !important;
   overflow-x: hidden !important;
  }
  
  .containerbb {
   padding: 0 2px !important;
   max-width: 100% !important;
  }
  
  /* Hide desktop grid on mobile */
  .desktop-grid {
   display: none !important;
  }
  
  /* Show mobile single image view */
  .mobile-single-image {
   display: block !important;
   width: 100% !important;
   max-width: 100% !important;
  }
  
  /* Hide desktop-only elements */
  .desktop-only {
   display: none !important;
  }
  
  /* Mobile thumbnail scrollbar hiding */
  .mobile-thumbnails::-webkit-scrollbar {
   display: none;
  }
  
  .mobile-thumbnails {
   /* -ms-overflow-style: none;
   scrollbar-width: none;
     */
    display:none !important;
  }
  
  /* Mobile thumbnail active state */
  .mobile-thumb.active {
   border-color: #000 !important;
  }
  
  /* Adjust product layout for mobile */
  .product-layout {
   grid-template-columns: 1fr !important;
   gap: 25px !important;
   display:block !important;
   padding:0px !important;
  }
  
  .product-details {
   width: 100% !important;
   height:100% !important;
   max-width: 100% !important;
   /* padding: 20px !important; */
  }
  
   .bundle-section{
   margin-left:0px !important;
  }
  
  .responsive-flex {
     display: none !important;
   }
  .review-fix{
   /* margin-top:20px !important; */
    margin-top: -18px !important;
    margin-left: 53% !important;
  }
  .product-title {
   font-size:17px !important;
   line-height: 1.2 !important;
   font-family: 'Neue Haas Display', sans-serif !important;
   
   overflow: hidden !important;
   text-overflow: ellipsis !important;
  }
  
  .product-price {
   font-size: clamp(20px, 6vw, 24px) !important;
  }
  
  /* Mobile features grid */
  .product-features {
   grid-template-columns: repeat(2, 1fr) !important;
   gap: 12px !important;
   padding: 15px 0 !important;
  }
  
  .feature-item {
   padding: 10px 5px !important;
  }
  
  .feature-text p {
   font-size: 11px !important;
  }
  
  /* Mobile bundle section */
  .bundle-section {
   padding: 25px 0px !important;
   margin-bottom: 40px !important;
  }
  
  .bundle-carousel {
   gap: 12px !important;
   padding: 0 5px !important;
  }
   /* .bundle-item {
      flex: 0 0 29.3333% !important;
      max-width: 30.3333% !important;
    } */
  /* .bundle-item {
   min-width: 160px !important;
   flex: 0 0 160px !important;
   padding: 12px !important;
  } */
  
  /* Mobile related products */
  .related-products-carousel-wrapper {
   /* margin: 0 !important; */
  }
  
  .related-products-carousel {
   /* padding: 0 10px !important; */
   gap: 7px !important;
   margin-left:15px !important; 
  }
  
  .related-product-item {
   min-width: 180px !important;
   flex: 0 0 180px !important;
  }
  
  
  
  /* Mobile size and fabric options */
  .size-options {
   gap: 6px !important;
  }
  
  .size-option {
   padding: 6px 28px !important;
   font-size: 13px !important;
   min-width: 45px !important;
  }
  
  .fabric-options {
   gap: 14px !important;
  }
  
  .fabric-option {
   width: 53px !important;
   height: 53px !important;
  }
  
  /* Mobile price container */
  .product-price-container {
   flex-direction: column !important;
   align-items: flex-start !important;
   gap: 15px !important;
  }
  
  /* Mobile functions section */
  /* .function-item {
   min-width: calc(57vw - 120px) !important; 
   flex: 0 0 calc(60vw - 120px) !important; 
   max-width: none !important;
  } */
  
  .functions-carousel-wrapper {
   padding: 0px !important; /* Ensure this matches the item width calculation */
   margin: 0 -60px !important;
  }
  
  .functions-carousel {
   gap: 10px !important;
  }
  
  .functions-bottom-nav {
   justify-content: center !important;
   padding: 0 20px !important;
    margin-top: 10px !important;
    margin-left:-2px !important;
  }
  
  .functions-slider-bar {
   max-width: 120px !important;
    height:2px !important;
  }
  
  .functions-nav-arrows button {
   padding: 6px !important;
  }
  
  .functions-nav-arrows svg {
   width: 18px !important;
   height: 18px !important;
  }
  
  /* Mobile gradient adjustments */
  .peek-gradient-left,
  .peek-gradient-right {
   width: 60px;
  }
  
  .individual-prev, /* Applied to desktop navigable cell buttons */
  .individual-next { /* Applied to desktop navigable cell buttons */
   width: 28px !important;
   height: 28px !important;
  }
  
  .individual-prev svg, /* Applied to desktop navigable cell buttons */
  .individual-next svg { /* Applied to desktop navigable cell buttons */
   width: 14px !important;
   height: 14px !important;
  }
  
  .image-counter { /* Applied to desktop navigable cell counter */
   font-size: 11px !important;
   padding: 3px 6px !important;
  }
  
  .gallery-dots { /* Applied to desktop navigable dots */
   gap: 4px !important;
   margin-top: 10px !important;
  }
  
  .gallery-dot { /* Applied to desktop navigable dots */
   width: 6px !important;
   height: 6px !important;
  }
  
  .related-products-bottom-nav {
   padding-left: 0 !important;
   justify-content: center !important;
  }
  
  .testimonial-section {
   padding: 40px 20px !important;
            margin-top: 70px;
  }
  #modalZoomControls {
    top: 70px !important; /* Adjust for mobile if needed */
    right: 20px !important;
  }
  .modal-nav-arrow {
    width: 36px !important;
    height: 36px !important;
  }
  .modal-nav-arrow svg {
    width: 20px !important;
    height: 20px !important;
  }
  
  
  
  }
  
  /* Tablet and desktop */
  @media (min-width: 900px) {
  /* Hide mobile single image view on larger screens */
  .mobile-single-image {
   display: none !important;
  }
  
  /* Show desktop grid */
  .desktop-grid {
   display: grid !important;
  }
  
  /* Show desktop-only elements */
  .desktop-only {
   display: flex !important; /* This applies to galleryDotsDesktop */
  }
  
  /* Desktop product layout */
  .product-layout {
   grid-template-columns: 2.2fr 1fr !important;
   gap: 50px !important;
  }
  
  /* Desktop: Show multiple function items with enhanced peek */
  .function-item {
   min-width: 320px !important;
   flex: 0 0 320px !important;
   max-width: 320px !important;
  }
  
  .functions-carousel-wrapper {
   /* padding: 0 80px !important; */
   margin: 0 -80px !important;
  }
  
  .functions-carousel {
   /* gap: 96px !important; */
  }
  
  .functions-bottom-nav {
   justify-content: flex-start !important;
   padding-left: 32px !important;
  
  }
  }
  
  @media (max-width: 1024px) and (min-width: 768px) {
  .function-item {
   min-width: 280px !important;
   flex: 0 0 280px !important;
   max-width: 280px !important;
  }
  
  .functions-carousel-wrapper {
   padding: 0px !important;
   margin: 0 -70px !important;
  }
  
  /* Tablet gradient adjustments */
  .peek-gradient-left,
  .peek-gradient-right {
   width: 70px;
  }
  
  .related-product-item {
   min-width: 240px !important;
   flex: 0 0 240px !important;
  }
  }
  
  @keyframes scrollLogos {
  0% {
   transform: translateX(0);
  }
  100% {
   transform: translateX(-50%);
  }
  }
  
  /* Shop Pay Installments Styling */
  .shop-pay-installments {
  margin-top: 15px;
  }
  
  .installments-info {
  margin-top: 10px;
  text-align: center;
  font-size: 14px;
  color: #666;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
  }
  
  .shopify-payment-button {
  margin: 10px 0;
  }
  
  /* Individual image navigation styles (for desktop 6th cell) */
  .desktop-navigable-cell .individual-prev:hover,
  .desktop-navigable-cell .individual-next:hover {
   background-color: rgba(255,255,255,1) !important;
   transform: translateY(-50%) scale(1.1);
  }
  
  .desktop-navigable-cell:hover .individual-prev,
  .desktop-navigable-cell:hover .individual-next {
   opacity: 1;
  }
  
  .desktop-navigable-cell .image-counter { /* Style for counter in 6th cell */
   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
   position: absolute; 
   bottom: 8px; 
   right: 8px; 
   background: rgba(0,0,0,0.7); 
   color: white; 
   padding: 4px 8px; 
   border-radius: 12px; 
   font-size: 12px; 
   font-weight: 500;
  }
  
  
  /* Dot navigation styles (for desktop 6th cell dots) */
  .gallery-dots { /* General style for the dots container */
   display: flex;
   justify-content: center;
   align-items: center;
   margin-top: 15px;
   gap: 6px;
  }
  
  .gallery-dot { /* Style for individual dots */
  width: 6px;
    height: 6px;
    min-width: 6px;
    min-height: 6px;
    padding: 0;
    margin: 0;
    border: none;
    border-radius: 50%;
    background-color: #d1d5db;
    display: inline-block;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-bottom:10px;
  }
  
  .gallery-dot.active {
   background-color: #000; /* Active color */
   transform: scale(1.2);
  }
  
  .gallery-dot:hover {
   background-color: #6b7280 !important;
   transform: scale(1.3);
  }
  
  
  /* Hover effects */
  .add-to-cart-button:hover { /* Keep existing main add to cart hover */
    background-color: #333 !important;
  }
  
  .bundle-add-btn:hover { /* New hover for bundle buttons */
    background-color: #000 !important;
    color: #fff !important;
  }
  
  .fabric-option:hover {
  transform: scale(1.05);
  }
  
  .size-option:hover {
  opacity: 0.8;
  }
  
  .bundle-prev:hover,
  .bundle-next:hover {
  background-color: transparent !important;
  /* transform: translateY(-50%) scale(1.1); */
  }
  
  .functions-prev:hover,
  .functions-next:hover,
  .related-prev:hover,
  .related-next:hover {
  opacity: 0.7;
   background: transparent !important;
  }
  
  /* Functions Carousel Styles with Enhanced Peek Effect */
  .functions-carousel-container {
  max-width: 1200px;
  }
  
 
  
  /* Enhanced Peek Effect Styles */
  .functions-carousel-wrapper {
  position: relative;
  }
  
  /* Gradient fade effects for better peek visibility */
  .peek-gradient-left,
  .peek-gradient-right {
  position: absolute;
  top: 0;
  width: 80px;
  height: 100%;
  pointer-events: none;
  z-index: 2;
  }
  
  .peek-gradient-left {
  left: 0;
  background: linear-gradient(to right, rgba(255,255,255,1) 0%, rgba(255,255,255,0) 100%);
  }
  
  .peek-gradient-right {
    display: none !important;
  }
  
  /* Related Products Styles */
  .related-products-carousel-container {
  max-width: 1200px;
  }
  
  .related-product-item:hover img {
  transform: scale(1.05);
  }
  
  .size-option:hover {
  background-color: #f0f0f0 !important;
  border-color: #d1d5db !important;
  }
  
  .size-option.active:hover {
  background-color: #333 !important;
  }
  
  .fabric-option:hover {
  transform: scale(1.05);
  border-color: #2f6f6f !important;
  }
  
  .fabric-option.active:hover {
  border-color: #2f6f6f !important;
  }
  
  /* Mobile navigation buttons */
  .mobile-prev:hover,
  .mobile-next:hover {
  background-color: rgba(255,255,255,1) !important;
  transform: translateY(-50%) scale(1.1);
  }
  
  /* Ensure no horizontal scroll */
  html, body {

  max-width: 100%;
  }
  
  /* Additional styles for variant switching */
  .fabric-option.active {
  border-color: #2f6f6f !important;
  /* transform: scale(1.05); */
  }
  
  .fabric-option:hover {
  transform: scale(1.02);
  border-color: #666 !important;
  }
  
  .size-option.active {
  background-color: #2f6f6f !important;
  color: white !important;
  }
  
  .size-option:hover {
  opacity: 0.8;
  }
  
  /* Variant switching animation */
  .gallery-item img,
  .mobile-single-image img {
  transition: opacity 0.3s ease;
  }
  
  .variant-switching .gallery-item img,
  .variant-switching .mobile-single-image img {
  opacity: 0.7;
  }
  
  /* Modal Navigation Arrow Styles */
  .modal-nav-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255,255,255,0.2);
    border: none;
    border-radius: 50%;
    width: 44px;
    height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background 0.3s ease, opacity 0.3s ease;
    z-index: 1002;
    color: white;
  }
  .modal-nav-arrow:hover {
    background: rgba(255,255,255,0.4) !important;
  }
  .modal-nav-arrow:disabled {
    opacity: 0.3 !important;
    cursor: default !important;
  }
  
  /* Modal Zoom Button Styles */
  .modal-zoom-btn {
    background: rgba(255,255,255,0.2);
    border: none;
    border-radius: 50%;
    width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background 0.3s ease, opacity 0.3s ease;
    color: white;
  }
  .modal-zoom-btn:hover {
    background: rgba(255,255,255,0.4) !important;
  }
  .modal-zoom-btn:disabled {
    opacity: 0.3 !important;
    cursor: default !important;
  }
  #modalZoomControls {
    display: none; /* Hidden by default, shown by JS for images */
  }
  
    @media screen and (min-width: 1600px) {
  //For Big TV's (HD Screens) 
      .functions-carousel-container {
          width: 1250px !important;
      }
      .function-item {
          min-width: 324px !important;
          flex: 0 0 420px !important;
          max-width: 324px !important;
      }
      .bundle-carousel-container{
        max-width: 533px !important;
      }
  }
   @media (min-width: 1280px) {
    .bundle-item {
      flex: 0 0 26% !important;
      max-width: 26% !important;
    }
  }
  
    .bundle-carousel {
    display: flex;
    gap: 15px;
   
    padding: 0 40px;
   
  }
    
  .bundle-item {
    flex: 0 0 100%;
    scroll-snap-align: start;
    max-width: 100%;
  }
  
  @media (min-width: 768px) {
    .bundle-item {
      flex: 0 0 50%;
      max-width: 50%;
    }
  }
  
  /* CSS: Make .bundle-section position: relative and position arrows at the edge of the card */
  .bundle-section {
    position: relative;
  }
  .bundle-prev {
    position: absolute;
    /* top: 49%;
    left: -7px; */
    top: 44%;
    left: -13px;
    transform: translateY(-50%);
    background: none;
    border: none;
    border-radius: 0;
    width: auto;
    height: auto;
    padding: 0;
    margin: 0;
    box-shadow: none;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 2;
  }
  
  .bundle-next {
    position: absolute;
    top: 44%;
    /* right: -8px;  */
    right: -6px; 
    transform: translateY(-50%);
    background: none;
    border: none;
    border-radius: 0;
    width: auto;
    height: auto;
    padding: 0;
    margin: 0;
    box-shadow: none;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    z-index: 2;
  }
  
  @media (max-width: 767px) {
    .bundle-prev { left: 4px; }
    .bundle-next { right: 4px; }
  }
  @media (max-width: 405px) {
    .bundle-item {
     min-width: 19% ;
     max-width: 19% ;
    }
  }
  @media (max-width: 900px) {
  
    .bundle-carousel {
      gap: 10px !important;
      padding: 0 2px !important;
      /* margin-left:17px !important; */
          /* transition: transform 0.25s; */
      margin-top: 10px;
      transition: transform 0.3s !important;
    }
    .bundle-item {
      background: #F6F6F6 !important;
      border-radius: 16px !important;
      /* padding: 18px 8px 18px 8px !important; */
      box-shadow: 0 2px 8px rgba(0,0,0,0.08) !important;
     min-width: 32% ;
     max-width: 21%;
      flex: 0 0 32% !important;
      display: flex;
      flex-direction: column;
      align-items: center;
      margin-bottom: 0 !important;
      border: none !important;
      height:216px !important;
    }
    .bundle-item img {
      background: #f6f6f6 !important;
      border-radius: 8px !important;
      margin-bottom: 10px !important;
      width: 100%;
      max-width: 120px;
      height: auto;
      object-fit: contain;
      box-shadow: none !important;
    }
    .bundle-item h4 {
      font-size: 10px !important;
      font-weight: 600 !important;
      color: #222 !important;
      margin: 0 0 -9px 0 !important;
      text-align: center;
      line-height: 1.3;
      min-height: 27px;
    }
    .bundle-price {
      font-size: 12px !important;
      font-weight: 400 !important;
      color: #222 !important;
      margin-bottom: 10px !important;
      text-align: center;
    }
    .bundle-add-btn {
      background: #007983!important;
      color: #fff !important;
      border: none !important;
      border-radius: 23px !important;
      font-size: 9px !important;
      font-weight: 600 !important;
      padding: 8px 0 !important;
      width: 100% !important;
      /* margin-top: 8px !important; */
      box-shadow: none !important;
      text-transform: none !important;
      transition: background 0.2s;
      letter-spacing: 0.5px;
    }
    .bundle-add-btn:hover {
      background: #166a58 !important;
      color: #fff !important;
    }
  }
    @media (max-width: 375px) {
   .bundle-item {
      min-width: 28% !important;
   }
  }
  @media (max-width: 900px) {
    .bundle-prev-wrapper,
    .bundle-next-wrapper {
      display: none !important;
    }
  }
  
  @media (min-width: 769px) {
    .title-price-row .pricesizeadjust {
      display: none !important;
    }
  }
  @media (max-width: 900px) {
    .detailbox .pricesizeadjust {
      display: none !important;
    }
    .title-price-row .pricesizeadjust {
      display: block !important;
    }
  }
  
  @media (max-width: 900px) {
    .reviews-heading-desktop { display: none !important; }
    .reviews-heading-mobile { display: block !important; }
  }
  @media (min-width: 901px) {
    .reviews-heading-desktop { display: block !important; }
    .reviews-heading-mobile { display: none !important; }
  }
  
  .function-media-container {
    aspect-ratio: 980 / 1300 !important;
    width: 100%;
    max-width: 320px;
    height: auto;
    background: #f6f6f6;
    border-radius: 12px;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .function-media-container img,
  .function-media-container video {
    width: 100%;
    height: 100%;
    object-fit: cover;
    aspect-ratio: 980 / 1300 !important;
    background: #f6f6f6;
    display: block;
  }
  @media (min-width: 900px) {
    .function-media-container {
      height: 420px;
      max-width: 320px;
    }
  }
  
  </style>
  
  <script>
  // ENHANCED JAVASCRIPT WITH IMPROVED IMAGE URL HANDLING AND TOUCH SWIPE FOR CAROUSELS
  
  const productImages = [
   {% if current_variant.metafields.custom.variant_gallery %}
     {% for image in current_variant.metafields.custom.variant_gallery.value %}
       {
         src: "{{ image | img_url: '2200x1300', crop: 'center' }}",
         fullSrc: "{{ image | img_url: '1200x1200' }}",
         thumb: "{{ image | img_url: '120x120', crop: 'center' }}",
         type: 'image'
       }{% unless forloop.last %},{% endunless %}
     {% endfor %}
   {% else %}
     {% for image in product.images %}
       {
         src: "{{ image | img_url: '2200x1300', crop: 'center' }}",
         fullSrc: "{{ image | img_url: '1200x1200' }}",
         thumb: "{{ image | img_url: '120x120', crop: 'center' }}",
         type: 'image'
       }{% unless forloop.last %},{% endunless %}
     {% endfor %}
   {% endif %}
  ];
  
  const variantVideos = {
  {% for variant in product.variants %}
    "{{ variant.id }}": {% if variant.metafields.custom.product_video_url %}"{{ variant.metafields.custom.product_video_url }}"{% else %}null{% endif %}{% unless forloop.last %},{% endunless %}
  {% endfor %}
  };
  
  const productVariants = {
   {% for variant in product.variants %}
     "{{ variant.id }}": {
       id: {{ variant.id }},
       title: "{{ variant.title | escape }}",
       price: {{ variant.price }}, // Raw price in cents
       formatted_price: "{{ variant.price | money }}", // Shopify formatted price
       available: {{ variant.available }},
       featured_image: {% if variant.featured_image %}"{{ variant.featured_image | img_url: '600x600' }}"{% else %}null{% endif %},
       featured_image_full: {% if variant.featured_image %}"{{ variant.featured_image | img_url: '1200x1200' }}"{% else %}null{% endif %},
       option1: "{{ variant.option1 | escape }}",
       option2: "{{ variant.option2 | escape }}",
       option3: "{{ variant.option3 | escape }}"
     }{% unless forloop.last %},{% endunless %}
   {% endfor %}
  };
  
  const variantContent = {
   {% comment %}First store the parent/default product content{% endcomment %}
   {% assign first_variant = product.variants | first %}
   {% assign parent_title = first_variant.metafields.custom.product_title | default: product.metafields.custom.product_title | default: product.title %}
   {% assign parent_tagline = first_variant.metafields.custom.tagline | default: product.metafields.custom.tagline | default: 'Refined, Redesigned, Re-engineered.' %}
   {% assign parent_testimonial_title = first_variant.metafields.custom.testimonial_title | default: product.metafields.custom.testimonial_title | default: 'My Go-To Bag for Quick Getaways!' %}
   {% assign parent_testimonial_text = first_variant.metafields.custom.testimonial_text.value | default: product.metafields.custom.testimonial_text.value | default: "Took this on a weekend trip, and it fit everything without feeling bulky. I'm obsessed." %}
   {% assign parent_description = first_variant.metafields.custom.description.value | default: product.metafields.custom.description.value | default: product.description %}
   {% assign parent_specs = first_variant.metafields.custom.specs.value | default: product.metafields.custom.specs.value | default: product.metafields.custom.specs %}
   {% assign parent_features = first_variant.metafields.custom.features.value | default: product.metafields.custom.features.value | default: product.metafields.custom.features | split: ',' %}
   {% assign parent_functions = first_variant.metafields.custom.functions.value | default: product.metafields.custom.functions.value | default: product.metafields.custom.functions %}
   {% assign parent_function_image_urls = first_variant.metafields.custom.function_image_urls.value | default: product.metafields.custom.function_image_urls.value | default: product.metafields.custom.function_image_urls %}
   {% assign parent_material = first_variant.metafields.custom.material.value | default: product.metafields.custom.material.value | default: product.metafields.custom.material %}
   {% assign parent_product_video_url = first_variant.metafields.custom.product_video_url.value | default: product.metafields.custom.product_video_url.value | default: product.metafields.custom.product_video_url %}

   {% for variant in product.variants %}
     "{{ variant.id }}": {
       {% assign variant_title = variant.metafields.custom.product_title %}
       {% assign variant_tagline = variant.metafields.custom.tagline %}
       {% assign variant_testimonial_title = variant.metafields.custom.testimonial_title %}
       {% assign variant_testimonial_text = variant.metafields.custom.testimonial_text.value %}
       {% assign variant_description = variant.metafields.custom.description.value %}
       {% assign variant_specs = variant.metafields.custom.specs.value %}
       {% assign variant_material = variant.metafields.custom.material.value %}
       {% assign variant_product_video_url = variant.metafields.custom.product_video_url.value %}
       
       title: {% if variant_title != blank %}{{ variant_title | json }}{% else %}{{ parent_title | json }}{% endif %},
       tagline: {% if variant_tagline != blank %}{{ variant_tagline | json }}{% else %}{{ parent_tagline | json }}{% endif %},
       testimonial_title: {% if variant_testimonial_title != blank %}{{ variant_testimonial_title | json }}{% else %}{{ parent_testimonial_title | json }}{% endif %},
       testimonial_text: {% if variant_testimonial_text != blank %}{{ variant_testimonial_text | json }}{% else %}{{ parent_testimonial_text | json }}{% endif %},
       description: {% if variant_description != blank %}{{ variant_description | json }}{% else %}{{ parent_description | json }}{% endif %},
       specs: {% if variant.metafields.custom.specs.type == 'rich_text' %}{{ variant.metafields.custom.specs | metafield_tag | strip_newlines | json }}{% elsif variant_specs != blank %}{{ variant_specs | json }}{% else %}{{ parent_specs | json }}{% endif %},
       material: {% if variant_material != blank %}{{ variant_material | json }}{% else %}{{ parent_material | json }}{% endif %},
       product_video_url: {% if variant_product_video_url != blank %}{{ variant_product_video_url | json }}{% else %}{{ parent_product_video_url | json }}{% endif %},
       features: [
         {% assign variant_features = variant.metafields.custom.features.value | default: variant.metafields.custom.features %}
         {% if variant_features != blank %}
           {% assign features_list = variant_features | split: ',' %}
           {% for feature_item in features_list %}
             {{ feature_item | strip | json }}{% unless forloop.last %},{% endunless %}
           {% endfor %}
         {% else %}
           {% for feature_item in parent_features %}
             {{ feature_item | strip | json }}{% unless forloop.last %},{% endunless %}
           {% endfor %}
         {% endif %}
       ],
       functions: [
         {% assign variant_functions = variant.metafields.custom.functions.value %}
         {% if variant_functions != blank %}
           {% assign functions_list = variant_functions | split: '|' %}
           {% for func_item in functions_list %}
             {% assign func_details = func_item | split: ':' %}
             {% if func_details.size >= 2 %}
               {
                 title: {{ func_details[0] | strip | json }},
                 description: {{ func_details[1] | strip | json }}
               }{% unless forloop.last %},{% endunless %}
             {% endif %}
           {% endfor %}
         {% else %}
           {% assign parent_functions_list = parent_functions | split: '|' %}
           {% for func_item in parent_functions_list %}
             {% assign func_details = func_item | split: ':' %}
             {% if func_details.size >= 2 %}
               {
                 title: {{ func_details[0] | strip | json }},
                 description: {{ func_details[1] | strip | json }}
               }{% unless forloop.last %},{% endunless %}
             {% endif %}
           {% endfor %}
         {% endif %}
       ],
       function_image_urls: [
         {% assign variant_image_urls = variant.metafields.custom.function_image_urls.value | default: variant.metafields.custom.function_image_urls %}
         {% if variant_image_urls != blank %}
           {% assign image_urls_liquid_array = variant_image_urls | split: ',' %}
           {% for url_value in image_urls_liquid_array %}
             {{ url_value | strip | json }}{% unless forloop.last %},{% endunless %}
           {% endfor %}
         {% elsif parent_function_image_urls != blank %}
           {% assign parent_image_urls = parent_function_image_urls | split: ',' %}
           {% for url_value in parent_image_urls %}
             {{ url_value | strip | json }}{% unless forloop.last %},{% endunless %}
           {% endfor %}
         {% else %}
           "https://symplofficial.com/cdn/shop/files/CommuterPack_V2-1_9da0b7c9-0468-4cd5-9359-d6ab8fb23fa1_400x400_crop_center.jpg?v=1746199613",
           "https://symplofficial.com/cdn/shop/files/CommuterPack_V2-1_9da0b7c9-0468-4cd5-9359-d6ab8fb23fa1_400x400_crop_center.jpg?v=1746199613",
           "https://symplofficial.com/cdn/shop/files/CommuterPack_V2-1_9da0b7c9-0468-4cd5-9359-d6ab8fb23fa1_400x400_crop_center.jpg?v=1746199613",
           "https://symplofficial.com/cdn/shop/files/CommuterPack_V2-1_9da0b7c9-0468-4cd5-9359-d6ab8fb23fa1_400x400_crop_center.jpg?v=1746199613"
         {% endif %}
       ]
     }{% unless forloop.last %},{% endunless %}
   {% endfor %}
  };
  
  let currentVariant = {{ current_variant | json }};
  let currentColorImages = [];
  let currentMobileIndex = 0;
  
  const DESKTOP_NAVIGABLE_START_INDEX = 5; 
  let currentDesktopNavigableDisplayIndex = 0;
  
  const DEFAULT_FUNCTION_IMAGE_URL = "https://symplofficial.com/cdn/shop/files/CommuterPack_V2-1_9da0b7c9-0468-4cd5-9359-d6ab8fb23fa1_400x400_crop_center.jpg?v=1746199613";
  const PLACEHOLDER_IMAGE_URL = "/placeholder.svg?height=400&width=400";
  
  // Global modal state
  let currentModalMediaIndex = 0;
  let currentModalMediaSet = [];
  let currentZoomLevel = 1;
  const ZOOM_STEP = 0.2;
  const MIN_ZOOM_LEVEL = 1;
  const MAX_ZOOM_LEVEL = 3;
  
  const variant_gallery_data = {
    {%- for variant in product.variants -%}
      "{{ variant.id }}": {
        {%- if variant.metafields.custom.variant_gallery.value != blank -%}
          "gallery": [
            {%- for image in variant.metafields.custom.variant_gallery.value -%}
              {
                "src": "{{ image | img_url: '2200x2800', crop: 'center' }}",
                "fullSrc": "{{ image | img_url: '2048x' }}",
                "thumb": "{{ image | img_url: '120x120', crop: 'center' }}",
                "type": "image",
                "alt": "{{ image.alt | escape }}"
              }{% unless forloop.last %},{% endunless %}
            {%- endfor -%}
          ]
        {%- else -%}
          "gallery": []
        {%- endif -%}
      }{% unless forloop.last %},{% endunless %}
    {%- endfor -%}
  };
  
  document.addEventListener("DOMContentLoaded", () => {
   try {
     initImageGallery();
     initVariantSelector();
     initMobileImageNavigation();
     initDesktopNavigableCellNavigation();
     initAddToCart();
     initBundleCarousel();
     initFunctionsCarousel();
     initRelatedProductsCarousel();
     initShopPayInstallments();
     initAccordions();
     initModalNavigationAndZoom(); 
     
     if (currentVariant && productVariants[currentVariant.id]) {
       currentVariant = productVariants[currentVariant.id];
       updateContentForVariant(currentVariant);
     } else if (Object.keys(productVariants).length > 0) {
       currentVariant = Object.values(productVariants)[0];
       updateContentForVariant(currentVariant);
     }
     
     // setTimeout(() => { toggleAccordion('description'); }, 500);
   } catch (error) {
     console.error("Error initializing product page:", error);
   }
  });
  
  function initAccordions() {
   const accordionHeaders = document.querySelectorAll(".accordion-header");
   accordionHeaders.forEach(header => {
     header.removeEventListener("click", handleAccordionClick); 
     header.addEventListener("click", handleAccordionClick);
   });
  }
  
  function handleAccordionClick(event) {
   const sectionId = event.currentTarget.getAttribute("data-section");
   if (sectionId) toggleAccordion(sectionId);
  }
  
  function toggleAccordion(sectionId) {
   const content = document.getElementById(sectionId + "-content");
   const icon = document.getElementById(sectionId + "-icon");
   if (!content || !icon) return;
   
   const isCurrentlyOpen = content.style.maxHeight !== "0px" && content.style.maxHeight !== "";
   document.querySelectorAll('.accordion-content').forEach(c => { if (c !== content) c.style.maxHeight = "0px"; });
   document.querySelectorAll('.accordion-icon').forEach(i => { if (i !== icon) i.style.transform = "rotate(0deg)"; });
   
   content.style.maxHeight = isCurrentlyOpen ? "0px" : content.scrollHeight + "px";
   icon.style.transform = isCurrentlyOpen ? "rotate(0deg)" : "rotate(180deg)";
  }
  
  function getImagesByVariant(variant) {
    if (!variant) {
      return [...productImages];
    }
    // New: Prioritize the variant_gallery metafield
    if (variant_gallery_data[variant.id] && variant_gallery_data[variant.id].gallery.length > 0) {
      let images = [...variant_gallery_data[variant.id].gallery];
      // Optionally, add the video if it exists for the variant
      if (variantVideos && variantVideos[variant.id]) {
        const videoItem = {
          src: variantVideos[variant.id],
          fullSrc: variantVideos[variant.id],
          thumb: variantVideos[variant.id], // You might want a video thumbnail here
          alt: "Product Video for " + variant.title,
          type: 'video'
        };
        const videoInsertPosition = Math.min(4, images.length);
        images.splice(videoInsertPosition, 0, videoItem);
      }
      return images;
    }

    // Fallback to the original logic if no variant_gallery is found
    let imagesForVariant = productImages.filter(img => {
      if (!img.alt) return false;
      const alt = img.alt.toLowerCase();
      const optionValues = [variant.option1, variant.option2, variant.option3].filter(Boolean).map(opt => opt.toLowerCase());
      return optionValues.some(optVal => alt.includes(optVal));
    });

    if (imagesForVariant.length === 0) {
      imagesForVariant = [...productImages];
    }

    if (variantVideos && variantVideos[variant.id]) {
      const videoItem = {
        src: variantVideos[variant.id],
        fullSrc: variantVideos[variant.id],
        thumb: variantVideos[variant.id],
        alt: "Product Video for " + variant.title,
        type: 'video'
      };
      const videoInsertPosition = Math.min(4, imagesForVariant.length);
      imagesForVariant.splice(videoInsertPosition, 0, videoItem);
    }
    return imagesForVariant;
  }
  
  function initImageGallery() {
    if (!currentVariant && productVariants && Object.keys(productVariants).length > 0) {
      currentVariant = Object.values(productVariants)[0];
    } else if (currentVariant && productVariants[currentVariant.id]) {
      currentVariant = productVariants[currentVariant.id]; 
    }
    currentColorImages = currentVariant ? getImagesByVariant(currentVariant) : [...productImages];
    updateGalleryImages(currentColorImages);
  }
  
  function updateGalleryImages(images) {
    currentColorImages = images;
    updateMobileGallery(images);
    updateDesktopGallery(images);
    currentMobileIndex = 0;
    updateMobileImageDisplay();
  }
  
  function createDesktopGridCell(itemData) {
      const gridCell = document.createElement('div');
      gridCell.className = 'gallery-item';
      gridCell.style.cssText = 'background-color: #f6f6f6; border-radius: 8px; overflow: hidden; aspect-ratio: 1/1.4; position: relative;';
  
  if (itemData.type === 'video') {
      const video = document.createElement('video');
      video.autoplay = true;
      video.loop = true;
      video.muted = true;
      video.playsInline = true;
      video.style.cssText = 'width: 100%; height: 100%; object-fit: cover; cursor: pointer;';
      video.onclick = () => openVideoModal(video);
  
      const source = document.createElement('source');
      source.src = itemData.src;
      source.type = 'video/mp4';
      video.appendChild(source);
  
      gridCell.appendChild(video);
  }  else {
          const img = document.createElement('img');
          img.src = itemData.src; img.alt = itemData.alt;
          img.style.cssText = 'width: 100%; height: 100%; object-fit: contain; background: #f6f6f6; cursor: pointer;';
          img.onclick = () => openImageModal(itemData.fullSrc);
          gridCell.appendChild(img);
      }
      return gridCell;
  }
  
  function createDesktopNavigableCellElement() {
      const navigableCell = document.createElement('div');
      navigableCell.className = 'gallery-item desktop-navigable-cell';
      navigableCell.style.cssText = 'background-color: #f6f6f6; border-radius: 8px; overflow: hidden; aspect-ratio: 1/1.4; position: relative;';
      
      const mediaContainer = document.createElement('div');
      mediaContainer.style.cssText = 'width: 100%; height: 100%; position: relative;';
  
      const navImg = document.createElement('img');
      navImg.id = 'desktopNavigableImage';
      navImg.style.cssText = 'width: 100%; height: 100%; object-fit: cover; background: #f6f6f6; cursor: pointer; display: block;';
      mediaContainer.appendChild(navImg);
  
      const navVideo = document.createElement('video');
      navVideo.id = 'desktopNavigableVideo';
      navVideo.style.cssText = 'width: 100%; height: 100%; object-fit: cover; cursor: pointer; display: none;';
      navVideo.controls = false; navVideo.muted = true; navVideo.loop = true; navVideo.autoplay = true;
      const navVideoSource = document.createElement('source');
      navVideoSource.id = 'desktopNavigableVideoSource'; navVideoSource.type = 'video/mp4';
      navVideo.appendChild(navVideoSource);
      mediaContainer.appendChild(navVideo);
      navigableCell.appendChild(mediaContainer);
  
      const prevBtn = document.createElement('button');
      prevBtn.className = 'individual-prev desktop-nav-arrow';
      prevBtn.setAttribute('aria-label', 'Previous navigable image');
      prevBtn.innerHTML = '<svg width="16" height="16" viewBox="0 0 24 24"><path d="M15 18L9 12L15 6" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/></svg>';
      prevBtn.style.cssText = 'position: absolute; top: 50%; left: 8px; transform: translateY(-50%); background: rgba(255,255,255,0.9); border: none; border-radius: 50%; width: 32px; height: 32px; display: flex; align-items: center; justify-content: center; cursor: pointer; transition: all 0.3s ease; box-shadow: 0 2px 8px rgba(0,0,0,0.15); z-index: 3; opacity: 0.8;';
      navigableCell.appendChild(prevBtn);
  
      const nextBtn = document.createElement('button');
      nextBtn.className = 'individual-next desktop-nav-arrow';
      nextBtn.setAttribute('aria-label', 'Next navigable image');
      nextBtn.innerHTML = '<svg width="16" height="16" viewBox="0 0 24 24"><path d="M9 18L15 12L9 6" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/></svg>';
      nextBtn.style.cssText = 'position: absolute; top: 50%; right: 8px; transform: translateY(-50%); background: rgba(255,255,255,0.9); border: none; border-radius: 50%; width: 32px; height: 32px; display: flex; align-items: center; justify-content: center; cursor: pointer; transition: all 0.3s ease; box-shadow: 0 2px 8px rgba(0,0,0,0.15); z-index: 3; opacity: 0.8;';
      navigableCell.appendChild(nextBtn);
  
      const counterDiv = document.createElement('div');
      counterDiv.className = 'image-counter';
      counterDiv.id = 'desktopNavigableCounter';
      navigableCell.appendChild(counterDiv);
      
      return navigableCell;
  }
  
  function updateDesktopGallery(images) {
    const desktopGrid = document.getElementById('desktopGrid');
    const dotsContainer = document.getElementById('desktopGalleryDots');
  
    if (!desktopGrid || !dotsContainer) return;
    desktopGrid.innerHTML = '';
    dotsContainer.innerHTML = '';
    dotsContainer.style.display = 'none';
  
    const numItemsAvailable = images.length;
  
    if (numItemsAvailable === 0) {
      return;
    }
  
    if (numItemsAvailable <= 5) {
      for (let i = 0; i < numItemsAvailable; i++) {
        const gridCell = createDesktopGridCell(images[i]);
        desktopGrid.appendChild(gridCell);
      }
      desktopGrid.style.gridTemplateColumns = numItemsAvailable === 1 ? '1fr' : '1fr 1fr';
    }
    else {
      desktopGrid.style.gridTemplateColumns = '1fr 1fr';
  
      for (let i = 0; i < 5; i++) {
        const gridCell = createDesktopGridCell(images[i]);
        desktopGrid.appendChild(gridCell);
      }
  
      const navigableCell = createDesktopNavigableCellElement();
      desktopGrid.appendChild(navigableCell);
      
      currentDesktopNavigableDisplayIndex = 0;
      updateDesktopNavigableCellContent(images);
      updateDesktopNavigableDots(images);
    }
  }
  
  function updateDesktopNavigableCellContent(allVariantImages) {
    const navImg = document.getElementById('desktopNavigableImage');
    const navVideo = document.getElementById('desktopNavigableVideo');
    const navVideoSource = document.getElementById('desktopNavigableVideoSource');
    const counter = document.getElementById('desktopNavigableCounter');
    const prevBtn = document.querySelector('.desktop-navigable-cell .individual-prev');
    const nextBtn = document.querySelector('.desktop-navigable-cell .individual-next');
  
    if (!navImg || !navVideo || !navVideoSource || !counter || !prevBtn || !nextBtn) return;
  
    const navigableMediaItems = allVariantImages.slice(DESKTOP_NAVIGABLE_START_INDEX);
    
    const currentItem = navigableMediaItems[currentDesktopNavigableDisplayIndex];
    const actualImageIndexInFullList = DESKTOP_NAVIGABLE_START_INDEX + currentDesktopNavigableDisplayIndex;
  
    if (currentItem.type === 'video') {
        navImg.style.display = 'none';
        navVideo.style.display = 'block';
        navVideoSource.src = currentItem.src;
        navVideo.load();
        navVideo.onclick = () => openVideoModal(navVideo);
    } else {
        navVideo.style.display = 'none';
        navImg.style.display = 'block';
        navImg.src = currentItem.src;
        navImg.alt = currentItem.alt;
        navImg.onclick = () => openImageModal(currentItem.fullSrc);
    }
    
    // Hide counter and navigation arrows if there are exactly 6 images total (desktop only)
    const isExactly6Images = allVariantImages.length === 6;
    const isDesktop = window.innerWidth > 900;
    
    if (isExactly6Images && isDesktop) {
      counter.style.display = 'none';
      prevBtn.style.display = 'none';
      nextBtn.style.display = 'none';
    } else {
      counter.style.display = 'block';
      counter.textContent = `${actualImageIndexInFullList + 1} / ${allVariantImages.length}`;
      prevBtn.style.display = 'block';
      nextBtn.style.display = 'block';
      
      prevBtn.disabled = currentDesktopNavigableDisplayIndex === 0;
      prevBtn.style.opacity = prevBtn.disabled ? '0.4' : '0.8';
      nextBtn.disabled = currentDesktopNavigableDisplayIndex >= navigableMediaItems.length - 1;
      nextBtn.style.opacity = nextBtn.disabled ? '0.4' : '0.8';
    }
  }
  
    function updateDesktopNavigableDots(allVariantImages) {
    const dotsContainer = document.getElementById('desktopGalleryDots');
    if (!dotsContainer) return;
    dotsContainer.innerHTML = '';

    const navigableMediaItems = allVariantImages.slice(DESKTOP_NAVIGABLE_START_INDEX);
    const isExactly6Images = allVariantImages.length === 6;
    const isDesktop = window.innerWidth > 900;
    
    // Hide dots if there are exactly 6 images total (desktop only)
    if (isExactly6Images && isDesktop) {
      dotsContainer.style.display = 'none';
      return;
    }
    
    if (navigableMediaItems.length > 1) {
      navigableMediaItems.forEach((_, index) => {
        const dot = document.createElement('button');
        dot.className = `gallery-dot${index === currentDesktopNavigableDisplayIndex ? ' active' : ''}`;
        dot.setAttribute('aria-label', `Go to image ${DESKTOP_NAVIGABLE_START_INDEX + index + 1}`);
        dot.addEventListener('click', () => {
          currentDesktopNavigableDisplayIndex = index;
          updateDesktopNavigableCellContent(allVariantImages);
          updateDesktopNavigableDots(allVariantImages);
        });
        dotsContainer.appendChild(dot);
      });
      dotsContainer.style.display = 'flex';
    } else {
      dotsContainer.style.display = 'none';
    }
  }
  
    function initDesktopNavigableCellNavigation() {
    const desktopGrid = document.getElementById('desktopGrid');
    if (!desktopGrid) return;

    desktopGrid.addEventListener('click', (event) => {
      const target = event.target.closest('button.desktop-nav-arrow');
      if (!target) return;

      const navigableCell = target.closest('.desktop-navigable-cell');
      if (!navigableCell) return;
      
      const navigableMediaItems = currentColorImages.slice(DESKTOP_NAVIGABLE_START_INDEX);

      if (target.classList.contains('individual-prev')) {
        if (currentDesktopNavigableDisplayIndex > 0) {
          currentDesktopNavigableDisplayIndex--;
          updateDesktopNavigableCellContent(currentColorImages);
          updateDesktopNavigableDots(currentColorImages);
        }
      } else if (target.classList.contains('individual-next')) {
        if (currentDesktopNavigableDisplayIndex < navigableMediaItems.length - 1) {
          currentDesktopNavigableDisplayIndex++;
          updateDesktopNavigableCellContent(currentColorImages);
          updateDesktopNavigableDots(currentColorImages);
        }
      }
    });
    
    // Handle window resize to re-evaluate visibility of navigation elements
    window.addEventListener('resize', () => {
      if (currentColorImages && currentColorImages.length > 0) {
        updateDesktopNavigableCellContent(currentColorImages);
        updateDesktopNavigableDots(currentColorImages);
      }
    });
  }
  
  function updateMobileGallery(images) {
    const mobileMainImage = document.getElementById('mobileMainImage');
    const mobileMainVideo = document.getElementById('mobileMainVideo');
    const mobileThumbnails = document.getElementById('mobileThumbnails');
    // const mobileImageTotal = document.getElementById('mobileImageTotal'); // removed
  
    if (!mobileMainImage || !mobileMainVideo || !mobileThumbnails) return;
  
    if (images.length > 0) {
      const firstItem = images[0];
      if (firstItem.type === 'video') {
        mobileMainImage.style.display = 'none';
        mobileMainVideo.style.display = 'block';
        const source = mobileMainVideo.querySelector('source');
        if (source) source.src = firstItem.src;
        mobileMainVideo.load();
        mobileMainVideo.onclick = () => openVideoModal(mobileMainVideo);
      } else {
        mobileMainVideo.style.display = 'none';
        mobileMainImage.style.display = 'block';
        mobileMainImage.src = firstItem.src;
        mobileMainImage.alt = firstItem.alt;
        mobileMainImage.onclick = () => openImageModal(firstItem.fullSrc);
      }
    } else {
        mobileMainImage.src = PLACEHOLDER_IMAGE_URL;
        mobileMainImage.alt = "No image available";
        mobileMainVideo.style.display = 'none';
    }
  
    // mobileImageTotal.textContent = images.length; // removed
    mobileThumbnails.innerHTML = '';
    images.forEach((image, index) => {
      const thumb = document.createElement('div');
      thumb.className = `mobile-thumb${index === 0 ? ' active' : ''}`;
      thumb.setAttribute('data-image-index', index);
      thumb.style.cssText = `min-width: 55px; width: 55px; height: 55px; background-color: #f6f6f6; border-radius: 6px; overflow: hidden; cursor: pointer; border: ${index === 0 ? '2px solid #000' : '2px solid transparent'}; transition: all 0.3s ease; flex-shrink: 0; position: relative;`;
      if (image.type === 'video') {
        const video = document.createElement('video');
        video.style.cssText = 'width: 100%; height: 100%; object-fit: cover;';
        video.muted = true;
        const source = document.createElement('source');
        source.src = image.thumb || image.src;
        source.type = 'video/mp4';
        video.appendChild(source);
        const playIcon = document.createElement('div');
        playIcon.style.cssText = 'position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background: rgba(0,0,0,0.7); border-radius: 50%; width: 18px; height: 18px; display: flex; align-items: center; justify-content: center; pointer-events: none;';
        playIcon.innerHTML = '<svg width="10" height="10" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8 5V19L19 12L8 5Z" fill="white"/></svg>';
        thumb.appendChild(video);
        thumb.appendChild(playIcon);
      } else {
        const img = document.createElement('img');
        img.src = image.thumb;
        img.alt = image.alt;
        img.style.cssText = 'width: 100%; height: 100%; object-fit: cover; background: #f6f6f6;';
        thumb.appendChild(img);
      }
      thumb.addEventListener('click', () => { currentMobileIndex = index; updateMobileImageDisplay(); });
      mobileThumbnails.appendChild(thumb);
    });
  }
  
  function initMobileImageNavigation() {
    if (window.mobileImageNavInitialized) return;
    window.mobileImageNavInitialized = true;
    console.log('initMobileImageNavigation called');
    const container = document.querySelector('.single-image-container');
    if (!container) return;
    let startX = 0;
    let currentX = 0;
    let isDragging = false;
  
    function touchStartHandler(e) {
      if (e.touches.length !== 1) return;
      startX = e.touches[0].clientX;
      currentX = startX;
      isDragging = true;
    }
    function touchMoveHandler(e) {
      if (!isDragging) return;
      currentX = e.touches[0].clientX;
    }
    // function touchEndHandler(e) {
    //   if (!isDragging) return;
    //   isDragging = false;
    //   const diffX = startX - currentX;
    //   if (Math.abs(diffX) > 50) {
    //     if (diffX > 0 && currentMobileIndex < currentColorImages.length - 1) {
    //       currentMobileIndex++;
    //       console.log('Swipe right, index:', currentMobileIndex);
    //       updateMobileImageDisplay();
    //     } else if (diffX < 0 && currentMobileIndex > 0) {
    //       currentMobileIndex--;
    //       console.log('Swipe left, index:', currentMobileIndex);
    //       updateMobileImageDisplay();
    //     }
    //   }
    // }
  
    // Remove any previous listeners (defensive)
    container.removeEventListener('touchstart', touchStartHandler);
    container.removeEventListener('touchmove', touchMoveHandler);
    container.removeEventListener('touchend', touchEndHandler);
  
    container.addEventListener('touchstart', touchStartHandler, { passive: true });
    container.addEventListener('touchmove', touchMoveHandler, { passive: true });
    container.addEventListener('touchend', touchEndHandler, { passive: true });
  }
  
  function updateMobileImageDisplay() {
    const mobileMainImage = document.getElementById('mobileMainImage');
    const mobileMainVideo = document.getElementById('mobileMainVideo');
    const mobileThumbs = document.querySelectorAll('.mobile-thumb');
  
    if (!mobileMainImage || !mobileMainVideo) return;
  
    if (currentColorImages && currentColorImages[currentMobileIndex]) {
      const currentItem = currentColorImages[currentMobileIndex];
      if (currentItem.type === 'video') {
        mobileMainImage.style.display = 'none'; mobileMainVideo.style.display = 'block';
        const source = mobileMainVideo.querySelector('source');
        if (source) source.src = currentItem.src;
        mobileMainVideo.load();
        mobileMainVideo.onclick = () => openVideoModal(mobileMainVideo);
      } else {
        mobileMainVideo.style.display = 'none'; mobileMainImage.style.display = 'block';
        mobileMainImage.src = currentItem.src; mobileMainImage.alt = currentItem.alt;
        mobileMainImage.onclick = () => openImageModal(currentItem.fullSrc);
      }
    } else if (currentColorImages && currentColorImages.length === 0) {
        mobileMainImage.src = PLACEHOLDER_IMAGE_URL; mobileMainImage.alt = "No images available";
        mobileMainVideo.style.display = 'none';
    }
  
    if (mobileThumbs) {
      mobileThumbs.forEach((thumb, index) => {
        thumb.classList.toggle('active', index === currentMobileIndex);
        thumb.style.borderColor = index === currentMobileIndex ? '#000' : 'transparent';
      });
    }
  }
  
  function initVariantSelector() {
    const fabricOptions = document.querySelectorAll(".fabric-option");
    const sizeOptions = document.querySelectorAll(".size-option");
    
    fabricOptions.forEach(option => {
      option.addEventListener("click", () => {
        const value = option.getAttribute("data-value");
        const variantId = option.getAttribute("data-variant-id");
        fabricOptions.forEach(opt => { opt.classList.remove("active"); opt.style.border = "3px solid lightgray"; });
        option.classList.add("active"); option.style.border = "3px solid #000";
        const fabricName = document.getElementById("selectedFabricName");
        if (fabricName) fabricName.textContent = value;
        
        if (variantId && productVariants[variantId]) switchToVariant(productVariants[variantId]);
        else if (variantId) {
          const fallbackVariant = Object.values(productVariants).find(v => v.option1 === value || v.option2 === value || v.option3 === value);
          if (fallbackVariant) switchToVariant(fallbackVariant);
        }
      });
    });
    
    sizeOptions.forEach(option => {
      option.addEventListener("click", () => {
        const value = option.getAttribute("data-value");
        sizeOptions.forEach(opt => { opt.classList.remove("active"); opt.style.backgroundColor = "#d8e2e2"; opt.style.color = "#2f6f6f"; });
        option.classList.add("active"); option.style.backgroundColor = "#2f6f6f"; option.style.color = "white";
        
        const currentFabricOption = document.querySelector(".fabric-option.active");
        const currentFabric = currentFabricOption ? currentFabricOption.getAttribute("data-value") : (currentVariant ? (currentVariant.option1 || currentVariant.option2 || currentVariant.option3) : null);
        
        // Handle products with only size options (no fabric)
        if (!currentFabricOption) {
          // Find variant that matches the selected size
          const matchingVariant = Object.values(productVariants).find(v => 
            v.option1 === value || v.option2 === value || v.option3 === value
          );
          if (matchingVariant) {
            console.log('Size-only product: Switching to variant', matchingVariant.id, 'with title:', matchingVariant.title);
            switchToVariant(matchingVariant);
            return;
          }
        }
        
        // Handle products with both fabric and size options
        if (currentFabric) {
          const matchingVariant = Object.values(productVariants).find(v => 
            (v.option1 === currentFabric || v.option2 === currentFabric || v.option3 === currentFabric) &&
            (v.option1 === value || v.option2 === value || v.option3 === value)
          );
          if (matchingVariant) switchToVariant(matchingVariant);
        }
      });
    });
  }
  
  function switchToVariant(variant) {
    if (!variant || !productVariants[variant.id]) return; 
    currentVariant = productVariants[variant.id]; 
    
    const productSelect = document.getElementById("ProductSelect");
    if (productSelect) productSelect.value = currentVariant.id;
    
    const priceElement = document.getElementById("variantPrice");
    if (priceElement) priceElement.textContent = currentVariant.formatted_price; 
    
    const addToCartButton = document.getElementById("AddToCart");
    const addToCartText = document.getElementById("AddToCartText");
    if (addToCartButton && addToCartText) {
      addToCartButton.disabled = !currentVariant.available;
      addToCartButton.classList.toggle("disabled", !currentVariant.available);
      addToCartButton.style.backgroundColor = currentVariant.available ? "#111" : "#ccc";
      addToCartButton.style.cursor = currentVariant.available ? "pointer" : "not-allowed";
      addToCartText.textContent = currentVariant.available ? "Add to bag" : "Sold out";
    }
    
    updateContentForVariant(currentVariant); 
    currentColorImages = getImagesByVariant(currentVariant);
    updateGalleryImages(currentColorImages);
    document.dispatchEvent(new CustomEvent('variant:change', { detail: { variant: currentVariant } }));
  }
  
  function updateContentForVariant(variant) {
    if (!variant || !variantContent || !variantContent[variant.id]) return;
    
    // Get parent content (first variant is always the parent/default)
    const parentContent = variantContent[Object.keys(variantContent)[0]];
    
    // Get current variant content with inheritance from parent
    const content = {
      ...parentContent, // Start with all parent content
      ...variantContent[variant.id] // Override with variant-specific content if it exists
    };
    
    // Ensure arrays and objects inherit properly
    content.features = (variantContent[variant.id].features && variantContent[variant.id].features.length > 0) 
      ? variantContent[variant.id].features 
      : parentContent.features;
      
    content.functions = (variantContent[variant.id].functions && variantContent[variant.id].functions.length > 0)
      ? variantContent[variant.id].functions
      : parentContent.functions;
      
    content.function_image_urls = (variantContent[variant.id].function_image_urls && variantContent[variant.id].function_image_urls.length > 0)
      ? variantContent[variant.id].function_image_urls
      : parentContent.function_image_urls;
      
    // Ensure scalar fields inherit properly
    content.material = variantContent[variant.id].material || parentContent.material;
    content.product_video_url = variantContent[variant.id].product_video_url || parentContent.product_video_url;
    
    // Update all content sections
    const titleElement = document.getElementById("dynamicProductTitle");
    if (titleElement) {
      console.log('Updating product title to:', content.title);
      titleElement.textContent = content.title;
    }
    
    const taglineElement = document.getElementById("dynamicTagline");
    if (taglineElement) taglineElement.textContent = content.tagline;
    
    const testimonialTitleElement = document.querySelector(".testimonial-content h3");
    if (testimonialTitleElement) testimonialTitleElement.textContent = content.testimonial_title;
    
    const testimonialTextElement = document.querySelector(".testimonial-text");
    if (testimonialTextElement) testimonialTextElement.textContent = `"${content.testimonial_text}"`;
    
    const descriptionElement = document.getElementById("dynamicDescription");
    if (descriptionElement) descriptionElement.innerHTML = content.description; 
    
    const specsElement = document.getElementById("dynamicSpecs");
    if (specsElement) {
      const div = document.createElement('div');
      div.style.cssText = 'white-space: pre-wrap; margin: 0; font-family: inherit;';
      
      // Apply bold formatting to key labels
      let formattedSpecs = content.specs
        .replace(/Size: /g, '<strong>Size:</strong> ')
        .replace(/Size:/g, '<strong>Size:</strong>')
        .replace(/Volume: /g, '<strong>Volume:</strong> ')
        .replace(/Volume:/g, '<strong>Volume:</strong>')
        .replace(/Weight: /g, '<strong>Weight:</strong> ')
        .replace(/Weight:/g, '<strong>Weight:</strong>')
        .replace(/Materials: /g, '<strong>Materials:</strong> ')
        .replace(/Materials:/g, '<strong>Materials:</strong>')
        .replace(/Materials/g, '<strong>Materials:</strong>')
        .replace(/\n/g, '<br>');
      
      div.innerHTML = formattedSpecs; 
      specsElement.innerHTML = ''; 
      specsElement.appendChild(div);
    }
    
    // Update features and functions
    updateFeatureHighlights(content.features);
    updateFunctionsSection(content.functions, content.function_image_urls);
  }
  
  function toTitleCase(str) {
    return str.replace(/\w\S*/g, function(txt) {
      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
    });
  }
  
  function updateFeatureHighlights(features) {
    const leftList = document.getElementById("featureHighlightsLeft");
    const rightList = document.getElementById("featureHighlightsRight");
    const mobileList = document.querySelector(".mobilefeaturehighlighted");
    
    if (!leftList || !rightList) return;
    
    // Get features from current variant or inherit from parent product
    const featuresToUse = features && features.length > 0 ? features : 
      (variantContent[Object.keys(variantContent)[0]].features || []);
    
    leftList.innerHTML = ''; 
    rightList.innerHTML = '';
    if (mobileList) mobileList.innerHTML = '';
    
    if (featuresToUse.length > 0) {
      const halfLength = Math.ceil(featuresToUse.length / 2);
      
      featuresToUse.forEach((feature, index) => {
        // Create desktop feature item
        const li = document.createElement('li');
        li.innerHTML = feature.replace(/\n/g, '<br>'); // Use innerHTML to render line breaks
        li.style.cssText = 'margin-bottom: 12px; font-size: 13px; font-weight: 400; letter-spacing: 0.5px; color: #111; list-style: none; position: relative; padding-left: 18px; text-indent: -10px; line-height: 1.4;';
        
        // Add bullet point
        li.insertAdjacentText('afterbegin', '\u2022 ');
        
        // Add to appropriate list
        if (index < halfLength) {
          leftList.appendChild(li);
        } else {
          rightList.appendChild(li);
        }
        
        // Create mobile feature item if mobile list exists
        if (mobileList) {
          const mobileLi = document.createElement('li');
          mobileLi.innerHTML = feature.replace(/\n/g, '<br>'); // Use innerHTML to render line breaks
          mobileLi.style.cssText = 'margin-bottom: 8px; list-style: disc; color: gray; font-size: 13px; line-height: 1.7;';
          mobileList.appendChild(mobileLi);
        }
      });
    }
  }
  
  function ensureHttpsUrl(input) {
      if (!input || typeof input !== 'string') {
          return DEFAULT_FUNCTION_IMAGE_URL;
      }
      let str = input.trim();
      let extractedUrl = null;
      const urlMatch = str.match(/(https?:\/\/[^"'\s\[\]<>]+)/); 
      if (urlMatch && urlMatch[0]) {
          extractedUrl = urlMatch[0];
      } else {
          let cleaned = str;
          if ((cleaned.startsWith('"') && cleaned.endsWith('"')) ||
              (cleaned.startsWith("'") && cleaned.endsWith("'")) ||
              (cleaned.startsWith('[') && cleaned.endsWith(']'))) {
              cleaned = cleaned.substring(1, cleaned.length - 1).trim();
          }
          cleaned = cleaned.replace(/^[\s"'\\[<>]+|[\s"'\\]<>]+$/g, '').trim();
          if ((cleaned.startsWith('"') && cleaned.endsWith('"')) ||
              (cleaned.startsWith("'") && cleaned.endsWith("'"))) {
              cleaned = cleaned.substring(1, cleaned.length - 1).trim();
          }
          extractedUrl = cleaned;
      }
      if (!extractedUrl || extractedUrl.toLowerCase() === 'http' || extractedUrl.toLowerCase() === 'https') {
          return DEFAULT_FUNCTION_IMAGE_URL;
      }
      let processedUrl = extractedUrl;
      if (processedUrl.startsWith('//')) {
          processedUrl = 'https:' + processedUrl;
      } else if (processedUrl.startsWith('http://')) {
          processedUrl = processedUrl.replace(/^http:\/\//i, 'https://');
      } else if (!processedUrl.match(/^https?:\/\//i)) {
          if ((processedUrl.includes('.') || processedUrl.startsWith('/')) && 
              !processedUrl.includes(' ') && processedUrl.length > 3 &&
              !/^[a-z0-9]+([+-.]\w+)*:\/\//i.test(processedUrl)) { 
               processedUrl = 'https://' + processedUrl;
          } else if (!processedUrl.match(/^https?:\/\//i)) { 
              return DEFAULT_FUNCTION_IMAGE_URL;
          }
      }
      try {
          new URL(processedUrl); 
          return processedUrl;
      } catch (error) {
          return DEFAULT_FUNCTION_IMAGE_URL;
      }
  }
  
  function updateFunctionsSection(functions, functionImageUrls = []) {
    const functionsCarousel = document.getElementById("functionsCarousel");
    if (!functionsCarousel) return;
    functionsCarousel.innerHTML = ''; 
    if (functions && functions.length > 0) {
      functions.forEach((func, index) => {
        let mediaUrl = DEFAULT_FUNCTION_IMAGE_URL; 
        const rawUrlEntry = functionImageUrls && Array.isArray(functionImageUrls) ? functionImageUrls[index] : null;
        let urlStringToProcess = null;
        if (rawUrlEntry) {
          if (Array.isArray(rawUrlEntry)) { 
            if (rawUrlEntry.length > 0 && typeof rawUrlEntry[0] === 'string') {
              urlStringToProcess = rawUrlEntry[0];
            }
          } else if (typeof rawUrlEntry === 'string') {
            urlStringToProcess = rawUrlEntry;
          }
        }
        if (urlStringToProcess) {
          let processedUrl = ensureHttpsUrl(urlStringToProcess);
          // Only resize images for mobile, not videos
          const lowerUrl = processedUrl.toLowerCase();
          const isVideo = lowerUrl.endsWith('.mp4') || lowerUrl.endsWith('.webm') || lowerUrl.endsWith('.ogg') || lowerUrl.endsWith('.mov');
          if (processedUrl.includes('cdn.shopify.com') && window.innerWidth < 900 && !isVideo) {
            processedUrl = processedUrl.replace(/(\.[a-zA-Z0-9]+)($|\?)/, '_2000x3000_crop_center$1$2');
          }
          mediaUrl = processedUrl;
        }
        const functionItem = document.createElement('div');
        functionItem.className = 'function-item';
        functionItem.style.cssText = 'min-width: 400px; flex: 0 0 400px; text-align: left; max-width: 400px;'; 
        const escapedTitle = (func.title || 'Untitled Function').replace(/"/g, '&quot;');
        let mediaElementHtml = '';
        const lowerMediaUrl = mediaUrl.toLowerCase();
        if (lowerMediaUrl.endsWith('.mp4') || lowerMediaUrl.endsWith('.webm') || lowerMediaUrl.endsWith('.ogg') || lowerMediaUrl.endsWith('.mov')) {
          mediaElementHtml = `<video src="${mediaUrl}" loop muted playsinline webkit-playsinline style="width: 100%; height: 100%; object-fit: cover;" oncanplay="this.style.display='block'; this.play().catch(e => console.log('Autoplay prevented:', e));" onerror="this.style.display='none';" onloadstart="console.log('Loading video for ${escapedTitle}:', this.src);" onclick="this.paused ? this.play() : this.pause();">Your browser does not support the video tag.</video>`;
        } else {
          mediaElementHtml = `<img src="${mediaUrl}" alt="${escapedTitle}" style="width: 100%; height: 100%; object-fit: cover; background: #f6f6f6;" onerror="this.onerror=null; this.src='${DEFAULT_FUNCTION_IMAGE_URL}';" onload="console.log('Successfully loaded image for ${escapedTitle}:', this.src);">`;
        }
        functionItem.innerHTML = `
          <div class="function-media-container" style="background-color: #f6f6f6; border-radius: 12px; overflow: hidden; margin-bottom: 20px; aspect-ratio: 0.7; position: relative; height:525px; max-width:400px; min-width:400px;">${mediaElementHtml}</div>
          <div class="function-content">
            <h3 style="font-size: 24px;  margin-bottom: 12px; color: #000;  letter-spacing: 0.5px; line-height: 1.2;">${func.title || 'Untitled Function'}</h3>
            <p class="functiondescriptionadjust" style="margin: 0; font-size: 18px;  line-height: 1.5; letter-spacing: 0.5px; font-weight: 300;">${func.description || 'No description available'}</p>
          </div>`;
        functionsCarousel.appendChild(functionItem);
      });
    } else {
      const defaultFunctions = [
        { title: "TECH CADDY", description: "We designed a compartment that specializes in travel-sized daily items like chargers, cables, adapters, and more." },
        { title: "LAPTOP & VALUABLES POCKET", description: "Padded laptop compartment fits up to 16-inch laptops and keeps your device protected during travel." },
        { title: "LUGGAGE PASS-THROUGH", description: "Streamline your travel with a convenient luggage pass-through that slides over your rolling luggage handle for easy transport." },
        { title: "SIDE CARRY", description: "Switch to hand carry mode with the reinforced side handle for comfortable carrying when the bag is not on your back." }
      ];
      defaultFunctions.forEach((func) => {
        const functionItem = document.createElement('div');
        functionItem.className = 'function-item';
        functionItem.style.cssText = 'min-width: 400px; flex: 0 0 400px; text-align: left; max-width: 400px;'; 
        functionItem.innerHTML = `
          <div class="function-media-container" style="background-color: #f6f6f6; border-radius: 12px; overflow: hidden; margin-bottom: 20px; aspect-ratio: 0.7; position: relative; height:525px; max-width:400px; min-width:400px;"><img src="${DEFAULT_FUNCTION_IMAGE_URL}" alt="${func.title}" style="width: 100%; height: 100%; object-fit: cover;"></div>
          <div class="function-content">
            <h3 style="font-size: clamp(16px, 4vw, 18px); font-weight: 700; margin-bottom: 12px; color: #000; text-transform: uppercase; letter-spacing: 0.5px; line-height: 1.2;">${func.title}</h3>
            <p style="margin: 0; font-size: clamp(14px, 3.5vw, 16px); color: #666; line-height: 1.5;">${func.description}</p>
          </div>`;
        functionsCarousel.appendChild(functionItem);
      });
    }
    initFunctionsCarousel(); 
  }
  
  function openImageModal(src) {
    currentModalMediaSet = currentColorImages;
    const initialIndex = currentModalMediaSet.findIndex(item => item.type === 'image' && item.fullSrc === src);
    
    if (initialIndex !== -1) {
      currentModalMediaIndex = initialIndex;
      displayModalMedia(currentModalMediaIndex);
      const modal = document.getElementById('mediaModal');
      if (modal) {
        modal.style.display = 'block';
        document.body.style.overflow = 'hidden';
      }
    }
  }
  
  function openVideoModal(videoElementOrSrc) {
    currentModalMediaSet = currentColorImages;
    let initialIndex = -1;
    let videoSrcToFind;
  
    if (typeof videoElementOrSrc === 'string') {
      videoSrcToFind = videoElementOrSrc;
    } else {
      const sourceTag = videoElementOrSrc.querySelector('source') || videoElementOrSrc;
      videoSrcToFind = sourceTag ? sourceTag.src : null;
    }
  
    if (videoSrcToFind) {
      initialIndex = currentModalMediaSet.findIndex(item => item.type === 'video' && item.src === videoSrcToFind);
    }
    
    if (initialIndex !== -1) {
      currentModalMediaIndex = initialIndex;
      displayModalMedia(currentModalMediaIndex);
      const modal = document.getElementById('mediaModal');
      if (modal) {
        modal.style.display = 'block';
        document.body.style.overflow = 'hidden';
      }
    }
  }
  
  function displayModalMedia(index) {
    if (index < 0 || index >= currentModalMediaSet.length) {
      const modalPrevBtn = document.getElementById('modalPrev');
      const modalNextBtn = document.getElementById('modalNext');
      if(modalPrevBtn) { modalPrevBtn.disabled = true; modalPrevBtn.style.opacity = '0.3'; modalPrevBtn.style.cursor = 'default'; }
      if(modalNextBtn) { modalNextBtn.disabled = true; modalNextBtn.style.opacity = '0.3'; modalNextBtn.style.cursor = 'default'; }
      return;
    }
  
    currentModalMediaIndex = index;
    const item = currentModalMediaSet[index];
    
    const modalImage = document.getElementById('modalImage');
    const modalVideo = document.getElementById('modalVideo');
    const modalVideoSource = document.getElementById('modalVideoSource');
    const modalPrevBtn = document.getElementById('modalPrev');
    const modalNextBtn = document.getElementById('modalNext');
    const zoomControls = document.getElementById('modalZoomControls');
    const zoomInBtn = document.getElementById('modalZoomIn');
    const zoomOutBtn = document.getElementById('modalZoomOut');
  
    if (!modalImage || !modalVideo || !modalVideoSource || !modalPrevBtn || !modalNextBtn || !zoomControls || !zoomInBtn || !zoomOutBtn) return;
  
    currentZoomLevel = 1; // Reset zoom
    modalImage.style.transform = 'scale(1)';
  
    if (item.type === 'video') {
      modalImage.style.display = 'none';
      modalVideo.style.display = 'block';
      modalVideoSource.src = item.fullSrc || item.src; 
      modalVideo.load();
      zoomControls.style.display = 'none';
    } else { 
      modalVideo.style.display = 'none';
      modalVideo.pause();
      modalImage.style.display = 'block';
      modalImage.src = item.fullSrc; 
      zoomControls.style.display = 'flex';
      updateZoomButtons();
    }
  
    modalPrevBtn.disabled = currentModalMediaIndex === 0;
    modalPrevBtn.style.opacity = modalPrevBtn.disabled ? '0.3' : '1';
    modalPrevBtn.style.cursor = modalPrevBtn.disabled ? 'default' : 'pointer';
  
    modalNextBtn.disabled = currentModalMediaIndex >= currentModalMediaSet.length - 1;
    modalNextBtn.style.opacity = modalNextBtn.disabled ? '0.3' : '1';
    modalNextBtn.style.cursor = modalNextBtn.disabled ? 'default' : 'pointer';
  }
  
  function updateZoomButtons() {
    const zoomInBtn = document.getElementById('modalZoomIn');
    const zoomOutBtn = document.getElementById('modalZoomOut');
    if (!zoomInBtn || !zoomOutBtn) return;
  
    zoomInBtn.disabled = currentZoomLevel >= MAX_ZOOM_LEVEL;
    zoomOutBtn.disabled = currentZoomLevel <= MIN_ZOOM_LEVEL;
  }
  
  function zoomInModal() {
    if (currentZoomLevel < MAX_ZOOM_LEVEL) {
      currentZoomLevel += ZOOM_STEP;
      currentZoomLevel = Math.min(currentZoomLevel, MAX_ZOOM_LEVEL); // Ensure it doesn't exceed max
      document.getElementById('modalImage').style.transform = `scale(${currentZoomLevel})`;
      updateZoomButtons();
    }
  }
  
  function zoomOutModal() {
    if (currentZoomLevel > MIN_ZOOM_LEVEL) {
      currentZoomLevel -= ZOOM_STEP;
      currentZoomLevel = Math.max(currentZoomLevel, MIN_ZOOM_LEVEL); // Ensure it doesn't go below min
      document.getElementById('modalImage').style.transform = `scale(${currentZoomLevel})`;
      updateZoomButtons();
    }
  }
  
  function closeModal() {
    const modal = document.getElementById('mediaModal');
    const modalVideo = document.getElementById('modalVideo');
    const modalImage = document.getElementById('modalImage');
  
    if (!modal || !modalVideo || !modalImage) return;
    modal.style.display = 'none';
    modalVideo.pause();
    currentZoomLevel = 1;
    modalImage.style.transform = 'scale(1)';
  
    const modalVideoSource = document.getElementById('modalVideoSource');
    if (modalVideoSource) modalVideoSource.src = ""; 
    document.body.style.overflow = 'auto';
  }
  
  function closeModalOnClickOutside(event) {
    if (event.target === event.currentTarget) {
      closeModal();
    }
  }
  
  function initModalNavigationAndZoom() {
    const modalPrevBtn = document.getElementById('modalPrev');
    const modalNextBtn = document.getElementById('modalNext');
    const zoomInBtn = document.getElementById('modalZoomIn');
    const zoomOutBtn = document.getElementById('modalZoomOut');
  
    if (modalPrevBtn) {
      modalPrevBtn.addEventListener('click', (e) => {
        e.stopPropagation(); // Prevent modal from closing if arrows are inside content area
        if (currentModalMediaIndex > 0) {
          displayModalMedia(currentModalMediaIndex - 1);
        }
      });
    }
  
    if (modalNextBtn) {
      modalNextBtn.addEventListener('click', (e) => {
        e.stopPropagation();
        if (currentModalMediaIndex < currentModalMediaSet.length - 1) {
          displayModalMedia(currentModalMediaIndex + 1);
        }
      });
    }
    if (zoomInBtn) {
      zoomInBtn.addEventListener('click', (e) => {
          e.stopPropagation();
          zoomInModal();
      });
    }
    if (zoomOutBtn) {
      zoomOutBtn.addEventListener('click', (e) => {
          e.stopPropagation();
          zoomOutModal();
      });
    }
  }
  
  
  function initAddToCart() {
    const addToCartForm = document.getElementById("AddToCartForm");
    const bundleAddButtons = document.querySelectorAll(".bundle-add-btn");
    if (addToCartForm) {
      addToCartForm.addEventListener("submit", e => {
        e.preventDefault();
        const formData = new FormData(addToCartForm);
        addItemToCart(formData.get("id"), Number.parseInt(formData.get("quantity") || "1", 10));
      });
    }
    bundleAddButtons.forEach(button => {
      button.addEventListener("click", () => {
        const variantId = button.getAttribute("data-variant-id");
        if (variantId) {
          const originalText = button.textContent;
          button.textContent = "Adding..."; button.disabled = true;
          addItemToCart(variantId, 1, () => { button.textContent = originalText; button.disabled = false; });
        }
      });
    });
  }
  
  function addItemToCart(id, quantity, callback) {
    const mainBtn = document.getElementById("AddToCart");
    const mainBtnText = document.getElementById("AddToCartText");
    const originalMainText = mainBtnText ? mainBtnText.textContent : "Add to bag";
    if (mainBtn && mainBtn.form && new FormData(mainBtn.form).get("id") === id) {
      if(mainBtnText) mainBtnText.textContent = "Adding...";
      mainBtn.disabled = true;
    }
    fetch("/cart/add.js", {
      method: "POST", headers: { "Content-Type": "application/json", "X-Requested-With": "XMLHttpRequest" },
      body: JSON.stringify({ items: [{ id: id, quantity: quantity }] }),
    })
    .then(res => res.json())
    .then(data => { showNotification(data.status === 'error' || data.errors ? (data.description || data.message || "Error adding product.") : "Product added to cart!", data.status === 'error' || data.errors); })
    .catch(err => { console.error("Fetch error:", err); showNotification("Error adding product.", true); })
    .finally(() => {
      if (mainBtn && mainBtnText && mainBtn.form && new FormData(mainBtn.form).get("id") === id) {
        mainBtnText.textContent = (currentVariant && currentVariant.id == id && !currentVariant.available) ? "SOLD OUT" : originalMainText;
        mainBtn.disabled = (currentVariant && currentVariant.id == id && !currentVariant.available);
      }
      if (callback) callback();
    });
  }
  
  function showNotification(message, isError = false) {
    let notification = document.querySelector(".cart-notification");
    if (!notification) {
      notification = document.createElement("div");
      notification.className = "cart-notification";
      document.body.appendChild(notification);
      Object.assign(notification.style, {
        position: "fixed", top: "20px", right: "20px", padding: "15px 20px",
        borderRadius: "8px", zIndex: "1001", transition: "opacity 0.3s ease, transform 0.3s ease",
        fontWeight: "600", transform: "translateY(-100%)", opacity: "0"
      });
    }
    notification.textContent = message;
    notification.style.backgroundColor = isError ? "#e74c3c" : "#2ecc71"; 
    notification.style.color = "white";
    requestAnimationFrame(() => { notification.style.transform = "translateY(0)"; notification.style.opacity = "1"; });
    setTimeout(() => { notification.style.transform = "translateY(-100%)"; notification.style.opacity = "0"; }, 3000);
  }
  
  function initCarousel(carouselSelector, prevBtnSelector, nextBtnSelector, itemSelector, sliderProgressSelector, itemsPerViewFn, options = {}) {
    const carousel = document.querySelector(carouselSelector);
    const prevButton = document.querySelector(prevBtnSelector);
    const nextButton = document.querySelector(nextBtnSelector);
    const sliderProgress = sliderProgressSelector ? document.querySelector(sliderProgressSelector) : null;
  
    if (!carousel || !prevButton || !nextButton) return;
    
    const items = carousel.querySelectorAll(itemSelector);
    if (items.length === 0) {
      prevButton.style.display = 'none'; nextButton.style.display = 'none';
      if (sliderProgress && sliderProgress.parentElement) sliderProgress.parentElement.style.display = 'none';
      return;
    }
    prevButton.style.display = 'flex'; nextButton.style.display = 'flex';
    if (sliderProgress && sliderProgress.parentElement) sliderProgress.parentElement.style.display = 'flex';
  
    let currentIndex = 0;
  
    function update() {
      const itemsPerView = itemsPerViewFn ? itemsPerViewFn() : 1;
      const totalItems = items.length;
      if (totalItems === 0) return;
  
      const itemWidth = items[0].offsetWidth;
      const gap = parseInt(window.getComputedStyle(carousel).gap || "0px", 10);
      const scrollPosition = currentIndex * (itemWidth + gap);
      carousel.style.transform = `translateX(-${scrollPosition}px)`;
  
      if (sliderProgress) {
        const minPercent = 20; // Minimum fill at start
        const maxScrollableIndex = Math.max(0, totalItems - itemsPerView);
        let progressPercent;
        if (maxScrollableIndex > 0) {
          progressPercent = minPercent + (currentIndex / maxScrollableIndex) * (100 - minPercent);
        } else {
          progressPercent = totalItems > 0 ? 100 : 0;
        }
        sliderProgress.style.width = `${Math.min(100, progressPercent)}%`;
      }
  
      prevButton.disabled = currentIndex <= 0;
      prevButton.style.opacity = currentIndex <= 0 ? '0.5' : '1';
      nextButton.disabled = currentIndex >= Math.max(0, totalItems - itemsPerView);
      nextButton.style.opacity = nextButton.disabled ? '0.5' : '1';
    }
  
    prevButton.addEventListener('click', () => {
      const itemsPerView = itemsPerViewFn ? itemsPerViewFn() : 1;
      const scrollStep = (options && options.scrollStepFn) ? options.scrollStepFn() : itemsPerView;
      if (currentIndex > 0) {
        currentIndex = Math.max(0, currentIndex - scrollStep);
        update();
      }
    });
    nextButton.addEventListener('click', () => {
      const itemsPerView = itemsPerViewFn ? itemsPerViewFn() : 1;
      const scrollStep = (options && options.scrollStepFn) ? options.scrollStepFn() : itemsPerView;
      if (currentIndex < items.length - itemsPerView) {
        currentIndex = Math.min(items.length - itemsPerView, currentIndex + scrollStep);
        update();
      }
    });
    
    // Touch drag for mobile with proper scroll detection
    if (options.enableTouch !== false && window.matchMedia("(max-width: 767px)").matches) { 
      let touchStartX = 0;
      let touchStartY = 0;
      let touchCurrentX = 0;
      let touchCurrentY = 0;
      let touchMoved = false;
      let isHorizontalSwipe = false;
      const swipeThreshold = options.swipeThreshold || 50;
      const directionThreshold = 10; // Threshold to determine swipe direction
  
      carousel.addEventListener('touchstart', function(event) {
        touchStartX = event.changedTouches[0].clientX;
        touchStartY = event.changedTouches[0].clientY;
        touchCurrentX = touchStartX;
        touchCurrentY = touchStartY;
        touchMoved = false;
        isHorizontalSwipe = false;
      }, { passive: true });

      carousel.addEventListener('touchmove', function(event) {
        touchCurrentX = event.changedTouches[0].clientX;
        touchCurrentY = event.changedTouches[0].clientY;
        
        const deltaX = Math.abs(touchCurrentX - touchStartX);
        const deltaY = Math.abs(touchCurrentY - touchStartY);
        
        // Only set movement flags if we've moved enough to be intentional
        if (deltaX > directionThreshold || deltaY > directionThreshold) {
          touchMoved = true;
          
          // Determine if this is primarily a horizontal swipe
          if (deltaX > deltaY && deltaX > directionThreshold) {
            isHorizontalSwipe = true;
            // Only prevent default (disable scrolling) for horizontal swipes
            event.preventDefault();
          }
          // For vertical scrolling (deltaY > deltaX), we let the browser handle it naturally
        }
      }, { passive: false }); // passive: false needed to call preventDefault()
  
      carousel.addEventListener('touchend', function(event) {
        // Only handle swipe if it was intentional horizontal movement
        if (touchMoved && isHorizontalSwipe) {
          const diffX = touchCurrentX - touchStartX;
          const itemsPerView = itemsPerViewFn ? itemsPerViewFn() : 1;
          const scrollStep = (options && options.scrollStepFn) ? options.scrollStepFn() : itemsPerView;
          
          if (Math.abs(diffX) > swipeThreshold) {
            if (diffX < 0) { 
              if (!nextButton.disabled) {
                currentIndex = Math.min(items.length - itemsPerView, currentIndex + scrollStep);
                update();
              }
            } else { 
              if (!prevButton.disabled) {
                currentIndex = Math.max(0, currentIndex - scrollStep);
                update();
              }
            }
          }
        }
        
        // Reset touch state
        touchMoved = false;
        isHorizontalSwipe = false;
      }, { passive: true });
    }
  
  
    // Mouse drag for desktop
    if (!window.matchMedia("(max-width: 767px)").matches) {
      let isDragging = false;
      let startX = 0;
      let currentTranslate = 0;
      let dragStartIndex = 0;
      let dragMoved = false;
  
      carousel.addEventListener('mousedown', function(e) {
        if (e.button !== 0) return;
        isDragging = true;
        startX = e.clientX;
        dragStartIndex = currentIndex;
        dragMoved = false;
        carousel.style.cursor = 'grabbing';
        e.preventDefault();
      });
      window.addEventListener('mousemove', function(e) {
        if (!isDragging) return;
        const dx = e.clientX - startX;
        if (Math.abs(dx) > 5) dragMoved = true;
        // Optionally, you can add a visual feedback here (translateX)
      });
      window.addEventListener('mouseup', function(e) {
        if (!isDragging) return;
        isDragging = false;
        carousel.style.cursor = '';
        const dx = e.clientX - startX;
        const threshold = 50; // px
        const itemsPerView = itemsPerViewFn ? itemsPerViewFn() : 1;
        const scrollStep = (options && options.scrollStepFn) ? options.scrollStepFn() : itemsPerView;
        if (Math.abs(dx) > threshold) {
          if (dx < 0 && currentIndex < items.length - itemsPerView) {
            currentIndex = Math.min(items.length - itemsPerView, currentIndex + scrollStep);
          } else if (dx > 0 && currentIndex > 0) {
            currentIndex = Math.max(0, currentIndex - scrollStep);
          }
          update();
        }
      });
      // Prevent image drag
      carousel.addEventListener('dragstart', e => e.preventDefault());
    }
  
    update();
  }
  
  function initBundleCarousel() {
    initCarousel(
      '.bundle-carousel',
      '.bundle-prev',
      '.bundle-next',
      '.bundle-item',
      null, // No slider bar for bundle carousel
      () => {
        if (window.innerWidth < 768) return 3; // 3 items per scroll on mobile
        if (window.innerWidth < 1024) return 2;
        return 3;
      },
      { enableTouch: true }
    );
  }
  
  function initFunctionsCarousel() {
    initCarousel(
      '.functions-carousel', 
      '.functions-prev', 
      '.functions-next', 
      '.function-item', 
      '#functionsSliderProgress', 
      () => {
        if (window.innerWidth < 768) return 1;
        if (window.innerWidth < 1200) return 2;
        if (window.innerWidth < 1400) return 3;
        return 3.5; // Always 3.5 for 1400px and up
      }, 
      { enableTouch: true } 
    );
  }
  
  function initRelatedProductsCarousel() {
    initCarousel(
      '.related-products-carousel', 
      '.related-prev', 
      '.related-next', 
      '.related-product-item', 
      '#relatedProductsSliderProgress', 
      () => {
        if (window.innerWidth < 768) return 1;
        if (window.innerWidth < 1024) return 2; 
        return 4; 
      },
      { 
        enableTouch: true,
        scrollStepFn: () => {
          if (window.innerWidth >= 1024) return 1; // Scroll by 1 on desktop
          if (window.innerWidth < 768) return 1; // Keep mobile behavior (scroll by 1)
          return 2; // Keep tablet behavior (scroll by 2)
        }
      } 
    );
  }
  
  function initShopPayInstallments() {
    const installmentsContainer = document.querySelector('.installments-info');
    if (!installmentsContainer) return;
    function update(variant) {
      if (variant && productVariants[variant.id] && productVariants[variant.id].price >= 5000) { 
        const currentVariantData = productVariants[variant.id];
        const amount = (currentVariantData.price / 4 / 100); 
        let formattedAmount;
        if (typeof Shopify !== 'undefined' && Shopify.formatMoney) {
          formattedAmount = Shopify.formatMoney(amount * 100, "{{ shop.money_format | replace: '"', '\\"' }}");
        } else {
          const shopCurrency = "{{ shop.currency }}";
          formattedAmount = `${shopCurrency} ${amount.toFixed(2)}`;
          const exampleFormattedPrice = currentVariantData.formatted_price; 
          const currencySymbol = exampleFormattedPrice.match(/^[^\d\s]+/)?.[0] || shopCurrency;
          const usesDecimals = exampleFormattedPrice.includes('.');
          formattedAmount = `${currencySymbol}${amount.toLocaleString('en-IN', { minimumFractionDigits: usesDecimals ? 2:0, maximumFractionDigits: usesDecimals ? 2:0 })}`;
        }
        installmentsContainer.innerHTML = `<span class="interestlinehide">4 interest-free payments of ${formattedAmount} with  <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/1/1d/Shop_Pay_logo.svg/2560px-Shop_Pay_logo.svg.png" alt="Shop Pay" style="height: 11px; vertical-align: middle; "><a href="#" onclick="Shopify.ShopPay.Installments.Modal.toggle(); return false;" style="color: inherit; text-decoration: underline; margin-left:1px;"> Check Your Purchasing Power</a></span>`;
  
        installmentsContainer.style.display = 'flex';
      } else {
        installmentsContainer.style.display = 'none';
      }
    }
    document.addEventListener('variant:change', e => { if (e.detail && e.detail.variant) update(e.detail.variant); });
    if (currentVariant) update(currentVariant);
  }
  
  function scrollToReviews() {
    const el = document.getElementById('reviews-section');
    if (el) el.scrollIntoView({ behavior: 'smooth' });
  }
  
  document.addEventListener('keydown', e => {
    const modal = document.getElementById('mediaModal');
    if (modal && modal.style.display === 'block') {
      if (e.key === 'ArrowLeft') {
        if (currentModalMediaIndex > 0) {
          displayModalMedia(currentModalMediaIndex - 1);
        }
      } else if (e.key === 'ArrowRight') {
        if (currentModalMediaIndex < currentModalMediaSet.length - 1) {
          displayModalMedia(currentModalMediaIndex + 1);
        }
      } else if (e.key === '+' || e.key === '=') { // Plus key for zoom in
          if(document.getElementById('modalImage').style.display === 'block') zoomInModal();
      } else if (e.key === '-') { // Minus key for zoom out
          if(document.getElementById('modalImage').style.display === 'block') zoomOutModal();
      }
       else if (e.key === 'Escape' || e.key === 'Esc') {
          closeModal();
      }
    }
  });
  
  document.addEventListener('DOMContentLoaded', () => {
    if (window.innerWidth < 768) {
      const mobileView = document.querySelector('.mobile-single-image');
      const desktopView = document.querySelector('.desktop-grid');
      if (mobileView) mobileView.style.display = 'block';
      if (desktopView) desktopView.style.display = 'none';
    }
  });
  
  function enableModalImageGestures() {
    const modalImage = document.getElementById('modalImage');
    if (!modalImage) return;
  
    let pinchStartDist = 0;
    let pinchStartZoom = 1;
  
    function updateTransform() {
      modalImage.style.transform = `scale(${currentZoomLevel}) translate(0,0)`;
    }
  
    // Pinch to zoom (mobile)
    modalImage.addEventListener('touchstart', function(e) {
      if (e.touches.length === 2) {
        pinchStartDist = Math.sqrt(
          Math.pow(e.touches[0].clientX - e.touches[1].clientX, 2) +
          Math.pow(e.touches[0].clientY - e.touches[1].clientY, 2)
        );
        pinchStartZoom = currentZoomLevel;
      }
    }, { passive: false });
  
    modalImage.addEventListener('touchmove', function(e) {
      if (e.touches.length === 2) {
        e.preventDefault();
        const dist = Math.sqrt(
          Math.pow(e.touches[0].clientX - e.touches[1].clientX, 2) +
          Math.pow(e.touches[0].clientY - e.touches[1].clientY, 2)
        );
        let newZoom = pinchStartZoom * (dist / pinchStartDist);
        newZoom = Math.max(MIN_ZOOM_LEVEL, Math.min(MAX_ZOOM_LEVEL, newZoom));
        currentZoomLevel = newZoom;
        updateTransform();
        updateZoomButtons();
      }
    }, { passive: false });
  
    // Mouse wheel zoom (desktop)
    modalImage.addEventListener('wheel', function(e) {
      e.preventDefault();
      let delta = e.deltaY < 0 ? ZOOM_STEP : -ZOOM_STEP;
      let newZoom = currentZoomLevel + delta;
      newZoom = Math.max(MIN_ZOOM_LEVEL, Math.min(MAX_ZOOM_LEVEL, newZoom));
      currentZoomLevel = newZoom;
      updateTransform();
      updateZoomButtons();
    }, { passive: false });
  
    // Always center image on load or reset
    modalImage.addEventListener('load', function() {
      updateTransform();
    });
    document.addEventListener('modal:reset', updateTransform);
  }
  
  document.addEventListener('DOMContentLoaded', () => {
    enableModalImageGestures();
  });
  
  // In displayModalMedia, after setting modalImage.src and currentZoomLevel, reset pan/zoom:
  // modalImage.style.transform = `scale(${currentZoomLevel}) translate(0,0)`;
  // panX = 0; panY = 0;
  
  // --- MODAL ZOOM/PAN LOGIC ---
  let isZoomed = false;
  let zoomLevel = 1;
  let panX = 0, panY = 0, startX = 0, startY = 0, originPanX = 0, originPanY = 0, isDragging = false;
  const MIN_ZOOM = 1;
  const MAX_ZOOM = 4;
  const CLICK_ZOOM_LEVEL = 2; // Zoom level for click-to-zoom
  const DRAG_THRESHOLD = 5; // px
  
  function clampPan(pan, maxPan) {
    if (pan > maxPan) return maxPan;
    if (pan < -maxPan) return -maxPan;
    return pan;
  }
  function getPanBounds(img, scale) {
    // Calculate the displayed size of the image at scale 1
    const vw = window.innerWidth * 0.9;
    const vh = window.innerHeight * 0.9;
    const naturalW = img.naturalWidth;
    const naturalH = img.naturalHeight;
    let displayW = Math.min(naturalW, vw);
    let displayH = Math.min(naturalH, vh);
    // Maintain aspect ratio
    if (displayW / displayH > naturalW / naturalH) {
      displayW = displayH * (naturalW / naturalH);
    } else {
      displayH = displayW * (naturalH / naturalW);
    }
    // At current scale
    const scaledW = displayW * scale;
    const scaledH = displayH * scale;
    // The max pan is half the overflow in each direction
    const maxPanX = Math.max(0, (scaledW - vw) / 2);
    const maxPanY = Math.max(0, (scaledH - vh) / 2);
    return { maxPanX, maxPanY };
  }
  function displayModalMedia(index) {
    if (index < 0 || index >= currentModalMediaSet.length) return;
    currentModalMediaIndex = index;
    const item = currentModalMediaSet[index];
    const modalImage = document.getElementById('modalImage');
    const modalVideo = document.getElementById('modalVideo');
    const modalVideoSource = document.getElementById('modalVideoSource');
    isZoomed = false; zoomLevel = 1; panX = 0; panY = 0;
    if (item.type === 'video') {
      modalImage.style.display = 'none';
      modalVideo.style.display = 'block';
      modalVideoSource.src = item.fullSrc || item.src;
      modalVideo.load();
    } else {
      modalVideo.style.display = 'none';
      modalVideo.pause();
      modalImage.style.display = 'block';
      // Use original image (no compression)
      modalImage.src = item.src.replace(/_[0-9]+x[0-9]+|_600x600|_1200x1200|_400x400|_300x300|_100x100|_crop_center|_crop_center/gi, '');
      modalImage.style.transform = 'scale(1) translate(0px,0px)';
      modalImage.style.cursor = 'grab';
    }
    // Update arrow states
    const modalPrevBtn = document.getElementById('modalPrev');
    const modalNextBtn = document.getElementById('modalNext');
    if (modalPrevBtn) {
      modalPrevBtn.disabled = (index === 0);
      modalPrevBtn.style.opacity = (index === 0) ? '0.3' : '1';
      modalPrevBtn.style.cursor = (index === 0) ? 'default' : 'pointer';
    }
    if (modalNextBtn) {
      modalNextBtn.disabled = (index === currentModalMediaSet.length - 1);
      modalNextBtn.style.opacity = (index === currentModalMediaSet.length - 1) ? '0.3' : '1';
      modalNextBtn.style.cursor = (index === currentModalMediaSet.length - 1) ? 'default' : 'pointer';
    }
  }
  const modalImage = document.getElementById('modalImage');
  if (modalImage) {
    // Remove click-to-zoom
    // Mouse wheel to zoom
    modalImage.addEventListener('wheel', function(e) {
      e.preventDefault();
      let delta = e.deltaY < 0 ? 0.15 : -0.15;
      let newZoom = zoomLevel + delta;
      newZoom = Math.max(MIN_ZOOM, Math.min(MAX_ZOOM, newZoom));
      if (newZoom !== zoomLevel) {
        zoomLevel = newZoom;
        const bounds = getPanBounds(modalImage, zoomLevel);
        panX = clampPan(panX, bounds.maxPanX);
        panY = clampPan(panY, bounds.maxPanY);
        modalImage.style.transform = `scale(${zoomLevel}) translate(${panX}px,${panY}px)`;
      }
    }, { passive: false });
  
    // --- CLICK-TO-ZOOM/RESET AND DRAG-TO-PAN ---
    let mouseDown = false;
    let dragStarted = false;
    let dragStartX = 0, dragStartY = 0;
    let dragOriginPanX = 0, dragOriginPanY = 0;
  
    modalImage.addEventListener('mousedown', function(e) {
      if (e.button !== 0) return; // Only left mouse
      mouseDown = true;
      dragStarted = false;
      dragStartX = e.clientX;
      dragStartY = e.clientY;
      dragOriginPanX = panX;
      dragOriginPanY = panY;
      modalImage.style.cursor = (zoomLevel > 1) ? 'grabbing' : 'grab';
      e.preventDefault();
    });
  
    window.addEventListener('mousemove', function(e) {
      if (!mouseDown) return;
      if (zoomLevel === 1) return;
      const dx = e.clientX - dragStartX;
      const dy = e.clientY - dragStartY;
      if (!dragStarted && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {
        dragStarted = true;
      }
      if (dragStarted) {
        const bounds = getPanBounds(modalImage, zoomLevel);
        panX = clampPan(dragOriginPanX + dx, bounds.maxPanX);
        panY = clampPan(dragOriginPanY + dy, bounds.maxPanY);
        modalImage.style.transform = `scale(${zoomLevel}) translate(${panX}px,${panY}px)`;
      }
    });
  
    window.addEventListener('mouseup', function(e) {
      if (!mouseDown) return;
      modalImage.style.cursor = 'grab';
      mouseDown = false;
      // If not dragged, treat as click-to-zoom
      if (!dragStarted && e.button === 0) {
        if (zoomLevel === 1) {
          zoomLevel = CLICK_ZOOM_LEVEL;
          panX = 0; panY = 0;
          modalImage.style.transform = `scale(${zoomLevel}) translate(0px,0px)`;
          modalImage.style.cursor = 'grab';
        } else {
          zoomLevel = 1;
          panX = 0; panY = 0;
          modalImage.style.transform = `scale(1) translate(0px,0px)`;
          modalImage.style.cursor = 'grab';
        }
      }
      dragStarted = false;
    });
  
    // Prevent image drag
    modalImage.addEventListener('dragstart', e => e.preventDefault());
    // Touch support for mobile
    let lastTouchX = 0, lastTouchY = 0;
    modalImage.addEventListener('touchstart', function(e) {
      if (zoomLevel === 1 && e.touches.length === 2) {
        // Pinch to zoom start
        isDragging = false;
      } else if (zoomLevel > 1 && e.touches.length === 1) {
        isDragging = true;
        lastTouchX = e.touches[0].clientX;
        lastTouchY = e.touches[0].clientY;
        originPanX = panX;
        originPanY = panY;
      }
    }, { passive: false });
    modalImage.addEventListener('touchmove', function(e) {
      if (isDragging && e.touches.length === 1) {
        const bounds = getPanBounds(modalImage, zoomLevel);
        panX = clampPan(originPanX + (e.touches[0].clientX - lastTouchX), bounds.maxPanX);
        panY = clampPan(originPanY + (e.touches[0].clientY - lastTouchY), bounds.maxPanY);
        modalImage.style.transform = `scale(${zoomLevel}) translate(${panX}px,${panY}px)`;
        e.preventDefault();
      }
    }, { passive: false });
    modalImage.addEventListener('touchend', function(e) {
      isDragging = false;
      modalImage.style.cursor = 'grab';
    });
  }
  // Modal navigation arrow events
  const modalPrevBtn = document.getElementById('modalPrev');
  const modalNextBtn = document.getElementById('modalNext');
  if (modalPrevBtn) {
    modalPrevBtn.addEventListener('click', function(e) {
      e.stopPropagation();
      if (currentModalMediaIndex > 0) {
        displayModalMedia(currentModalMediaIndex - 1);
      }
    });
  }
  if (modalNextBtn) {
    modalNextBtn.addEventListener('click', function(e) {
      e.stopPropagation();
      if (currentModalMediaIndex < currentModalMediaSet.length - 1) {
        displayModalMedia(currentModalMediaIndex + 1);
      }
    });
  }
  window.addEventListener('keydown', function(e) {
    const modal = document.getElementById('mediaModal');
    if (modal && modal.style.display === 'block') {
      if (e.key === 'ArrowLeft') {
        if (currentModalMediaIndex > 0) displayModalMedia(currentModalMediaIndex - 1);
      } else if (e.key === 'ArrowRight') {
        if (currentModalMediaIndex < currentModalMediaSet.length - 1) displayModalMedia(currentModalMediaIndex + 1);
      } else if (e.key === 'Escape' || e.key === 'Esc') {
        closeModal();
      }
    }
  });
  
    // --- Enable swipe for product image gallery on mobile with proper scroll detection ---
  function initMobileImageNavigation() {
    const container = document.querySelector('.single-image-container');
    if (!container) return;
    let touchStartX = 0;
    let touchStartY = 0;
    let touchCurrentX = 0;
    let touchCurrentY = 0;
    let touchMoved = false;
    let isHorizontalSwipe = false;
    const swipeThreshold = 50;
    const directionThreshold = 10;

    function touchStartHandler(e) {
      if (e.touches.length !== 1) return;
      touchStartX = e.touches[0].clientX;
      touchStartY = e.touches[0].clientY;
      touchCurrentX = touchStartX;
      touchCurrentY = touchStartY;
      touchMoved = false;
      isHorizontalSwipe = false;
    }
    
    function touchMoveHandler(e) {
      touchCurrentX = e.touches[0].clientX;
      touchCurrentY = e.touches[0].clientY;
      
      const deltaX = Math.abs(touchCurrentX - touchStartX);
      const deltaY = Math.abs(touchCurrentY - touchStartY);
      
      // Only set movement flags if we've moved enough to be intentional
      if (deltaX > directionThreshold || deltaY > directionThreshold) {
        touchMoved = true;
        
        // Determine if this is primarily a horizontal swipe
        if (deltaX > deltaY && deltaX > directionThreshold) {
          isHorizontalSwipe = true;
          // Only prevent default (disable scrolling) for horizontal swipes
          e.preventDefault();
        }
        // For vertical scrolling (deltaY > deltaX), we let the browser handle it naturally
      }
    }
    
    function touchEndHandler(e) {
      // Only handle swipe if it was intentional horizontal movement
      if (touchMoved && isHorizontalSwipe) {
        const diffX = touchStartX - touchCurrentX;
        if (Math.abs(diffX) > swipeThreshold) {
          if (diffX > 0 && currentMobileIndex < currentColorImages.length - 1) {
            currentMobileIndex++;
            console.log('Swipe right, index:', currentMobileIndex);
            updateMobileImageDisplay();
          } else if (diffX < 0 && currentMobileIndex > 0) {
            currentMobileIndex--;
            console.log('Swipe left, index:', currentMobileIndex);
            updateMobileImageDisplay();
          }
        }
      }
      
      // Reset touch state
      touchMoved = false;
      isHorizontalSwipe = false;
    }

    // Remove any previous listeners (defensive)
    container.removeEventListener('touchstart', touchStartHandler);
    container.removeEventListener('touchmove', touchMoveHandler);
    container.removeEventListener('touchend', touchEndHandler);

    container.addEventListener('touchstart', touchStartHandler, { passive: true });
    container.addEventListener('touchmove', touchMoveHandler, { passive: false }); // passive: false needed for preventDefault()
    container.addEventListener('touchend', touchEndHandler, { passive: true });
  }
  
  document.addEventListener('DOMContentLoaded', function() {
    
  });
  
  </script>
  
  {% schema %}
  {
   "name": "Product template",
   "settings": [
     {
       "type": "checkbox",
       "id": "show_quantity_selector",
       "label": "Show quantity selector",
       "default": true
     },
     {
       "type": "checkbox",
       "id": "show_vendor",
       "label": "Show vendor",
       "default": true
     },
     {
       "type": "checkbox",
       "id": "enable_zoom",
       "label": "Enable image zoom",
       "default": true
     }
   ]
  }
  {% endschema %}
  
  <script>
    function toggleMobileFeatureHighlights() {
    var content = document.getElementById('mobile-featurehighlights-content');
    var icon = document.getElementById('mobile-featurehighlights-icon');
    if (!content || !icon) return;
    var isOpen = content.style.maxHeight && content.style.maxHeight !== '0px';
    content.style.maxHeight = isOpen ? '0px' : (content.scrollHeight + 'px');
    icon.style.transform = isOpen ? 'rotate(0deg)' : 'rotate(180deg)';
  }
  // Show/hide mobile accordion only on mobile
  function handleMobileFeatureHighlightsDisplay() {
    var acc = document.querySelector('.mobile-feature-highlights-accordion');
    var desktop = document.getElementById('dynamicFeatureHighlights');
    if (window.innerWidth < 768) {
      if (acc) acc.style.display = 'block';
      if (desktop) desktop.style.display = 'none';
    } else {
      if (acc) acc.style.display = 'none';
      if (desktop) desktop.style.display = '';
    }
  }
  window.addEventListener('DOMContentLoaded', handleMobileFeatureHighlightsDisplay);
  window.addEventListener('resize', handleMobileFeatureHighlightsDisplay);
  document.addEventListener('DOMContentLoaded', function() {
    if (window.innerWidth < 768) {
      document.querySelectorAll('.bundle-add-btn').forEach(function(btn) {
        btn.textContent = 'Add to Bag';
      });
    }
  });
  </script>
  
  <script>
  // Show/hide mobile headings and hide original ones on mobile
  function handleMobileHeadings() {
    if (window.innerWidth < 768) {
      var rel = document.querySelector('.related-products-section h2');
      var relMobile = document.querySelector('.related-products-heading-mobile');
      if (rel) rel.style.display = 'none';
      if (relMobile) relMobile.style.display = 'block';
      var rev = document.querySelector('.reviews-section h2');
      var revMobile = document.querySelector('.reviews-heading-mobile');
      // if (rev) rev.style.display = 'none';
      if (revMobile) revMobile.style.display = 'block';
    } else {
      var rel = document.querySelector('.related-products-section h2');
      var relMobile = document.querySelector('.related-products-heading-mobile');
      if (rel) rel.style.display = 'block';
      if (relMobile) relMobile.style.display = 'none';
      var rev = document.querySelector('.reviews-section h2');
      var revMobile = document.querySelector('.reviews-heading-mobile');
      if (rev) rev.style.display = 'block';
      // if (revMobile) revMobile.style.display = 'none';
    }
  }
  window.addEventListener('DOMContentLoaded', handleMobileHeadings);
  window.addEventListener('resize', handleMobileHeadings);
  </script>
  
  <!-- Enhanced Compare Bags Modal (Exact UI) -->
  <!-- Enhanced Compare Bags Modal (Exact UI) -->
  <!-- Enhanced Compare Bags Modal (Exact UI) -->
  <style>
  #compareBagsModalV2 {
    display: none; position: fixed; z-index: 10001; left: 0; top: 0; width: 100vw; height: 100vh;
    background: rgba(0,0,0,0.45); overflow: auto; align-items: center; justify-content: center;
  }
  .compare-modal-content {
    background: #fff; max-width: 800px; width: 95vw; margin: 20px auto; border-radius: 12px;
    box-shadow: 0 2px 12px rgba(0,0,0,0.08); padding: 20px; position: relative;
    max-height: 85vh;
    overflow-y: auto;
  }
  .compare-modal-close {
    position: absolute; top: 16px; right: 16px; background: none; border: none; font-size: 24px; color: #666; cursor: pointer;
  }
  .compare-modal-header {
    text-align: center; margin-bottom: 16px;
  }
  .compare-modal-title {
    font-size: 16px; font-weight: 500; color: #333; margin: 0;
  }
  .compare-modal-tabs {
    display: flex; margin: 16px 20px; background: #f5f5f5; border-radius: 20px; padding: 3px;
  }
  .compare-modal-tab {
    flex: 1; text-align: center; padding: 8px 16px; font-size: 14px; font-weight: 500; color: #666;
    background: none; border: none; cursor: pointer; border-radius: 20px;
    transition: all 0.3s ease;
  }
  .compare-modal-tab.active {
    background: #4a6f64; color: #fff;
  }
  .compare-modal-grid {
    display: flex;
    gap: 24px;
    padding: 0;
  }
  
  #compareBagsGridWrap {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 6px !important;
    flex-grow: 1;
  }
  .compare-modal-labels {
    text-align: right;
    font-size: 13px;
    color: #B8860B;
    display: flex;
    flex-direction: column;
    gap: 30px;
    padding-top: 140px;
    position: sticky;
    top: 0;
    width: 20px;
    flex-shrink: 0;
  }
  .compare-modal-label {
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    transform: rotate(-90deg);
    margin-top: 13px;
  }
  .compare-modal-divider {
    height: 1px;
    background: #e0e0e0;
    margin: 12px 0;
    width: 100%;
  }
  .compare-modal-product {
    text-align: center;
    display: flex;
    flex-direction: column;
    gap: 12px;
  }
  .compare-modal-img-wrap {
    margin-bottom: 0;
    background: #f8f8f8;
    border-radius: 6px;
    padding: 15px;
    height: 140px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .compare-modal-img {
    width: 100%; 
    height: 100%;
    object-fit: contain;
  }
  .compare-modal-product-title {
    font-size: 13px;
    font-weight: 500;
    color: #333;
    margin: 0;
    order: 1;
  }
  .compare-modal-specs {
    font-size: 11px;
    color: #666;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 3px;
    order: 2;
  }
  .compare-modal-features {
    list-style: none;
    padding: 0;
    margin: 0;
    text-align: left;
    font-size: 11px;
    color: #666;
    min-height: 120px;
    order: 3;
  }
  .compare-modal-features li {
    margin-bottom: 3px; position: relative; padding-left: 10px;
  }
  .compare-modal-features li:before {
    content: '-'; position: absolute; left: 0;
  }
  .compare-modal-capacity {
    font-size: 12px; color: #999; margin: 8px 0;
  }
  .compare-modal-colors {
    display: flex;
    gap: 6px;
    justify-content: center;
    margin: 0;
    order: 4;
  }
  .compare-modal-color {
    width: 14px; height: 14px; border-radius: 50%; border: 1px solid rgba(0,0,0,0.1);
    cursor: pointer;
  }
  .compare-modal-price {
    font-size: 14px;
    font-weight: 600;
    color: #333;
    margin: 0;
    order: 5;
  }
  .compare-modal-button {
    order: 6;
    margin-top: 4px;
  }
  .compare-modal-button {
    display: inline-block; padding: 6px 16px; border-radius: 16px; font-size: 12px;
    font-weight: 500; text-decoration: none; cursor: pointer; min-width: 80px;
  }
  .compare-modal-button.primary {
    background: #1a2c2c; color: white; border: none;
  }
  .compare-modal-button.secondary {
    background: white; color: #1a2c2c; border: 1px solid #e0e0e0;
  }
    .compare-modal-grid { align-items: stretch; }
  @media (max-width: 480px) {
    .compare-modal-content { margin: 12px; padding: 12px 0; }
    .compare-modal-grid { gap: 12px; padding: 0 12px; margin-bottom: 12px; }
    .compare-modal-product-title { font-size: 9px; }
    .compare-modal-specs, .compare-modal-features { font-size: 10px; }
  }
  @media (max-width: 700px) {
    .compare-modal-content { max-width: 99vw; padding: 0 0 18px 0; }
    .compare-modal-table { grid-template-columns: 80px repeat(3, 1fr); padding: 0 4px; }
    .compare-modal-label-cell, .compare-modal-cell { font-size: 11px; padding: 10px 2px; }
    .compare-modal-img { width: 55px; height: 65px; }
    .compare-modal-title { font-size: 12px; margin-top:20px; }
    .compare-modal-price { font-size: 13px; }
  }
  @media (max-width: 700px) {
    #compareBagsModalV2 {
      align-items: flex-end !important;
      justify-content: center !important;
      background: rgba(0,0,0,0.45);
      transition: background 0.3s;
      overflow-y: auto; /* Ensure modal background can scroll if needed */
    }
    .compare-modal-content {
      width: 100vw !important;
      max-width: 100vw !important;
      border-radius: 18px 18px 0 0 !important;
      margin: 0 !important;
      padding-bottom: env(safe-area-inset-bottom, 16px) !important;
      position: relative;
      bottom: 0;
      left: 0;
      animation: compareModalSlideUp 0.35s cubic-bezier(0.4,0,0.2,1);
      box-shadow: 0 -2px 16px rgba(0,0,0,0.12);
      max-height: 80vh; /* Added for mobile scroll */
      overflow-y: auto;  /* Added for mobile scroll */
    }
    @keyframes compareModalSlideUp {
      from { transform: translateY(100%); }
      to   { transform: translateY(0); }
    }
  }
  @media (max-width: 700px) {
    .compare-modal-content {
      max-height: 80vh;
      overflow-y: auto;
      -webkit-overflow-scrolling: touch;
    }
  }
  </style>
  <div id="compareBagsModalV2">
    <div class="compare-modal-content">
      <button class="compare-modal-close" onclick="closeCompareBagsModalV2()">&times;</button>
      <div class="compare-modal-header">
        <h2 class="compare-modal-title">Compare</h2>
      </div>
      <div class="compare-modal-tabs">
        <button class="compare-modal-tab active" id="compareTabProduct" onclick="switchCompareTab('product')">Product</button>
        <button class="compare-modal-tab" id="compareTabModel" onclick="switchCompareTab('model')">On model</button>
      </div>
      <div class="compare-modal-grid">
        <div class="compare-modal-labels">
          <div class="compare-modal-label">Size</div>
          <!-- <div class="compare-modal-divider"></div> -->
          <div class="compare-modal-label">Features</div>
          <!-- <div class="compare-modal-divider"></div> -->
          <div class="compare-modal-label">Color</div>
          <!-- <div class="compare-modal-divider"></div> -->
          <div class="compare-modal-label">Price</div>
        </div>
        <div id="compareBagsGridWrap" style="display: grid; grid-template-columns: repeat(3, 1fr); gap: 24px;">
          <!-- Grid will be rendered here -->
        </div>
      </div>
    </div>
  </div>
  <script>
  function openCompareBagsModalV2() {
    const modal = document.getElementById('compareBagsModalV2');
    const content = modal.querySelector('.compare-modal-content');
    modal.style.display = 'flex';
    // Reset animation for mobile
    if (window.innerWidth < 700 && content) {
      content.style.animation = 'none';
      void content.offsetWidth; // trigger reflow
      content.style.animation = null;
    }
    renderCompareBagsTable('product');
    document.body.style.overflow = 'hidden';
  }
  function closeCompareBagsModalV2() {
    document.getElementById('compareBagsModalV2').style.display = 'none';
    document.body.style.overflow = '';
  }
  function switchCompareTab(tab) {
    document.getElementById('compareTabProduct').classList.toggle('active', tab==='product');
    document.getElementById('compareTabModel').classList.toggle('active', tab==='model');
    renderCompareBagsTable(tab);
  }
  // Replace this with your actual product data logic
  function renderCompareBagsTable(tab) {
    const products = [
      {
        image: "{{ product.featured_image | img_url: '300x300' }}",
        title: "{{ product.title }}",
        specs: "17.8\" x 12.0\" x 6.7\"",
        capacity: "23L",
        features: ['Water Bottle Pocket', 'Laptop Pocket', 'Trolley Sleeve', 'Carry-On Size', 'Phone Pocket'],
        colors: ['#000000', '#1a2c2c', '#666666'],
        price: "{{ product.price | money }}",
        url: '#',
        isCurrentProduct: true
      },
      {
        image: "{{ collections.all.products[1].featured_image | img_url: '300x300' }}",
        title: "{{ collections.all.products[1].title }}",
        specs: "18.9\" x 12.6\" x 5.9\"",
        capacity: "25L",
        features: ['Water Bottle Pocket', 'Laptop Pocket', 'Trolley Sleeve', 'Carry-On Size', 'Phone Pocket'],
        colors: ['#000000', '#1a2c2c', '#666666', '#cccccc'],
        price: "{{ collections.all.products[1].price | money }}",
        url: "{{ collections.all.products[1].url }}",
        isCurrentProduct: false
      },
      {
        image: "{{ collections.all.products[2].featured_image | img_url: '300x300' }}",
        title: "{{ collections.all.products[2].title }}",
        specs: "16.1\" x 11.4\" x 5.5\"",
        capacity: "16L",
        features: ['Water Bottle Pocket', 'Laptop Pocket', 'Trolley Sleeve', 'Carry-On Size', 'Phone Pocket'],
        colors: ['#cccccc', '#000000', '#1a2c2c'],
        price: "{{ collections.all.products[2].price | money }}",
        url: "{{ collections.all.products[2].url }}",
        isCurrentProduct: false
      }
    ];
    // Render products in grid layout
    let html = '';
    products.forEach(prod => {
      html += `
        <div class="compare-modal-product">
          <div class="compare-modal-img-wrap">
            <img class="compare-modal-img" src="${prod.image}" alt="${prod.title}">
          </div>
          
          <h3 class="compare-modal-product-title">${prod.title}</h3>
          <div class="compare-modal-specs">
            <span>${prod.specs}</span>
            <span class="compare-modal-capacity">${prod.capacity}</span>
          </div>
          <ul class="compare-modal-features">
            ${prod.features.map(feature => `<li>${feature}</li>`).join('')}
          </ul>
          <div class="compare-modal-colors">
            ${prod.colors.map(color => `<div class="compare-modal-color" style="background-color: ${color}"></div>`).join('')}
          </div>
          <div class="compare-modal-price">${prod.price}</div>
          <a href="${prod.url}" class="compare-modal-button ${prod.isCurrentProduct ? 'primary' : 'secondary'}">
            ${prod.isCurrentProduct ? 'Add to Bag' : 'Shop Now'}
          </a>
        </div>
      `;
    });
    document.getElementById('compareBagsGridWrap').innerHTML = html;
  }
  // Attach to your Compare Bags button
  document.querySelectorAll('#compareBtnMobile, #compareBtnDesktop, .comparedesktopbtn, .comparemobilebtn').forEach(btn => {
    btn.addEventListener('click', function(e) {
      e.preventDefault();
      openCompareBagsModalV2();
    });
  });
  </script>
  
  <script>
  // --- Improved Modal Scroll Lock for Mobile ---
  let compareModalTouchLock = false;
  function preventBodyScroll(e) {
    if (!compareModalTouchLock) return;
    const modalContent = document.querySelector('.compare-modal-content');
    if (!modalContent) return;
    if (!modalContent.contains(e.target)) {
      e.preventDefault();
      return;
    }
    // Allow scroll inside modal content if scrollable
    if (modalContent.scrollHeight > modalContent.clientHeight) {
      return;
    }
    // If not scrollable, prevent
    e.preventDefault();
  }
  function enableCompareModalScrollLock() {
    compareModalTouchLock = true;
    document.body.style.overflow = 'hidden';
    document.addEventListener('touchmove', preventBodyScroll, { passive: false });
    document.addEventListener('wheel', preventBodyScroll, { passive: false });
  }
  function disableCompareModalScrollLock() {
    compareModalTouchLock = false;
    document.body.style.overflow = '';
    document.removeEventListener('touchmove', preventBodyScroll, { passive: false });
    document.removeEventListener('wheel', preventBodyScroll, { passive: false });
  }
  const origOpenCompareBagsModalV2 = window.openCompareBagsModalV2;
  window.openCompareBagsModalV2 = function() {
    if (typeof origOpenCompareBagsModalV2 === 'function') origOpenCompareBagsModalV2();
    enableCompareModalScrollLock();
  };
  const origCloseCompareBagsModalV2 = window.closeCompareBagsModalV2;
  window.closeCompareBagsModalV2 = function() {
    if (typeof origCloseCompareBagsModalV2 === 'function') origCloseCompareBagsModalV2();
    disableCompareModalScrollLock();
  };
  </script>
  
  <style>
  /* ===================== DESKTOP PRODUCT PAGE FONT & STYLE CHANGES ===================== */
  @media (min-width: 901px) {
    /* Product Title */
    .product-title {
      font-size: 38px !important;
      font-weight: 700 !important;
      white-space: nowrap !important;
      overflow: hidden !important;
      text-overflow: ellipsis !important;
    }
    /* Price */
    .pricesizeadjust {
      font-size: 16px !important;
      font-weight: 400 !important;
    }
    /* Compare Bags button */
    .comparedesktopbtn, #compareBtnDesktop {
      font-size: 15px !important;
      padding: 5px 14px !important;
      font-weight: 400 !important;
      position: relative !important;
      z-index: 100 !important;
      pointer-events: auto !important;
    }
    /* Add to bag button */
    #AddToCart {
      font-size: 16px !important;
      font-weight: 400 !important;
      text-transform: none !important;
      padding-top: 10px !important;
      padding-bottom: 10px !important;
    }
    /* Gray Box Bottom Shadow */
    .detailbox {
      box-shadow: 0 14px 28px -14px rgba(0,0,0,0.18) !important;
    }
    /* Remove icons under add to bag */
    .iconshide {
      display: none !important;
    }
    /* Feature Highlights */
    #dynamicFeatureHighlights h3.featurehighlightshide {
      font-weight: 500 !important;
      font-size: 20px !important;
      letter-spacing: 0.5px !important;
      color:black;
    }
    /* FeatureHighlightBulletpoints - Updated to 14px font size */
    #featureHighlightsLeft li, #featureHighlightsRight li {
      font-size: 14px !important;
      font-weight: 400 !important;
      letter-spacing: 0.5px !important;
      color: #111 !important;
      list-style: none !important;
      position: relative;
      padding-left: 18px !important;
      text-indent: -10px !important;
      margin-bottom: 10px !important;
    }
    #featureHighlightsLeft li:before, #featureHighlightsRight li:before {
      content: '\2022';
      color: #111;
      font-size: 18px;
      position: absolute;
      left: 0;
      top: 0.5px;
      font-weight: 700;
      letter-spacing: 0;
      display:none;
    }
    /* Accordion headers - Ensuring consistent font styling */
    .accordion-header h3, .accordion-header .accordionadjust {
      font-size: 20px !important;
      font-weight: 500 !important;
      color: #000 !important;
      letter-spacing: 0.5px !important;
    }
    /* Accordion content - Ensuring consistent font styling for all accordion sections */
    .accordion-content, .description-content, .specs-content, .shipping-content, .warranty-content {
      font-size: 15px !important;
      font-weight: 300 !important;
      letter-spacing: 0.5px !important;
      color: #000 !important;
    }
    /* Specs & Materials: line gap between weight and Materials */
    #specs-content pre {
      white-space: pre-wrap;
    }
    /* Bundle & Save - Fix alignment issue when browser window expands */
    .bundleandsave {
      font-weight: 500 !important;
      padding-left:10px;
    }
    .bundle-section {
      max-width: 1920px !important;
      margin: 0 auto !important;
      /* margin-bottom: 60px !important; */
    }
    .bundle-flex-wrapper {
      max-width: 1920px !important;
      margin: 0 auto !important;
    }
    .bundle-carousel-container {
      max-width: 100% !important;
      /* overflow: visible !important; */
    }
   
    .bundle-item h4, .bundle-price {
      font-size: 14px !important;
      font-weight: 500 !important;
    }
    /* 5-Star Functions Section - Always show 3.5 items, scale with screen size like on.com */
    .functions-section {
      padding-top: 50px !important;
      max-width: 100vw !important;
      overflow: hidden !important;
    }
    .functions-carousel-container {
      max-width: 100vw !important;
      width: 100vw !important;
      overflow: visible !important;
    }
    .functions-carousel-wrapper {
      overflow: visible !important;
      padding: 0 !important;
      margin: 0 !important;
    }
    .functions-carousel {
      margin-left: 40px !important;
      overflow: visible !important;
    }
    .fivestarfunctionssizeadjust {
      font-size: 41px !important;
      font-weight: 550 !important;
      letter-spacing: 0.5px !important;
    }
    .function-item h3 {
      font-size: clamp(20px, 2.5vw, 32px) !important;
      font-weight: 500 !important;
      letter-spacing: 0.5px !important;
    }
    .functiondescriptionadjust {
      font-size: clamp(16px, 1.8vw, 24px) !important;
      font-weight: 300 !important;
      letter-spacing: 0.5px !important;
      color: #111 !important;
    }
    /* Always show 3.5 items - calculate width based on viewport */
    .function-item {
      min-width: calc((100vw - 80px) / 3.5) !important;
      flex: 0 0 calc((100vw - 80px) / 3.5) !important;
      max-width: calc((100vw - 80px) / 3.5) !important;
    }
    .function-media-container {
      width: 100% !important;
      height: calc(((100vw - 80px) / 3.5) * 1.3) !important;
      max-width: 100% !important;
      min-width: 100% !important;
      aspect-ratio: 0.76 !important;
    }
    .function-media-container img, .function-media-container video {
      width: 100% !important;
      height: 100% !important;
      max-width: 100% !important;
      max-height: 100% !important;
      min-width: 100% !important;
      min-height: 100% !important;
      object-fit: cover !important;
    }
    /* Review gray box section */
    .testimonial-section {
      padding-top: 50px !important;
      padding-bottom: 50px !important;
    }
    .testimonial-section h3 {
      font-weight: 550 !important;
    }
    /* We Think You'll Love These Section - Make images 25-30% bigger to fill to edge */
    .related-products-section {
      max-width: 100vw !important;
      overflow: hidden !important;
    }
    .related-products-carousel-container {
      max-width: 100vw !important;
      width: 100vw !important;
      overflow-x: scroll !important; /* Let this container scroll */
      -webkit-overflow-scrolling: touch; /* Momentum scrolling for iOS */
      scrollbar-width: none; /* Hide scrollbar for Firefox */
    }
    .related-products-carousel-container::-webkit-scrollbar {
      display: none; /* Hide scrollbar for Chrome, Safari, Opera */
    }
    .related-products-carousel-wrapper {
      overflow: visible !important;
      width: -webkit-fit-content !important;
      width: -moz-fit-content !important;
      width: fit-content !important; /* Allow wrapper to be as wide as its content */
    }
    .related-products-carousel {
      margin-left: 40px !important;
      gap: 13px !important;
      padding-right: 40px !important;
      box-sizing: border-box !important;
    }
    .related-product-item {
      width: calc((100vw - 120px) / 4.5) !important;
      min-width: calc((100vw - 120px) / 4.5) !important;
      flex: 0 0 calc((100vw - 120px) / 4.5) !important;
      max-width: calc((100vw - 120px) / 4.5) !important;
    }
    .related-product-item .upselladjust {
      width: 100% !important;
      max-width: 100% !important;
    }
    .related-product-item h3 {
      font-size: 16px !important;
      font-weight: 400 !important;
    }
    .related-price {
      font-size: 16px !important;
      font-weight: 400 !important;
    }
  }
  </style>
  
  <style>
  // ... existing code ...
  /* --- 5-Star Functions Section: Mobile (default) --- */
  .function-item {
    min-width: 284px !important;
    flex: 0 0 319px !important;
    max-width: 319px !important;
  }
  .function-media-container {
    height: 398px !important;
    max-width: 322px !important;
    min-width: 284px !important;
    aspect-ratio: 0.76 !important;
  }
  .function-media-container img, .function-media-container video {
    max-width: 318px !important;
    max-height: 410px !important;
    min-width: 284px !important;
    min-height: 376px !important;
    width: 100% !important;
    height: 100% !important;
    object-fit: cover !important;
  }
  .function-item h3 {
    font-size: 14px !important;
    font-weight: 700 !important;
    letter-spacing: 0.5px !important;
  }
  .functiondescriptionadjust {
    font-size: 14px !important;
    font-weight: 300 !important;
    letter-spacing: 0.5px !important;
  }
  
  @media (min-width: 901px) {
    /* --- 5-Star Functions Section: Desktop --- */
    .function-item {
      min-width: 379px !important;
      flex: 0 0 405px !important;
      max-width: 379px !important;
    }
    .function-media-container {
      height: 600px !important;
      max-width: 405px !important;
      min-width: 405px !important;
      aspect-ratio: 0.675 !important;
    }
    .function-media-container img, .function-media-container video {
      max-width: 405px !important;
      max-height: 600px !important;
      min-width: 405px !important;
      min-height: 600px !important;
      width: 100% !important;
      height: 100% !important;
      object-fit: cover !important;
    }
    .function-item h3 {
      font-size: 24px !important;
      font-weight: 500 !important;
      letter-spacing: 0.5px !important;
    }
    .functiondescriptionadjust {
      font-size: 18px !important;
      font-weight: 300 !important;
      letter-spacing: 0.5px !important;
      color: #111 !important;
    }
  }
  // ... existing code ...
  
  </style>
  
  <!-- Sticky Add to Bag Button for Mobile Only -->
  <div class="mobile-sticky-add-to-cart" style="display: none;">
    <form action="/cart/add" method="post" enctype="multipart/form-data" id="MobileAddToCartForm">
      <select name="id" id="MobileProductSelect" class="product-single__variants no-js" style="display: none;">
        {% for variant in product.variants %}
          {% if variant.available %}
            <option value="{{ variant.id }}" {% if variant == current_variant %}selected="selected"{% endif %}>
              {{ variant.title }} - {{ variant.price | money_with_currency }}
            </option>
          {% else %}
            <option disabled="disabled">
              {{ variant.title }} - Sold Out
            </option>
          {% endif %}
        {% endfor %}
      </select>
      <button type="submit" name="add" id="MobileAddToCart" class="btn add-to-cart-button{% unless current_variant.available %} disabled{% endunless %}" style="width: 100%; padding: 16px 24px; background-color: #111; color: white; border: none; border-radius: 999px; font-size: 18px; font-weight: bold; cursor: pointer; border-radius:31px !important; margin-bottom: 0; transition: background 0.3s; {% unless current_variant.available %}background-color: #ccc; cursor: not-allowed;{% endunless %}">
        <span id="MobileAddToCartText">{% if current_variant.available %}Add to bag{% else %}Sold out{% endif %}</span>
      </button>
    </form>
  </div>
  
  <style>
  @media (max-width: 900px) {
    .mobile-sticky-add-to-cart {
      display: block !important;
      position: fixed;
      left: 0;
      right: 0;
      bottom: 0;
      width: 100vw;
      z-index: 1000;
      background: #fff;
      box-shadow: 0 -2px 16px rgba(0,0,0,0.08);
     padding: 9px 16px 9px 16px;
      margin: 0;
      border-radius: 0;
      border-top: 1px solid #eee;
    }
    #AddToCartForm {
      display: none !important;
    }
  }
  @media (min-width: 901px) {
    .mobile-sticky-add-to-cart {
      display: none !important;
    }
  }
  </style>
  <script>
  document.addEventListener('DOMContentLoaded', function() {
    // Sync variant selection between desktop and mobile Add to Cart forms
    var mainSelect = document.getElementById('ProductSelect');
    var mobileSelect = document.getElementById('MobileProductSelect');
    if (mainSelect && mobileSelect) {
      mainSelect.addEventListener('change', function() {
        mobileSelect.value = mainSelect.value;
      });
      mobileSelect.addEventListener('change', function() {
        mainSelect.value = mobileSelect.value;
      });
    }
    // Sync Add to Cart button state
    function syncMobileAddToCartState() {
      var mainBtn = document.getElementById('AddToCart');
      var mainBtnText = document.getElementById('AddToCartText');
      var mobileBtn = document.getElementById('MobileAddToCart');
      var mobileBtnText = document.getElementById('MobileAddToCartText');
      if (mainBtn && mobileBtn && mainBtnText && mobileBtnText) {
        mobileBtn.disabled = mainBtn.disabled;
        mobileBtn.classList.toggle('disabled', mainBtn.disabled);
        mobileBtn.style.backgroundColor = mainBtn.style.backgroundColor;
        mobileBtn.style.cursor = mainBtn.style.cursor;
        mobileBtnText.textContent = mainBtnText.textContent;
      }
    }
    document.addEventListener('variant:change', syncMobileAddToCartState);
    syncMobileAddToCartState();
    // Mobile Add to Cart form submit
    var mobileForm = document.getElementById('MobileAddToCartForm');
    if (mobileForm) {
      mobileForm.addEventListener('submit', function(e) {
        e.preventDefault();
        var id = mobileSelect.value;
        var quantity = 1;
        // Use the same addItemToCart function as main form if available
        if (typeof addItemToCart === 'function') {
          addItemToCart(id, quantity);
        } else {
          // Fallback: submit the form normally
          mobileForm.submit();
        }
      });
    }
  });
  </script>
  
  <style>
@media (min-width: 901px) {
  .accordion-item {

    margin-left: 0 !important;
    padding-left: 10px !important;
  }
  .accordion-item::after {
  display:none;
    content: '';
    position: absolute;
    bottom: 0;
    left: 40px;
    right: 40px;
    height: 1px;
    background-color: #eee;
  }
  .accordion-item {
    border-bottom: none !important;
  }
  .desktop-divider {
    display: block !important;
  }
}
  </style>
  <style>
  @media (min-width: 901px) {
    .mobile-only-reviews { display: none !important; }
  }
  @media (max-width: 900px) {
    .mobile-only-reviews { display: block !important; }
  }
</style>
